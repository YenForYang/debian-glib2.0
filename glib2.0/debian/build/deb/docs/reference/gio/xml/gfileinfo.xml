<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GFileInfo">
<refmeta>
<refentrytitle role="top_of_page" id="GFileInfo.top_of_page">GFileInfo</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GFileInfo</refname>
<refpurpose>File Information and Attributes</refpurpose>
</refnamediv>

<refsect1 id="GFileInfo.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-new">g_file_info_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-dup">g_file_info_dup</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-copy-into">g_file_info_copy_into</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-has-attribute">g_file_info_has_attribute</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-has-namespace">g_file_info_has_namespace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="g-file-info-list-attributes">g_file_info_list_attributes</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileAttributeType"><returnvalue>GFileAttributeType</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-type">g_file_info_get_attribute_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-remove-attribute">g_file_info_remove_attribute</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-as-string">g_file_info_get_attribute_as_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-data">g_file_info_get_attribute_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileAttributeStatus"><returnvalue>GFileAttributeStatus</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-status">g_file_info_get_attribute_status</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-string">g_file_info_get_attribute_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-stringv">g_file_info_get_attribute_stringv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-byte-string">g_file_info_get_attribute_byte_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-boolean">g_file_info_get_attribute_boolean</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-uint32">g_file_info_get_attribute_uint32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-int32">g_file_info_get_attribute_int32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-uint64">g_file_info_get_attribute_uint64</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-int64">g_file_info_get_attribute_int64</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GObject"><returnvalue>GObject</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-attribute-object">g_file_info_get_attribute_object</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute">g_file_info_set_attribute</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-status">g_file_info_set_attribute_status</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-string">g_file_info_set_attribute_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-stringv">g_file_info_set_attribute_stringv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-byte-string">g_file_info_set_attribute_byte_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-boolean">g_file_info_set_attribute_boolean</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-uint32">g_file_info_set_attribute_uint32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-int32">g_file_info_set_attribute_int32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-uint64">g_file_info_set_attribute_uint64</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-int64">g_file_info_set_attribute_int64</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-object">g_file_info_set_attribute_object</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-clear-status">g_file_info_clear_status</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileType"><returnvalue>GFileType</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-file-type">g_file_info_get_file_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-is-hidden">g_file_info_get_is_hidden</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-is-backup">g_file_info_get_is_backup</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-is-symlink">g_file_info_get_is_symlink</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-name">g_file_info_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-display-name">g_file_info_get_display_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-edit-name">g_file_info_get_edit_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-icon">g_file_info_get_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-symbolic-icon">g_file_info_get_symbolic_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-content-type">g_file_info_get_content_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="goffset"><returnvalue>goffset</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-size">g_file_info_get_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-modification-time">g_file_info_get_modification_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-symlink-target">g_file_info_get_symlink_target</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-etag">g_file_info_get_etag</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-get-sort-order">g_file_info_get_sort_order</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDateTime"><returnvalue>GDateTime</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-info-get-deletion-date">g_file_info_get_deletion_date</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-attribute-mask">g_file_info_set_attribute_mask</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-unset-attribute-mask">g_file_info_unset_attribute_mask</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-file-type">g_file_info_set_file_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-is-hidden">g_file_info_set_is_hidden</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-is-symlink">g_file_info_set_is_symlink</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-name">g_file_info_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-display-name">g_file_info_set_display_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-edit-name">g_file_info_set_edit_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-icon">g_file_info_set_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-symbolic-icon">g_file_info_set_symbolic_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-content-type">g_file_info_set_content_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-size">g_file_info_set_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-modification-time">g_file_info_set_modification_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-symlink-target">g_file_info_set_symlink_target</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-info-set-sort-order">g_file_info_set_sort_order</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileAttributeMatcher"><returnvalue>GFileAttributeMatcher</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-new">g_file_attribute_matcher_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileAttributeMatcher"><returnvalue>GFileAttributeMatcher</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-ref">g_file_attribute_matcher_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileAttributeMatcher"><returnvalue>GFileAttributeMatcher</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-subtract">g_file_attribute_matcher_subtract</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-unref">g_file_attribute_matcher_unref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-matches">g_file_attribute_matcher_matches</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-matches-only">g_file_attribute_matcher_matches_only</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-enumerate-namespace">g_file_attribute_matcher_enumerate_namespace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-enumerate-next">g_file_attribute_matcher_enumerate_next</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-attribute-matcher-to-string">g_file_attribute_matcher_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<anchor id="GFileAttributeMatcher"/><refsect1 id="GFileInfo.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GFileAttributeMatcher-struct">GFileAttributeMatcher</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GFileType">GFileType</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GFileInfo-struct">GFileInfo</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-TYPE:CAPS">G_FILE_ATTRIBUTE_STANDARD_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-IS-HIDDEN:CAPS">G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-IS-BACKUP:CAPS">G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-IS-SYMLINK:CAPS">G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-IS-VIRTUAL:CAPS">G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-IS-VOLATILE:CAPS">G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-NAME:CAPS">G_FILE_ATTRIBUTE_STANDARD_NAME</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-DISPLAY-NAME:CAPS">G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-EDIT-NAME:CAPS">G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-COPY-NAME:CAPS">G_FILE_ATTRIBUTE_STANDARD_COPY_NAME</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-DESCRIPTION:CAPS">G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-ICON:CAPS">G_FILE_ATTRIBUTE_STANDARD_ICON</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-SYMBOLIC-ICON:CAPS">G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-CONTENT-TYPE:CAPS">G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-FAST-CONTENT-TYPE:CAPS">G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-SIZE:CAPS">G_FILE_ATTRIBUTE_STANDARD_SIZE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-ALLOCATED-SIZE:CAPS">G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-SYMLINK-TARGET:CAPS">G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-TARGET-URI:CAPS">G_FILE_ATTRIBUTE_STANDARD_TARGET_URI</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-STANDARD-SORT-ORDER:CAPS">G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ETAG-VALUE:CAPS">G_FILE_ATTRIBUTE_ETAG_VALUE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ID-FILE:CAPS">G_FILE_ATTRIBUTE_ID_FILE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ID-FILESYSTEM:CAPS">G_FILE_ATTRIBUTE_ID_FILESYSTEM</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ACCESS-CAN-READ:CAPS">G_FILE_ATTRIBUTE_ACCESS_CAN_READ</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ACCESS-CAN-WRITE:CAPS">G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ACCESS-CAN-EXECUTE:CAPS">G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ACCESS-CAN-DELETE:CAPS">G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ACCESS-CAN-TRASH:CAPS">G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-ACCESS-CAN-RENAME:CAPS">G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-MOUNT:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-UNMOUNT:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-EJECT:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-UNIX-DEVICE:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-UNIX-DEVICE-FILE:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-HAL-UDI:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-START:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-START-DEGRADED:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-STOP:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-START-STOP-TYPE:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-POLL:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-MOUNTABLE-IS-MEDIA-CHECK-AUTOMATIC:CAPS">G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TIME-MODIFIED:CAPS">G_FILE_ATTRIBUTE_TIME_MODIFIED</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TIME-MODIFIED-USEC:CAPS">G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TIME-ACCESS:CAPS">G_FILE_ATTRIBUTE_TIME_ACCESS</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TIME-ACCESS-USEC:CAPS">G_FILE_ATTRIBUTE_TIME_ACCESS_USEC</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TIME-CHANGED:CAPS">G_FILE_ATTRIBUTE_TIME_CHANGED</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TIME-CHANGED-USEC:CAPS">G_FILE_ATTRIBUTE_TIME_CHANGED_USEC</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TIME-CREATED:CAPS">G_FILE_ATTRIBUTE_TIME_CREATED</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TIME-CREATED-USEC:CAPS">G_FILE_ATTRIBUTE_TIME_CREATED_USEC</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-DEVICE:CAPS">G_FILE_ATTRIBUTE_UNIX_DEVICE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-INODE:CAPS">G_FILE_ATTRIBUTE_UNIX_INODE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-MODE:CAPS">G_FILE_ATTRIBUTE_UNIX_MODE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-NLINK:CAPS">G_FILE_ATTRIBUTE_UNIX_NLINK</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-UID:CAPS">G_FILE_ATTRIBUTE_UNIX_UID</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-GID:CAPS">G_FILE_ATTRIBUTE_UNIX_GID</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-RDEV:CAPS">G_FILE_ATTRIBUTE_UNIX_RDEV</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-BLOCK-SIZE:CAPS">G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-BLOCKS:CAPS">G_FILE_ATTRIBUTE_UNIX_BLOCKS</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-UNIX-IS-MOUNTPOINT:CAPS">G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-DOS-IS-ARCHIVE:CAPS">G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-DOS-IS-SYSTEM:CAPS">G_FILE_ATTRIBUTE_DOS_IS_SYSTEM</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-OWNER-USER:CAPS">G_FILE_ATTRIBUTE_OWNER_USER</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-OWNER-USER-REAL:CAPS">G_FILE_ATTRIBUTE_OWNER_USER_REAL</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-OWNER-GROUP:CAPS">G_FILE_ATTRIBUTE_OWNER_GROUP</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-THUMBNAIL-PATH:CAPS">G_FILE_ATTRIBUTE_THUMBNAIL_PATH</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-THUMBNAILING-FAILED:CAPS">G_FILE_ATTRIBUTE_THUMBNAILING_FAILED</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-THUMBNAIL-IS-VALID:CAPS">G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-PREVIEW-ICON:CAPS">G_FILE_ATTRIBUTE_PREVIEW_ICON</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-FILESYSTEM-SIZE:CAPS">G_FILE_ATTRIBUTE_FILESYSTEM_SIZE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-FILESYSTEM-FREE:CAPS">G_FILE_ATTRIBUTE_FILESYSTEM_FREE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-FILESYSTEM-USED:CAPS">G_FILE_ATTRIBUTE_FILESYSTEM_USED</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-FILESYSTEM-TYPE:CAPS">G_FILE_ATTRIBUTE_FILESYSTEM_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-FILESYSTEM-READONLY:CAPS">G_FILE_ATTRIBUTE_FILESYSTEM_READONLY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-FILESYSTEM-USE-PREVIEW:CAPS">G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-FILESYSTEM-REMOTE:CAPS">G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-GVFS-BACKEND:CAPS">G_FILE_ATTRIBUTE_GVFS_BACKEND</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-SELINUX-CONTEXT:CAPS">G_FILE_ATTRIBUTE_SELINUX_CONTEXT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TRASH-ITEM-COUNT:CAPS">G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TRASH-ORIG-PATH:CAPS">G_FILE_ATTRIBUTE_TRASH_ORIG_PATH</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-TRASH-DELETION-DATE:CAPS">G_FILE_ATTRIBUTE_TRASH_DELETION_DATE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="G-FILE-ATTRIBUTE-RECENT-MODIFIED:CAPS">G_FILE_ATTRIBUTE_RECENT_MODIFIED</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GFileInfo.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GBoxed">GBoxed</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GFileAttributeMatcher
    <link linkend="GEnum">GEnum</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GFileType
    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GFileInfo
</screen>
</refsect1>

<refsect1 id="GFileInfo.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GFileInfo.description" role="desc">
<title role="desc.title">Description</title>
<para>Functionality for manipulating basic metadata for files. <link linkend="GFileInfo"><type>GFileInfo</type></link>
implements methods for getting information that all files should
contain, and allows for manipulation of extended attributes.</para>
<para>See <link linkend="gio-GFileAttribute">GFileAttribute</link> for more information on how
GIO handles file attributes.</para>
<para>To obtain a <link linkend="GFileInfo"><type>GFileInfo</type></link> for a <link linkend="GFile"><type>GFile</type></link>, use <link linkend="g-file-query-info"><function>g_file_query_info()</function></link> (or its
async variant). To obtain a <link linkend="GFileInfo"><type>GFileInfo</type></link> for a file input or output
stream, use <link linkend="g-file-input-stream-query-info"><function>g_file_input_stream_query_info()</function></link> or
<link linkend="g-file-output-stream-query-info"><function>g_file_output_stream_query_info()</function></link> (or their async variants).</para>
<para>To change the actual attributes of a file, you should then set the
attribute in the <link linkend="GFileInfo"><type>GFileInfo</type></link> and call <link linkend="g-file-set-attributes-from-info"><function>g_file_set_attributes_from_info()</function></link>
or <link linkend="g-file-set-attributes-async"><function>g_file_set_attributes_async()</function></link> on a GFile.</para>
<para>However, not all attributes can be changed in the file. For instance,
the actual size of a file cannot be changed via <link linkend="g-file-info-set-size"><function>g_file_info_set_size()</function></link>.
You may call <link linkend="g-file-query-settable-attributes"><function>g_file_query_settable_attributes()</function></link> and
<link linkend="g-file-query-writable-namespaces"><function>g_file_query_writable_namespaces()</function></link> to discover the settable attributes
of a particular file at runtime.</para>
<para><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> allows for searching through a <link linkend="GFileInfo"><type>GFileInfo</type></link> for
attributes.</para>

</refsect1>
<refsect1 id="GFileInfo.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-file-info-new" role="function">
<title>g_file_info_new&#160;()</title>
<indexterm zone="g-file-info-new"><primary sortas="file_info_new">g_file_info_new</primary></indexterm>
<programlisting language="C"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
g_file_info_new (<parameter><type>void</type></parameter>);</programlisting>
<para>Creates a new file info structure.</para>
<refsect3 id="g-file-info-new.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-dup" role="function">
<title>g_file_info_dup&#160;()</title>
<indexterm zone="g-file-info-dup"><primary sortas="file_info_dup">g_file_info_dup</primary></indexterm>
<programlisting language="C"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
g_file_info_dup (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *other</parameter>);</programlisting>
<para>Duplicates a file info structure.</para>
<refsect3 id="g-file-info-dup.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>other</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-dup.returns" role="returns">
<title>Returns</title>
<para>a duplicate <link linkend="GFileInfo"><type>GFileInfo</type></link> of <parameter>other</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-file-info-copy-into" role="function">
<title>g_file_info_copy_into&#160;()</title>
<indexterm zone="g-file-info-copy-into"><primary sortas="file_info_copy_into">g_file_info_copy_into</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_copy_into (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *src_info</parameter>,
                       <parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *dest_info</parameter>);</programlisting>
<para>First clears all of the <link linkend="gio-GFileAttribute">GFileAttribute</link> of <parameter>dest_info</parameter>
,
and then copies all of the file attributes from <parameter>src_info</parameter>
 to <parameter>dest_info</parameter>
.</para>
<refsect3 id="g-file-info-copy-into.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src_info</para></entry>
<entry role="parameter_description"><para>source to copy attributes from.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dest_info</para></entry>
<entry role="parameter_description"><para>destination to copy attributes to.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-has-attribute" role="function">
<title>g_file_info_has_attribute&#160;()</title>
<indexterm zone="g-file-info-has-attribute"><primary sortas="file_info_has_attribute">g_file_info_has_attribute</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_info_has_attribute (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                           <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Checks if a file info structure has an attribute named <parameter>attribute</parameter>
.</para>
<refsect3 id="g-file-info-has-attribute.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-has-attribute.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>Ginfo</parameter>
has an attribute named <parameter>attribute</parameter>
,
<link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-has-namespace" role="function" condition="since:2.22">
<title>g_file_info_has_namespace&#160;()</title>
<indexterm zone="g-file-info-has-namespace" role="2.22"><primary sortas="file_info_has_namespace">g_file_info_has_namespace</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_info_has_namespace (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                           <parameter>const <link linkend="char"><type>char</type></link> *name_space</parameter>);</programlisting>
<para>Checks if a file info structure has an attribute in the
specified <parameter>name_space</parameter>
.</para>
<refsect3 id="g-file-info-has-namespace.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name_space</para></entry>
<entry role="parameter_description"><para>a file attribute namespace.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-has-namespace.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>Ginfo</parameter>
has an attribute in <parameter>name_space</parameter>
,
<link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="g-file-info-list-attributes" role="function">
<title>g_file_info_list_attributes&#160;()</title>
<indexterm zone="g-file-info-list-attributes"><primary sortas="file_info_list_attributes">g_file_info_list_attributes</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
g_file_info_list_attributes (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                             <parameter>const <link linkend="char"><type>char</type></link> *name_space</parameter>);</programlisting>
<para>Lists the file info structure's attributes.</para>
<refsect3 id="g-file-info-list-attributes.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name_space</para></entry>
<entry role="parameter_description"><para>a file attribute key's namespace, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to list
all attributes. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-list-attributes.returns" role="returns">
<title>Returns</title>
<para>a
null-terminated array of strings of all of the possible attribute
types for the given <parameter>name_space</parameter>
, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>array</acronym> zero-terminated=1][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-type" role="function">
<title>g_file_info_get_attribute_type&#160;()</title>
<indexterm zone="g-file-info-get-attribute-type"><primary sortas="file_info_get_attribute_type">g_file_info_get_attribute_type</primary></indexterm>
<programlisting language="C"><link linkend="GFileAttributeType"><returnvalue>GFileAttributeType</returnvalue></link>
g_file_info_get_attribute_type (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets the attribute type for an attribute key.</para>
<refsect3 id="g-file-info-get-attribute-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-type.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> for the given <parameter>attribute</parameter>
, or
<link linkend="G-FILE-ATTRIBUTE-TYPE-INVALID:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_INVALID</literal></link> if the key is not set.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-remove-attribute" role="function">
<title>g_file_info_remove_attribute&#160;()</title>
<indexterm zone="g-file-info-remove-attribute"><primary sortas="file_info_remove_attribute">g_file_info_remove_attribute</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_remove_attribute (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                              <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Removes all cases of <parameter>attribute</parameter>
 from <parameter>info</parameter>
 if it exists.</para>
<refsect3 id="g-file-info-remove-attribute.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-as-string" role="function">
<title>g_file_info_get_attribute_as_string&#160;()</title>
<indexterm zone="g-file-info-get-attribute-as-string"><primary sortas="file_info_get_attribute_as_string">g_file_info_get_attribute_as_string</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_attribute_as_string (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                     <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets the value of a attribute, formated as a string.
This escapes things as needed to make the string valid
utf8.</para>
<refsect3 id="g-file-info-get-attribute-as-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-as-string.returns" role="returns">
<title>Returns</title>
<para> a UTF-8 string associated with the given <parameter>attribute</parameter>
.
When you're done with the string it must be freed with <link linkend="g-free"><function>g_free()</function></link>.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-data" role="function">
<title>g_file_info_get_attribute_data&#160;()</title>
<indexterm zone="g-file-info-get-attribute-data"><primary sortas="file_info_get_attribute_data">g_file_info_get_attribute_data</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_info_get_attribute_data (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                <parameter><link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> *type</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> *value_pp</parameter>,
                                <parameter><link linkend="GFileAttributeStatus"><type>GFileAttributeStatus</type></link> *status</parameter>);</programlisting>
<para>Gets the attribute type, value and status for an attribute key.</para>
<refsect3 id="g-file-info-get-attribute-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>return location for the attribute type, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>value_pp</para></entry>
<entry role="parameter_description"><para>return location for the
attribute value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>; the attribute value will not be <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>][<acronym>not nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>status</para></entry>
<entry role="parameter_description"><para>return location for the attribute status, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-data.returns" role="returns">
<title>Returns</title>
<para><link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>info</parameter>
has an attribute named <parameter>attribute</parameter>
,
<link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-status" role="function">
<title>g_file_info_get_attribute_status&#160;()</title>
<indexterm zone="g-file-info-get-attribute-status"><primary sortas="file_info_get_attribute_status">g_file_info_get_attribute_status</primary></indexterm>
<programlisting language="C"><link linkend="GFileAttributeStatus"><returnvalue>GFileAttributeStatus</returnvalue></link>
g_file_info_get_attribute_status (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets the attribute status for an attribute key.</para>
<refsect3 id="g-file-info-get-attribute-status.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-status.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GFileAttributeStatus"><type>GFileAttributeStatus</type></link> for the given <parameter>attribute</parameter>
, or
<link linkend="G-FILE-ATTRIBUTE-STATUS-UNSET:CAPS"><literal>G_FILE_ATTRIBUTE_STATUS_UNSET</literal></link> if the key is invalid.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-string" role="function">
<title>g_file_info_get_attribute_string&#160;()</title>
<indexterm zone="g-file-info-get-attribute-string"><primary sortas="file_info_get_attribute_string">g_file_info_get_attribute_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_attribute_string (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets the value of a string attribute. If the attribute does
not contain a string, <link linkend="NULL:CAPS"><literal>NULL</literal></link> will be returned.</para>
<refsect3 id="g-file-info-get-attribute-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-string.returns" role="returns">
<title>Returns</title>
<para> the contents of the <parameter>attribute</parameter>
value as a UTF-8 string, or
<link linkend="NULL:CAPS"><literal>NULL</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-stringv" role="function" condition="since:2.22">
<title>g_file_info_get_attribute_stringv&#160;()</title>
<indexterm zone="g-file-info-get-attribute-stringv" role="2.22"><primary sortas="file_info_get_attribute_stringv">g_file_info_get_attribute_stringv</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
g_file_info_get_attribute_stringv (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                   <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets the value of a stringv attribute. If the attribute does
not contain a stringv, <link linkend="NULL:CAPS"><literal>NULL</literal></link> will be returned.</para>
<refsect3 id="g-file-info-get-attribute-stringv.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-stringv.returns" role="returns">
<title>Returns</title>
<para>the contents of the <parameter>attribute</parameter>
value as a stringv, or
<link linkend="NULL:CAPS"><literal>NULL</literal></link> otherwise. Do not free. These returned strings are UTF-8. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="g-file-info-get-attribute-byte-string" role="function">
<title>g_file_info_get_attribute_byte_string&#160;()</title>
<indexterm zone="g-file-info-get-attribute-byte-string"><primary sortas="file_info_get_attribute_byte_string">g_file_info_get_attribute_byte_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_attribute_byte_string (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                       <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets the value of a byte string attribute. If the attribute does
not contain a byte string, <link linkend="NULL:CAPS"><literal>NULL</literal></link> will be returned.</para>
<refsect3 id="g-file-info-get-attribute-byte-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-byte-string.returns" role="returns">
<title>Returns</title>
<para> the contents of the <parameter>attribute</parameter>
value as a byte string, or
<link linkend="NULL:CAPS"><literal>NULL</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-boolean" role="function">
<title>g_file_info_get_attribute_boolean&#160;()</title>
<indexterm zone="g-file-info-get-attribute-boolean"><primary sortas="file_info_get_attribute_boolean">g_file_info_get_attribute_boolean</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_info_get_attribute_boolean (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                   <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets the value of a boolean attribute. If the attribute does not
contain a boolean value, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> will be returned.</para>
<refsect3 id="g-file-info-get-attribute-boolean.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-boolean.returns" role="returns">
<title>Returns</title>
<para> the boolean value contained within the attribute.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-uint32" role="function">
<title>g_file_info_get_attribute_uint32&#160;()</title>
<indexterm zone="g-file-info-get-attribute-uint32"><primary sortas="file_info_get_attribute_uint32">g_file_info_get_attribute_uint32</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
g_file_info_get_attribute_uint32 (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets an unsigned 32-bit integer contained within the attribute. If the
attribute does not contain an unsigned 32-bit integer, or is invalid,
0 will be returned.</para>
<refsect3 id="g-file-info-get-attribute-uint32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-uint32.returns" role="returns">
<title>Returns</title>
<para> an unsigned 32-bit integer from the attribute.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-int32" role="function">
<title>g_file_info_get_attribute_int32&#160;()</title>
<indexterm zone="g-file-info-get-attribute-int32"><primary sortas="file_info_get_attribute_int32">g_file_info_get_attribute_int32</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
g_file_info_get_attribute_int32 (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets a signed 32-bit integer contained within the attribute. If the
attribute does not contain a signed 32-bit integer, or is invalid,
0 will be returned.</para>
<refsect3 id="g-file-info-get-attribute-int32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-int32.returns" role="returns">
<title>Returns</title>
<para> a signed 32-bit integer from the attribute.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-uint64" role="function">
<title>g_file_info_get_attribute_uint64&#160;()</title>
<indexterm zone="g-file-info-get-attribute-uint64"><primary sortas="file_info_get_attribute_uint64">g_file_info_get_attribute_uint64</primary></indexterm>
<programlisting language="C"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
g_file_info_get_attribute_uint64 (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets a unsigned 64-bit integer contained within the attribute. If the
attribute does not contain an unsigned 64-bit integer, or is invalid,
0 will be returned.</para>
<refsect3 id="g-file-info-get-attribute-uint64.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-uint64.returns" role="returns">
<title>Returns</title>
<para> a unsigned 64-bit integer from the attribute.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-int64" role="function">
<title>g_file_info_get_attribute_int64&#160;()</title>
<indexterm zone="g-file-info-get-attribute-int64"><primary sortas="file_info_get_attribute_int64">g_file_info_get_attribute_int64</primary></indexterm>
<programlisting language="C"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
g_file_info_get_attribute_int64 (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets a signed 64-bit integer contained within the attribute. If the
attribute does not contain an signed 64-bit integer, or is invalid,
0 will be returned.</para>
<refsect3 id="g-file-info-get-attribute-int64.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-int64.returns" role="returns">
<title>Returns</title>
<para> a signed 64-bit integer from the attribute.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-attribute-object" role="function">
<title>g_file_info_get_attribute_object&#160;()</title>
<indexterm zone="g-file-info-get-attribute-object"><primary sortas="file_info_get_attribute_object">g_file_info_get_attribute_object</primary></indexterm>
<programlisting language="C"><link linkend="GObject"><returnvalue>GObject</returnvalue></link>&#160;*
g_file_info_get_attribute_object (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Gets the value of a <link linkend="GObject"><type>GObject</type></link> attribute. If the attribute does
not contain a <link linkend="GObject"><type>GObject</type></link>, <link linkend="NULL:CAPS"><literal>NULL</literal></link> will be returned.</para>
<refsect3 id="g-file-info-get-attribute-object.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-attribute-object.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GObject"><type>GObject</type></link> associated with the given <parameter>attribute</parameter>
, or
<link linkend="NULL:CAPS"><literal>NULL</literal></link> otherwise. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute" role="function">
<title>g_file_info_set_attribute&#160;()</title>
<indexterm zone="g-file-info-set-attribute"><primary sortas="file_info_set_attribute">g_file_info_set_attribute</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                           <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                           <parameter><link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> type</parameter>,
                           <parameter><link linkend="gpointer"><type>gpointer</type></link> value_p</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given value, if possible. To unset the
attribute, use <link linkend="G-FILE-ATTRIBUTE-TYPE-INVALID:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_INVALID</literal></link> for <parameter>type</parameter>
.</para>
<refsect3 id="g-file-info-set-attribute.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value_p</para></entry>
<entry role="parameter_description"><para>pointer to the value. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>not nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-status" role="function" condition="since:2.22">
<title>g_file_info_set_attribute_status&#160;()</title>
<indexterm zone="g-file-info-set-attribute-status" role="2.22"><primary sortas="file_info_set_attribute_status">g_file_info_set_attribute_status</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_info_set_attribute_status (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                  <parameter><link linkend="GFileAttributeStatus"><type>GFileAttributeStatus</type></link> status</parameter>);</programlisting>
<para>Sets the attribute status for an attribute key. This is only
needed by external code that implement <link linkend="g-file-set-attributes-from-info"><function>g_file_set_attributes_from_info()</function></link>
or similar functions.</para>
<para>The attribute must exist in <parameter>info</parameter>
 for this to work. Otherwise <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>
is returned and <parameter>info</parameter>
 is unchanged.</para>
<refsect3 id="g-file-info-set-attribute-status.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>status</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeStatus"><type>GFileAttributeStatus</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-set-attribute-status.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the status was changed, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if the key was not set.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="g-file-info-set-attribute-string" role="function">
<title>g_file_info_set_attribute_string&#160;()</title>
<indexterm zone="g-file-info-set-attribute-string"><primary sortas="file_info_set_attribute_string">g_file_info_set_attribute_string</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_string (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<refsect3 id="g-file-info-set-attribute-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>a UTF-8 string.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-stringv" role="function">
<title>g_file_info_set_attribute_stringv&#160;()</title>
<indexterm zone="g-file-info-set-attribute-stringv"><primary sortas="file_info_set_attribute_stringv">g_file_info_set_attribute_stringv</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_stringv (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                   <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                   <parameter><link linkend="char"><type>char</type></link> **attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<para>Sinze: 2.22</para>
<refsect3 id="g-file-info-set-attribute-stringv.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>a <link linkend="NULL:CAPS"><literal>NULL</literal></link> terminated array of UTF-8 strings. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym>][<acronym>element-type</acronym> utf8]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-byte-string" role="function">
<title>g_file_info_set_attribute_byte_string&#160;()</title>
<indexterm zone="g-file-info-set-attribute-byte-string"><primary sortas="file_info_set_attribute_byte_string">g_file_info_set_attribute_byte_string</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_byte_string (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                       <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                       <parameter>const <link linkend="char"><type>char</type></link> *attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<refsect3 id="g-file-info-set-attribute-byte-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>a byte string.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-boolean" role="function">
<title>g_file_info_set_attribute_boolean&#160;()</title>
<indexterm zone="g-file-info-set-attribute-boolean"><primary sortas="file_info_set_attribute_boolean">g_file_info_set_attribute_boolean</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_boolean (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                   <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                   <parameter><link linkend="gboolean"><type>gboolean</type></link> attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<refsect3 id="g-file-info-set-attribute-boolean.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>a boolean value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-uint32" role="function">
<title>g_file_info_set_attribute_uint32&#160;()</title>
<indexterm zone="g-file-info-set-attribute-uint32"><primary sortas="file_info_set_attribute_uint32">g_file_info_set_attribute_uint32</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_uint32 (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                  <parameter><link linkend="guint32"><type>guint32</type></link> attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<refsect3 id="g-file-info-set-attribute-uint32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>an unsigned 32-bit integer.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-int32" role="function">
<title>g_file_info_set_attribute_int32&#160;()</title>
<indexterm zone="g-file-info-set-attribute-int32"><primary sortas="file_info_set_attribute_int32">g_file_info_set_attribute_int32</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_int32 (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                 <parameter><link linkend="gint32"><type>gint32</type></link> attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<refsect3 id="g-file-info-set-attribute-int32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>a signed 32-bit integer</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-uint64" role="function">
<title>g_file_info_set_attribute_uint64&#160;()</title>
<indexterm zone="g-file-info-set-attribute-uint64"><primary sortas="file_info_set_attribute_uint64">g_file_info_set_attribute_uint64</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_uint64 (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                  <parameter><link linkend="guint64"><type>guint64</type></link> attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<refsect3 id="g-file-info-set-attribute-uint64.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>an unsigned 64-bit integer.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-int64" role="function">
<title>g_file_info_set_attribute_int64&#160;()</title>
<indexterm zone="g-file-info-set-attribute-int64"><primary sortas="file_info_set_attribute_int64">g_file_info_set_attribute_int64</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_int64 (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                 <parameter><link linkend="gint64"><type>gint64</type></link> attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<refsect3 id="g-file-info-set-attribute-int64.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>attribute name to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>int64 value to set attribute to.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-attribute-object" role="function">
<title>g_file_info_set_attribute_object&#160;()</title>
<indexterm zone="g-file-info-set-attribute-object"><primary sortas="file_info_set_attribute_object">g_file_info_set_attribute_object</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_object (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>,
                                  <parameter><link linkend="GObject"><type>GObject</type></link> *attr_value</parameter>);</programlisting>
<para>Sets the <parameter>attribute</parameter>
 to contain the given <parameter>attr_value</parameter>
,
if possible.</para>
<refsect3 id="g-file-info-set-attribute-object.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attr_value</para></entry>
<entry role="parameter_description"><para>a <link linkend="GObject"><type>GObject</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-clear-status" role="function">
<title>g_file_info_clear_status&#160;()</title>
<indexterm zone="g-file-info-clear-status"><primary sortas="file_info_clear_status">g_file_info_clear_status</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_clear_status (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Clears the status information from <parameter>info</parameter>
.</para>
<refsect3 id="g-file-info-clear-status.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-file-type" role="function">
<title>g_file_info_get_file_type&#160;()</title>
<indexterm zone="g-file-info-get-file-type"><primary sortas="file_info_get_file_type">g_file_info_get_file_type</primary></indexterm>
<programlisting language="C"><link linkend="GFileType"><returnvalue>GFileType</returnvalue></link>
g_file_info_get_file_type (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets a file's type (whether it is a regular file, symlink, etc).
This is different from the file's content type, see <link linkend="g-file-info-get-content-type"><function>g_file_info_get_content_type()</function></link>.</para>
<refsect3 id="g-file-info-get-file-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-file-type.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GFileType"><type>GFileType</type></link> for the given file.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-is-hidden" role="function">
<title>g_file_info_get_is_hidden&#160;()</title>
<indexterm zone="g-file-info-get-is-hidden"><primary sortas="file_info_get_is_hidden">g_file_info_get_is_hidden</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_info_get_is_hidden (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Checks if a file is hidden.</para>
<refsect3 id="g-file-info-get-is-hidden.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-is-hidden.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the file is a hidden file, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-is-backup" role="function">
<title>g_file_info_get_is_backup&#160;()</title>
<indexterm zone="g-file-info-get-is-backup"><primary sortas="file_info_get_is_backup">g_file_info_get_is_backup</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_info_get_is_backup (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Checks if a file is a backup file.</para>
<refsect3 id="g-file-info-get-is-backup.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-is-backup.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if file is a backup file, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-is-symlink" role="function">
<title>g_file_info_get_is_symlink&#160;()</title>
<indexterm zone="g-file-info-get-is-symlink"><primary sortas="file_info_get_is_symlink">g_file_info_get_is_symlink</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_info_get_is_symlink (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Checks if a file is a symlink.</para>
<refsect3 id="g-file-info-get-is-symlink.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-is-symlink.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the given <parameter>info</parameter>
is a symlink.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-name" role="function">
<title>g_file_info_get_name&#160;()</title>
<indexterm zone="g-file-info-get-name"><primary sortas="file_info_get_name">g_file_info_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_name (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the name for a file.</para>
<refsect3 id="g-file-info-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-name.returns" role="returns">
<title>Returns</title>
<para>a string containing the file name. </para>
<para><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-display-name" role="function">
<title>g_file_info_get_display_name&#160;()</title>
<indexterm zone="g-file-info-get-display-name"><primary sortas="file_info_get_display_name">g_file_info_get_display_name</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_display_name (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets a display name for a file.</para>
<refsect3 id="g-file-info-get-display-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-display-name.returns" role="returns">
<title>Returns</title>
<para> a string containing the display name.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-edit-name" role="function">
<title>g_file_info_get_edit_name&#160;()</title>
<indexterm zone="g-file-info-get-edit-name"><primary sortas="file_info_get_edit_name">g_file_info_get_edit_name</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_edit_name (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the edit name for a file.</para>
<refsect3 id="g-file-info-get-edit-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-edit-name.returns" role="returns">
<title>Returns</title>
<para> a string containing the edit name.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-icon" role="function">
<title>g_file_info_get_icon&#160;()</title>
<indexterm zone="g-file-info-get-icon"><primary sortas="file_info_get_icon">g_file_info_get_icon</primary></indexterm>
<programlisting language="C"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
g_file_info_get_icon (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the icon for a file.</para>
<refsect3 id="g-file-info-get-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-icon.returns" role="returns">
<title>Returns</title>
<para><link linkend="GIcon"><type>GIcon</type></link> for the given <parameter>info</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-symbolic-icon" role="function" condition="since:2.34">
<title>g_file_info_get_symbolic_icon&#160;()</title>
<indexterm zone="g-file-info-get-symbolic-icon" role="2.34"><primary sortas="file_info_get_symbolic_icon">g_file_info_get_symbolic_icon</primary></indexterm>
<programlisting language="C"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
g_file_info_get_symbolic_icon (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the symbolic icon for a file.</para>
<refsect3 id="g-file-info-get-symbolic-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-symbolic-icon.returns" role="returns">
<title>Returns</title>
<para><link linkend="GIcon"><type>GIcon</type></link> for the given <parameter>info</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.34">2.34</link></para></refsect2>
<refsect2 id="g-file-info-get-content-type" role="function">
<title>g_file_info_get_content_type&#160;()</title>
<indexterm zone="g-file-info-get-content-type"><primary sortas="file_info_get_content_type">g_file_info_get_content_type</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_content_type (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the file's content type.</para>
<refsect3 id="g-file-info-get-content-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-content-type.returns" role="returns">
<title>Returns</title>
<para> a string containing the file's content type.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-size" role="function">
<title>g_file_info_get_size&#160;()</title>
<indexterm zone="g-file-info-get-size"><primary sortas="file_info_get_size">g_file_info_get_size</primary></indexterm>
<programlisting language="C"><link linkend="goffset"><returnvalue>goffset</returnvalue></link>
g_file_info_get_size (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the file's size.</para>
<refsect3 id="g-file-info-get-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-size.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="goffset"><type>goffset</type></link> containing the file's size.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-modification-time" role="function">
<title>g_file_info_get_modification_time&#160;()</title>
<indexterm zone="g-file-info-get-modification-time"><primary sortas="file_info_get_modification_time">g_file_info_get_modification_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_get_modification_time (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                   <parameter><link linkend="GTimeVal"><type>GTimeVal</type></link> *result</parameter>);</programlisting>
<para>Gets the modification time of the current <parameter>info</parameter>
 and sets it
in <parameter>result</parameter>
.</para>
<refsect3 id="g-file-info-get-modification-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>a <link linkend="GTimeVal"><type>GTimeVal</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out caller-allocates</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-symlink-target" role="function">
<title>g_file_info_get_symlink_target&#160;()</title>
<indexterm zone="g-file-info-get-symlink-target"><primary sortas="file_info_get_symlink_target">g_file_info_get_symlink_target</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_symlink_target (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the symlink target for a given <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para>
<refsect3 id="g-file-info-get-symlink-target.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-symlink-target.returns" role="returns">
<title>Returns</title>
<para> a string containing the symlink target.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-etag" role="function">
<title>g_file_info_get_etag&#160;()</title>
<indexterm zone="g-file-info-get-etag"><primary sortas="file_info_get_etag">g_file_info_get_etag</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_info_get_etag (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the <link linkend="gfile-etag">entity tag</link> for a given
<link linkend="GFileInfo"><type>GFileInfo</type></link>. See <link linkend="G-FILE-ATTRIBUTE-ETAG-VALUE:CAPS"><literal>G_FILE_ATTRIBUTE_ETAG_VALUE</literal></link>.</para>
<refsect3 id="g-file-info-get-etag.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-etag.returns" role="returns">
<title>Returns</title>
<para> a string containing the value of the "etag:value" attribute.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-sort-order" role="function">
<title>g_file_info_get_sort_order&#160;()</title>
<indexterm zone="g-file-info-get-sort-order"><primary sortas="file_info_get_sort_order">g_file_info_get_sort_order</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
g_file_info_get_sort_order (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Gets the value of the sort_order attribute from the <link linkend="GFileInfo"><type>GFileInfo</type></link>.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-SORT-ORDER:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER</literal></link>.</para>
<refsect3 id="g-file-info-get-sort-order.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-sort-order.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="gint32"><type>gint32</type></link> containing the value of the "standard::sort_order" attribute.</para>
</refsect3></refsect2>
<refsect2 id="g-file-info-get-deletion-date" role="function" condition="since:2.36">
<title>g_file_info_get_deletion_date&#160;()</title>
<indexterm zone="g-file-info-get-deletion-date" role="2.36"><primary sortas="file_info_get_deletion_date">g_file_info_get_deletion_date</primary></indexterm>
<programlisting language="C"><link linkend="GDateTime"><returnvalue>GDateTime</returnvalue></link>&#160;*
g_file_info_get_deletion_date (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Returns the <link linkend="GDateTime"><type>GDateTime</type></link> representing the deletion date of the file, as
available in G_FILE_ATTRIBUTE_TRASH_DELETION_DATE. If the
G_FILE_ATTRIBUTE_TRASH_DELETION_DATE attribute is unset, <link linkend="NULL:CAPS"><literal>NULL</literal></link> is returned.</para>
<refsect3 id="g-file-info-get-deletion-date.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-info-get-deletion-date.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GDateTime"><type>GDateTime</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.36">2.36</link></para></refsect2>
<refsect2 id="g-file-info-set-attribute-mask" role="function">
<title>g_file_info_set_attribute_mask&#160;()</title>
<indexterm zone="g-file-info-set-attribute-mask"><primary sortas="file_info_set_attribute_mask">g_file_info_set_attribute_mask</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_attribute_mask (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                <parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *mask</parameter>);</programlisting>
<para>Sets <parameter>mask</parameter>
 on <parameter>info</parameter>
 to match specific attribute types.</para>
<refsect3 id="g-file-info-set-attribute-mask.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mask</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-unset-attribute-mask" role="function">
<title>g_file_info_unset_attribute_mask&#160;()</title>
<indexterm zone="g-file-info-unset-attribute-mask"><primary sortas="file_info_unset_attribute_mask">g_file_info_unset_attribute_mask</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_unset_attribute_mask (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Unsets a mask set by <link linkend="g-file-info-set-attribute-mask"><function>g_file_info_set_attribute_mask()</function></link>, if one
is set.</para>
<refsect3 id="g-file-info-unset-attribute-mask.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para><link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-file-type" role="function">
<title>g_file_info_set_file_type&#160;()</title>
<indexterm zone="g-file-info-set-file-type"><primary sortas="file_info_set_file_type">g_file_info_set_file_type</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_file_type (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                           <parameter><link linkend="GFileType"><type>GFileType</type></link> type</parameter>);</programlisting>
<para>Sets the file type in a <link linkend="GFileInfo"><type>GFileInfo</type></link> to <parameter>type</parameter>
.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-TYPE:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_TYPE</literal></link>.</para>
<refsect3 id="g-file-info-set-file-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileType"><type>GFileType</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-is-hidden" role="function">
<title>g_file_info_set_is_hidden&#160;()</title>
<indexterm zone="g-file-info-set-is-hidden"><primary sortas="file_info_set_is_hidden">g_file_info_set_is_hidden</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_is_hidden (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                           <parameter><link linkend="gboolean"><type>gboolean</type></link> is_hidden</parameter>);</programlisting>
<para>Sets the "is_hidden" attribute in a <link linkend="GFileInfo"><type>GFileInfo</type></link> according to <parameter>is_hidden</parameter>
.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-IS-HIDDEN:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN</literal></link>.</para>
<refsect3 id="g-file-info-set-is-hidden.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>is_hidden</para></entry>
<entry role="parameter_description"><para>a <link linkend="gboolean"><type>gboolean</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-is-symlink" role="function">
<title>g_file_info_set_is_symlink&#160;()</title>
<indexterm zone="g-file-info-set-is-symlink"><primary sortas="file_info_set_is_symlink">g_file_info_set_is_symlink</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_is_symlink (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                            <parameter><link linkend="gboolean"><type>gboolean</type></link> is_symlink</parameter>);</programlisting>
<para>Sets the "is_symlink" attribute in a <link linkend="GFileInfo"><type>GFileInfo</type></link> according to <parameter>is_symlink</parameter>
.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-IS-SYMLINK:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK</literal></link>.</para>
<refsect3 id="g-file-info-set-is-symlink.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>is_symlink</para></entry>
<entry role="parameter_description"><para>a <link linkend="gboolean"><type>gboolean</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-name" role="function">
<title>g_file_info_set_name&#160;()</title>
<indexterm zone="g-file-info-set-name"><primary sortas="file_info_set_name">g_file_info_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_name (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                      <parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>Sets the name attribute for the current <link linkend="GFileInfo"><type>GFileInfo</type></link>.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-NAME:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_NAME</literal></link>.</para>
<refsect3 id="g-file-info-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>a string containing a name. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-display-name" role="function">
<title>g_file_info_set_display_name&#160;()</title>
<indexterm zone="g-file-info-set-display-name"><primary sortas="file_info_set_display_name">g_file_info_set_display_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_display_name (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                              <parameter>const <link linkend="char"><type>char</type></link> *display_name</parameter>);</programlisting>
<para>Sets the display name for the current <link linkend="GFileInfo"><type>GFileInfo</type></link>.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-DISPLAY-NAME:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME</literal></link>.</para>
<refsect3 id="g-file-info-set-display-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>display_name</para></entry>
<entry role="parameter_description"><para>a string containing a display name.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-edit-name" role="function">
<title>g_file_info_set_edit_name&#160;()</title>
<indexterm zone="g-file-info-set-edit-name"><primary sortas="file_info_set_edit_name">g_file_info_set_edit_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_edit_name (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                           <parameter>const <link linkend="char"><type>char</type></link> *edit_name</parameter>);</programlisting>
<para>Sets the edit name for the current file.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-EDIT-NAME:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME</literal></link>.</para>
<refsect3 id="g-file-info-set-edit-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>edit_name</para></entry>
<entry role="parameter_description"><para>a string containing an edit name.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-icon" role="function">
<title>g_file_info_set_icon&#160;()</title>
<indexterm zone="g-file-info-set-icon"><primary sortas="file_info_set_icon">g_file_info_set_icon</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_icon (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                      <parameter><link linkend="GIcon"><type>GIcon</type></link> *icon</parameter>);</programlisting>
<para>Sets the icon for a given <link linkend="GFileInfo"><type>GFileInfo</type></link>.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-ICON:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_ICON</literal></link>.</para>
<refsect3 id="g-file-info-set-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>icon</para></entry>
<entry role="parameter_description"><para>a <link linkend="GIcon"><type>GIcon</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-symbolic-icon" role="function" condition="since:2.34">
<title>g_file_info_set_symbolic_icon&#160;()</title>
<indexterm zone="g-file-info-set-symbolic-icon" role="2.34"><primary sortas="file_info_set_symbolic_icon">g_file_info_set_symbolic_icon</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_symbolic_icon (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                               <parameter><link linkend="GIcon"><type>GIcon</type></link> *icon</parameter>);</programlisting>
<para>Sets the symbolic icon for a given <link linkend="GFileInfo"><type>GFileInfo</type></link>.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-SYMBOLIC-ICON:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON</literal></link>.</para>
<refsect3 id="g-file-info-set-symbolic-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>icon</para></entry>
<entry role="parameter_description"><para>a <link linkend="GIcon"><type>GIcon</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.34">2.34</link></para></refsect2>
<refsect2 id="g-file-info-set-content-type" role="function">
<title>g_file_info_set_content_type&#160;()</title>
<indexterm zone="g-file-info-set-content-type"><primary sortas="file_info_set_content_type">g_file_info_set_content_type</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_content_type (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                              <parameter>const <link linkend="char"><type>char</type></link> *content_type</parameter>);</programlisting>
<para>Sets the content type attribute for a given <link linkend="GFileInfo"><type>GFileInfo</type></link>.
See <link linkend="G-FILE-ATTRIBUTE-STANDARD-CONTENT-TYPE:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE</literal></link>.</para>
<refsect3 id="g-file-info-set-content-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>a content type. See <link linkend="gio-GContentType">GContentType</link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-size" role="function">
<title>g_file_info_set_size&#160;()</title>
<indexterm zone="g-file-info-set-size"><primary sortas="file_info_set_size">g_file_info_set_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_size (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                      <parameter><link linkend="goffset"><type>goffset</type></link> size</parameter>);</programlisting>
<para>Sets the <link linkend="G-FILE-ATTRIBUTE-STANDARD-SIZE:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_SIZE</literal></link> attribute in the file info
to the given size.</para>
<refsect3 id="g-file-info-set-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>a <link linkend="goffset"><type>goffset</type></link> containing the file's size.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-modification-time" role="function">
<title>g_file_info_set_modification_time&#160;()</title>
<indexterm zone="g-file-info-set-modification-time"><primary sortas="file_info_set_modification_time">g_file_info_set_modification_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_modification_time (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                   <parameter><link linkend="GTimeVal"><type>GTimeVal</type></link> *mtime</parameter>);</programlisting>
<para>Sets the <link linkend="G-FILE-ATTRIBUTE-TIME-MODIFIED:CAPS"><literal>G_FILE_ATTRIBUTE_TIME_MODIFIED</literal></link> attribute in the file
info to the given time value.</para>
<refsect3 id="g-file-info-set-modification-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mtime</para></entry>
<entry role="parameter_description"><para>a <link linkend="GTimeVal"><type>GTimeVal</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-symlink-target" role="function">
<title>g_file_info_set_symlink_target&#160;()</title>
<indexterm zone="g-file-info-set-symlink-target"><primary sortas="file_info_set_symlink_target">g_file_info_set_symlink_target</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_symlink_target (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                                <parameter>const <link linkend="char"><type>char</type></link> *symlink_target</parameter>);</programlisting>
<para>Sets the <link linkend="G-FILE-ATTRIBUTE-STANDARD-SYMLINK-TARGET:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET</literal></link> attribute in the file info
to the given symlink target.</para>
<refsect3 id="g-file-info-set-symlink-target.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>symlink_target</para></entry>
<entry role="parameter_description"><para>a static string containing a path to a symlink target.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-info-set-sort-order" role="function">
<title>g_file_info_set_sort_order&#160;()</title>
<indexterm zone="g-file-info-set-sort-order"><primary sortas="file_info_set_sort_order">g_file_info_set_sort_order</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_info_set_sort_order (<parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>,
                            <parameter><link linkend="gint32"><type>gint32</type></link> sort_order</parameter>);</programlisting>
<para>Sets the sort order attribute in the file info structure. See
<link linkend="G-FILE-ATTRIBUTE-STANDARD-SORT-ORDER:CAPS"><literal>G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER</literal></link>.</para>
<refsect3 id="g-file-info-set-sort-order.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sort_order</para></entry>
<entry role="parameter_description"><para>a sort order integer.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-new" role="function">
<title>g_file_attribute_matcher_new&#160;()</title>
<indexterm zone="g-file-attribute-matcher-new"><primary sortas="file_attribute_matcher_new">g_file_attribute_matcher_new</primary></indexterm>
<programlisting language="C"><link linkend="GFileAttributeMatcher"><returnvalue>GFileAttributeMatcher</returnvalue></link>&#160;*
g_file_attribute_matcher_new (<parameter>const <link linkend="char"><type>char</type></link> *attributes</parameter>);</programlisting>
<para>Creates a new file attribute matcher, which matches attributes
against a given string. <link linkend="GFileAttributeMatchers"><type>GFileAttributeMatchers</type></link> are reference
counted structures, and are created with a reference count of 1. If
the number of references falls to 0, the <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> is
automatically destroyed.</para>
<para>The <parameter>attribute</parameter>
 string should be formatted with specific keys separated
from namespaces with a double colon. Several "namespace::key" strings may be
concatenated with a single comma (e.g. "standard::type,standard::is-hidden").
The wildcard "*" may be used to match all keys and namespaces, or
"namespace::*" will match all keys in a given namespace.</para>
<refsect3><title>Examples of file attribute matcher strings and results</title><itemizedlist>
<listitem><para><literal>"*"</literal>: matches all attributes.</para></listitem>
<listitem><para><literal>"standard::is-hidden"</literal>: matches only the key is-hidden in the
standard namespace.</para></listitem>
<listitem><para><literal>"standard::type,unix::*"</literal>: matches the type key in the standard
namespace and all keys in the unix namespace.</para></listitem>
</itemizedlist>
</refsect3>
<refsect3 id="g-file-attribute-matcher-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>attributes</para></entry>
<entry role="parameter_description"><para>an attribute string to match.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-attribute-matcher-new.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link></para>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-ref" role="function">
<title>g_file_attribute_matcher_ref&#160;()</title>
<indexterm zone="g-file-attribute-matcher-ref"><primary sortas="file_attribute_matcher_ref">g_file_attribute_matcher_ref</primary></indexterm>
<programlisting language="C"><link linkend="GFileAttributeMatcher"><returnvalue>GFileAttributeMatcher</returnvalue></link>&#160;*
g_file_attribute_matcher_ref (<parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *matcher</parameter>);</programlisting>
<para>References a file attribute matcher.</para>
<refsect3 id="g-file-attribute-matcher-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matcher</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-attribute-matcher-ref.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-subtract" role="function">
<title>g_file_attribute_matcher_subtract&#160;()</title>
<indexterm zone="g-file-attribute-matcher-subtract"><primary sortas="file_attribute_matcher_subtract">g_file_attribute_matcher_subtract</primary></indexterm>
<programlisting language="C"><link linkend="GFileAttributeMatcher"><returnvalue>GFileAttributeMatcher</returnvalue></link>&#160;*
g_file_attribute_matcher_subtract (<parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *matcher</parameter>,
                                   <parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *subtract</parameter>);</programlisting>
<para>Subtracts all attributes of <parameter>subtract</parameter>
 from <parameter>matcher</parameter>
 and returns
a matcher that supports those attributes.</para>
<para>Note that currently it is not possible to remove a single
attribute when the <parameter>matcher</parameter>
 matches the whole namespace - or remove
a namespace or attribute when the matcher matches everything. This
is a limitation of the current implementation, but may be fixed
in the future.</para>
<refsect3 id="g-file-attribute-matcher-subtract.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matcher</para></entry>
<entry role="parameter_description"><para>Matcher to subtract from </para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>subtract</para></entry>
<entry role="parameter_description"><para>The matcher to subtract</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-attribute-matcher-subtract.returns" role="returns">
<title>Returns</title>
<para> A file attribute matcher matching all attributes of
<parameter>matcher</parameter>
that are not matched by <parameter>subtract</parameter>
</para>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-unref" role="function">
<title>g_file_attribute_matcher_unref&#160;()</title>
<indexterm zone="g-file-attribute-matcher-unref"><primary sortas="file_attribute_matcher_unref">g_file_attribute_matcher_unref</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_attribute_matcher_unref (<parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *matcher</parameter>);</programlisting>
<para>Unreferences <parameter>matcher</parameter>
. If the reference count falls below 1,
the <parameter>matcher</parameter>
 is automatically freed.</para>
<refsect3 id="g-file-attribute-matcher-unref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matcher</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-matches" role="function">
<title>g_file_attribute_matcher_matches&#160;()</title>
<indexterm zone="g-file-attribute-matcher-matches"><primary sortas="file_attribute_matcher_matches">g_file_attribute_matcher_matches</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_attribute_matcher_matches (<parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *matcher</parameter>,
                                  <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Checks if an attribute will be matched by an attribute matcher. If
the matcher was created with the "*" matching string, this function
will always return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<refsect3 id="g-file-attribute-matcher-matches.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matcher</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-attribute-matcher-matches.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>attribute</parameter>
matches <parameter>matcher</parameter>
. <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-matches-only" role="function">
<title>g_file_attribute_matcher_matches_only&#160;()</title>
<indexterm zone="g-file-attribute-matcher-matches-only"><primary sortas="file_attribute_matcher_matches_only">g_file_attribute_matcher_matches_only</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_attribute_matcher_matches_only (<parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *matcher</parameter>,
                                       <parameter>const <link linkend="char"><type>char</type></link> *attribute</parameter>);</programlisting>
<para>Checks if a attribute matcher only matches a given attribute. Always
returns <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if "*" was used when creating the matcher.</para>
<refsect3 id="g-file-attribute-matcher-matches-only.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matcher</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attribute</para></entry>
<entry role="parameter_description"><para>a file attribute key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-attribute-matcher-matches-only.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the matcher only matches <parameter>attribute</parameter>
. <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-enumerate-namespace" role="function">
<title>g_file_attribute_matcher_enumerate_namespace&#160;()</title>
<indexterm zone="g-file-attribute-matcher-enumerate-namespace"><primary sortas="file_attribute_matcher_enumerate_namespace">g_file_attribute_matcher_enumerate_namespace</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_attribute_matcher_enumerate_namespace
                               (<parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *matcher</parameter>,
                                <parameter>const <link linkend="char"><type>char</type></link> *ns</parameter>);</programlisting>
<para>Checks if the matcher will match all of the keys in a given namespace.
This will always return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a wildcard character is in use (e.g. if
matcher was created with "standard::*" and <parameter>ns</parameter>
 is "standard", or if matcher was created
using "*" and namespace is anything.)</para>
<para>TODO: this is awkwardly worded.</para>
<refsect3 id="g-file-attribute-matcher-enumerate-namespace.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matcher</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ns</para></entry>
<entry role="parameter_description"><para>a string containing a file attribute namespace.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-attribute-matcher-enumerate-namespace.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the matcher matches all of the entries
in the given <parameter>ns</parameter>
, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-enumerate-next" role="function">
<title>g_file_attribute_matcher_enumerate_next&#160;()</title>
<indexterm zone="g-file-attribute-matcher-enumerate-next"><primary sortas="file_attribute_matcher_enumerate_next">g_file_attribute_matcher_enumerate_next</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_attribute_matcher_enumerate_next
                               (<parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *matcher</parameter>);</programlisting>
<para>Gets the next matched attribute from a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para>
<refsect3 id="g-file-attribute-matcher-enumerate-next.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matcher</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-attribute-matcher-enumerate-next.returns" role="returns">
<title>Returns</title>
<para> a string containing the next attribute or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if
no more attribute exist.</para>
</refsect3></refsect2>
<refsect2 id="g-file-attribute-matcher-to-string" role="function" condition="since:2.32">
<title>g_file_attribute_matcher_to_string&#160;()</title>
<indexterm zone="g-file-attribute-matcher-to-string" role="2.32"><primary sortas="file_attribute_matcher_to_string">g_file_attribute_matcher_to_string</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_attribute_matcher_to_string (<parameter><link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link> *matcher</parameter>);</programlisting>
<para>Prints what the matcher is matching against. The format will be 
equal to the format passed to <link linkend="g-file-attribute-matcher-new"><function>g_file_attribute_matcher_new()</function></link>.
The output however, might not be identical, as the matcher may
decide to use a different order or omit needless parts.</para>
<refsect3 id="g-file-attribute-matcher-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matcher</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileAttributeMatcher"><type>GFileAttributeMatcher</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-attribute-matcher-to-string.returns" role="returns">
<title>Returns</title>
<para> a string describing the attributes the matcher matches
against or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>matcher</parameter>
was <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>

</refsect1>
<refsect1 id="GFileInfo.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GFileAttributeMatcher-struct" role="struct">
<title>GFileAttributeMatcher</title>
<indexterm zone="GFileAttributeMatcher-struct"><primary sortas="FileAttributeMatcher">GFileAttributeMatcher</primary></indexterm>
<programlisting language="C">typedef struct _GFileAttributeMatcher GFileAttributeMatcher;</programlisting>
<para>Determines if a string matches a file attribute.</para>
</refsect2>
<refsect2 id="GFileType" role="enum">
<title>enum GFileType</title>
<indexterm zone="GFileType"><primary sortas="FileType">GFileType</primary></indexterm>
<para>Indicates the file's on-disk type.</para>
<refsect3 id="GFileType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-FILE-TYPE-UNKNOWN:CAPS">G_FILE_TYPE_UNKNOWN</para></entry>
<entry role="enum_member_description"><para>File's type is unknown.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-FILE-TYPE-REGULAR:CAPS">G_FILE_TYPE_REGULAR</para></entry>
<entry role="enum_member_description"><para>File handle represents a regular file.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-FILE-TYPE-DIRECTORY:CAPS">G_FILE_TYPE_DIRECTORY</para></entry>
<entry role="enum_member_description"><para>File handle represents a directory.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-FILE-TYPE-SYMBOLIC-LINK:CAPS">G_FILE_TYPE_SYMBOLIC_LINK</para></entry>
<entry role="enum_member_description"><para>File handle represents a symbolic link
   (Unix systems).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-FILE-TYPE-SPECIAL:CAPS">G_FILE_TYPE_SPECIAL</para></entry>
<entry role="enum_member_description"><para>File is a "special" file, such as a socket, fifo,
   block device, or character device.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-FILE-TYPE-SHORTCUT:CAPS">G_FILE_TYPE_SHORTCUT</para></entry>
<entry role="enum_member_description"><para>File is a shortcut (Windows systems).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-FILE-TYPE-MOUNTABLE:CAPS">G_FILE_TYPE_MOUNTABLE</para></entry>
<entry role="enum_member_description"><para>File is a mountable location.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GFileInfo-struct" role="struct">
<title>GFileInfo</title>
<indexterm zone="GFileInfo-struct"><primary sortas="FileInfo">GFileInfo</primary></indexterm>
<programlisting language="C">typedef struct _GFileInfo GFileInfo;</programlisting>
<para>Stores information about a file system object referenced by a <link linkend="GFile"><type>GFile</type></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-TYPE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_TYPE</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-TYPE:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_TYPE">G_FILE_ATTRIBUTE_STANDARD_TYPE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_TYPE "standard::type"                     /* uint32 (GFileType) */
</programlisting>
<para>A key in the "standard" namespace for storing file types.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.
The value for this key should contain a <link linkend="GFileType"><type>GFileType</type></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-IS-HIDDEN:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-IS-HIDDEN:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_IS_HIDDEN">G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN "standard::is-hidden"           /* boolean */
</programlisting>
<para>A key in the "standard" namespace for checking if a file is hidden.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-IS-BACKUP:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-IS-BACKUP:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_IS_BACKUP">G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP "standard::is-backup"           /* boolean */
</programlisting>
<para>A key in the "standard" namespace for checking if a file is a backup file.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-IS-SYMLINK:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-IS-SYMLINK:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_IS_SYMLINK">G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK "standard::is-symlink"         /* boolean */
</programlisting>
<para>A key in the "standard" namespace for checking if the file is a symlink.
Typically the actual type is something else, if we followed the symlink
to get the type.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-IS-VIRTUAL:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-IS-VIRTUAL:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL">G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL "standard::is-virtual"         /* boolean */
</programlisting>
<para>A key in the "standard" namespace for checking if a file is virtual.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-IS-VOLATILE:CAPS" role="macro" condition="since:2.46">
<title>G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-IS-VOLATILE:CAPS" role="2.46"><primary sortas="FILE_ATTRIBUTE_STANDARD_IS_VOLATILE">G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE "standard::is-volatile"      /* boolean */
</programlisting>
<para>A key in the "standard" namespace for checking if a file is
volatile. This is meant for opaque, non-POSIX-like backends to
indicate that the URI is not persistent. Applications should look
at <link linkend="G-FILE-ATTRIBUTE-STANDARD-SYMLINK-TARGET:CAPS"><type>G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET</type></link> for the persistent URI.</para>
<para>Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.46">2.46</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-NAME:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_NAME</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-NAME:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_NAME">G_FILE_ATTRIBUTE_STANDARD_NAME</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_NAME "standard::name"                     /* byte string */
</programlisting>
<para>A key in the "standard" namespace for getting the name of the file.
The name is the on-disk filename which may not be in any known encoding,
and can thus not be generally displayed as is.
Use <link linkend="G-FILE-ATTRIBUTE-STANDARD-DISPLAY-NAME:CAPS"><type>G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME</type></link> if you need to display the
name in a user interface.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BYTE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BYTE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-DISPLAY-NAME:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-DISPLAY-NAME:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME">G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME "standard::display-name"     /* string */
</programlisting>
<para>A key in the "standard" namespace for getting the display name of the file.
A display name is guaranteed to be in UTF8 and can thus be displayed in
the UI.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-EDIT-NAME:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-EDIT-NAME:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_EDIT_NAME">G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME "standard::edit-name"           /* string */
</programlisting>
<para>A key in the "standard" namespace for edit name of the file.
An edit name is similar to the display name, but it is meant to be
used when you want to rename the file in the UI. The display name
might contain information you don't want in the new filename (such as
"(invalid unicode)" if the filename was in an invalid encoding).</para>
<para>Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-COPY-NAME:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_COPY_NAME</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-COPY-NAME:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_COPY_NAME">G_FILE_ATTRIBUTE_STANDARD_COPY_NAME</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_COPY_NAME "standard::copy-name"           /* string */
</programlisting>
<para>A key in the "standard" namespace for getting the copy name of the file.
The copy name is an optional version of the name. If available it's always
in UTF8, and corresponds directly to the original filename (only transcoded to
UTF8). This is useful if you want to copy the file to another filesystem that
might have a different encoding. If the filename is not a valid string in the
encoding selected for the filesystem it is in then the copy name will not be set.</para>
<para>Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-DESCRIPTION:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-DESCRIPTION:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_DESCRIPTION">G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION "standard::description"        /* string */
</programlisting>
<para>A key in the "standard" namespace for getting the description of the file.
The description is a utf8 string that describes the file, generally containing
the filename, but can also contain furter information. Example descriptions
could be "filename (on hostname)" for a remote file or "filename (in trash)"
for a file in the trash. This is useful for instance as the window title
when displaying a directory or for a bookmarks menu.</para>
<para>Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-ICON:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_ICON</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-ICON:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_ICON">G_FILE_ATTRIBUTE_STANDARD_ICON</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_ICON "standard::icon"                     /* object (GIcon) */
</programlisting>
<para>A key in the "standard" namespace for getting the icon for the file.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-OBJECT:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_OBJECT</literal></link>.
The value for this key should contain a <link linkend="GIcon"><type>GIcon</type></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-SYMBOLIC-ICON:CAPS" role="macro" condition="since:2.34">
<title>G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-SYMBOLIC-ICON:CAPS" role="2.34"><primary sortas="FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON">G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON "standard::symbolic-icon"   /* object (GIcon) */
</programlisting>
<para>A key in the "standard" namespace for getting the symbolic icon for the file.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-OBJECT:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_OBJECT</literal></link>.
The value for this key should contain a <link linkend="GIcon"><type>GIcon</type></link>.</para>
<para role="since">Since: <link linkend="api-index-2.34">2.34</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-CONTENT-TYPE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-CONTENT-TYPE:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE">G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE "standard::content-type"     /* string */
</programlisting>
<para>A key in the "standard" namespace for getting the content type of the file.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.
The value for this key should contain a valid content type.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-FAST-CONTENT-TYPE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-FAST-CONTENT-TYPE:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE">G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE "standard::fast-content-type" /* string */
</programlisting>
<para>A key in the "standard" namespace for getting the fast content type.
The fast content type isn't as reliable as the regular one, as it
only uses the filename to guess it, but it is faster to calculate than the
regular content type.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-SIZE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_SIZE</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-SIZE:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_SIZE">G_FILE_ATTRIBUTE_STANDARD_SIZE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_SIZE "standard::size"                     /* uint64 */
</programlisting>
<para>A key in the "standard" namespace for getting the file's size (in bytes).
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-ALLOCATED-SIZE:CAPS" role="macro" condition="since:2.20">
<title>G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-ALLOCATED-SIZE:CAPS" role="2.20"><primary sortas="FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE">G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE "standard::allocated-size" /* uint64 */
</programlisting>
<para>A key in the "standard" namespace for getting the amount of disk space
that is consumed by the file (in bytes).  This will generally be larger
than the file size (due to block size overhead) but can occasionally be
smaller (for example, for sparse files).
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-SYMLINK-TARGET:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-SYMLINK-TARGET:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET">G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET "standard::symlink-target" /* byte string */
</programlisting>
<para>A key in the "standard" namespace for getting the symlink target, if the file
is a symlink. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-BYTE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BYTE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-TARGET-URI:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_TARGET_URI</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-TARGET-URI:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_TARGET_URI">G_FILE_ATTRIBUTE_STANDARD_TARGET_URI</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_TARGET_URI "standard::target-uri"         /* string */
</programlisting>
<para>A key in the "standard" namespace for getting the target URI for the file, in
the case of <link linkend="G-FILE-TYPE-SHORTCUT:CAPS"><literal>G_FILE_TYPE_SHORTCUT</literal></link> or <link linkend="G-FILE-TYPE-MOUNTABLE:CAPS"><literal>G_FILE_TYPE_MOUNTABLE</literal></link> files.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-STANDARD-SORT-ORDER:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER</title>
<indexterm zone="G-FILE-ATTRIBUTE-STANDARD-SORT-ORDER:CAPS"><primary sortas="FILE_ATTRIBUTE_STANDARD_SORT_ORDER">G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER "standard::sort-order"         /* int32  */
</programlisting>
<para>A key in the "standard" namespace for setting the sort order of a file.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-INT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_INT32</literal></link>.
An example use would be in file managers, which would use this key
to set the order files are displayed. Files with smaller sort order
should be sorted first, and files without sort order as if sort order
was zero.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ETAG-VALUE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ETAG_VALUE</title>
<indexterm zone="G-FILE-ATTRIBUTE-ETAG-VALUE:CAPS"><primary sortas="FILE_ATTRIBUTE_ETAG_VALUE">G_FILE_ATTRIBUTE_ETAG_VALUE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ETAG_VALUE "etag::value"                 /* string */
</programlisting>
<para>A key in the "etag" namespace for getting the value of the file's
entity tag. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ID-FILE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ID_FILE</title>
<indexterm zone="G-FILE-ATTRIBUTE-ID-FILE:CAPS"><primary sortas="FILE_ATTRIBUTE_ID_FILE">G_FILE_ATTRIBUTE_ID_FILE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ID_FILE "id::file"                     /* string */
</programlisting>
<para>A key in the "id" namespace for getting a file identifier.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.
An example use would be during listing files, to avoid recursive
directory scanning.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ID-FILESYSTEM:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ID_FILESYSTEM</title>
<indexterm zone="G-FILE-ATTRIBUTE-ID-FILESYSTEM:CAPS"><primary sortas="FILE_ATTRIBUTE_ID_FILESYSTEM">G_FILE_ATTRIBUTE_ID_FILESYSTEM</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ID_FILESYSTEM "id::filesystem"         /* string */
</programlisting>
<para>A key in the "id" namespace for getting the file system identifier.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.
An example use would be during drag and drop to see if the source
and target are on the same filesystem (default to move) or not (default
to copy).</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ACCESS-CAN-READ:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ACCESS_CAN_READ</title>
<indexterm zone="G-FILE-ATTRIBUTE-ACCESS-CAN-READ:CAPS"><primary sortas="FILE_ATTRIBUTE_ACCESS_CAN_READ">G_FILE_ATTRIBUTE_ACCESS_CAN_READ</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ACCESS_CAN_READ "access::can-read"       /* boolean */
</programlisting>
<para>A key in the "access" namespace for getting read privileges.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.
This attribute will be <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the user is able to read the file.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ACCESS-CAN-WRITE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE</title>
<indexterm zone="G-FILE-ATTRIBUTE-ACCESS-CAN-WRITE:CAPS"><primary sortas="FILE_ATTRIBUTE_ACCESS_CAN_WRITE">G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE "access::can-write"     /* boolean */
</programlisting>
<para>A key in the "access" namespace for getting write privileges.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.
This attribute will be <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the user is able to write to the file.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ACCESS-CAN-EXECUTE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE</title>
<indexterm zone="G-FILE-ATTRIBUTE-ACCESS-CAN-EXECUTE:CAPS"><primary sortas="FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE">G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE "access::can-execute" /* boolean */
</programlisting>
<para>A key in the "access" namespace for getting execution privileges.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.
This attribute will be <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the user is able to execute the file.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ACCESS-CAN-DELETE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE</title>
<indexterm zone="G-FILE-ATTRIBUTE-ACCESS-CAN-DELETE:CAPS"><primary sortas="FILE_ATTRIBUTE_ACCESS_CAN_DELETE">G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE "access::can-delete"   /* boolean */
</programlisting>
<para>A key in the "access" namespace for checking deletion privileges.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.
This attribute will be <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the user is able to delete the file.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ACCESS-CAN-TRASH:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH</title>
<indexterm zone="G-FILE-ATTRIBUTE-ACCESS-CAN-TRASH:CAPS"><primary sortas="FILE_ATTRIBUTE_ACCESS_CAN_TRASH">G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH "access::can-trash"     /* boolean */
</programlisting>
<para>A key in the "access" namespace for checking trashing privileges.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.
This attribute will be <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the user is able to move the file to
the trash.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-ACCESS-CAN-RENAME:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME</title>
<indexterm zone="G-FILE-ATTRIBUTE-ACCESS-CAN-RENAME:CAPS"><primary sortas="FILE_ATTRIBUTE_ACCESS_CAN_RENAME">G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME "access::can-rename"   /* boolean */
</programlisting>
<para>A key in the "access" namespace for checking renaming privileges.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.
This attribute will be <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the user is able to rename the file.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-MOUNT:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-MOUNT:CAPS"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT "mountable::can-mount"     /* boolean */
</programlisting>
<para>A key in the "mountable" namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) is mountable.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-UNMOUNT:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-UNMOUNT:CAPS"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT "mountable::can-unmount" /* boolean */
</programlisting>
<para>A key in the "mountable" namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE)  is unmountable.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-EJECT:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-EJECT:CAPS"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT "mountable::can-eject"     /* boolean */
</programlisting>
<para>A key in the "mountable" namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be ejected.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-UNIX-DEVICE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-UNIX-DEVICE:CAPS"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE">G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE "mountable::unix-device" /* uint32 */
</programlisting>
<para>A key in the "mountable" namespace for getting the unix device.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-UNIX-DEVICE-FILE:CAPS" role="macro" condition="since:2.22">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-UNIX-DEVICE-FILE:CAPS" role="2.22"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE">G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE "mountable::unix-device-file" /* string */
</programlisting>
<para>A key in the "mountable" namespace for getting the unix device file.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-HAL-UDI:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-HAL-UDI:CAPS"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI">G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI "mountable::hal-udi"         /* string */
</programlisting>
<para>A key in the "mountable" namespace for getting the HAL UDI for the mountable
file. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-START:CAPS" role="macro" condition="since:2.22">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-START:CAPS" role="2.22"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_CAN_START">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START "mountable::can-start"     /* boolean */
</programlisting>
<para>A key in the "mountable" namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be started.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-START-DEGRADED:CAPS" role="macro" condition="since:2.22">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-START-DEGRADED:CAPS" role="2.22"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED "mountable::can-start-degraded"     /* boolean */
</programlisting>
<para>A key in the "mountable" namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be started
degraded.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-STOP:CAPS" role="macro" condition="since:2.22">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-STOP:CAPS" role="2.22"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP "mountable::can-stop"      /* boolean */
</programlisting>
<para>A key in the "mountable" namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be stopped.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-START-STOP-TYPE:CAPS" role="macro" condition="since:2.22">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-START-STOP-TYPE:CAPS" role="2.22"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE">G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE "mountable::start-stop-type" /* uint32 (GDriveStartStopType) */
</programlisting>
<para>A key in the "mountable" namespace for getting the <link linkend="GDriveStartStopType"><type>GDriveStartStopType</type></link>.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-POLL:CAPS" role="macro" condition="since:2.22">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-CAN-POLL:CAPS" role="2.22"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL">G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL "mountable::can-poll"      /* boolean */
</programlisting>
<para>A key in the "mountable" namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE) can be polled.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-MOUNTABLE-IS-MEDIA-CHECK-AUTOMATIC:CAPS" role="macro" condition="since:2.22">
<title>G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC</title>
<indexterm zone="G-FILE-ATTRIBUTE-MOUNTABLE-IS-MEDIA-CHECK-AUTOMATIC:CAPS" role="2.22"><primary sortas="FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC">G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC "mountable::is-media-check-automatic"      /* boolean */
</programlisting>
<para>A key in the "mountable" namespace for checking if a file (of type G_FILE_TYPE_MOUNTABLE)
is automatically polled for media.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TIME-MODIFIED:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TIME_MODIFIED</title>
<indexterm zone="G-FILE-ATTRIBUTE-TIME-MODIFIED:CAPS"><primary sortas="FILE_ATTRIBUTE_TIME_MODIFIED">G_FILE_ATTRIBUTE_TIME_MODIFIED</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TIME_MODIFIED "time::modified"           /* uint64 */
</programlisting>
<para>A key in the "time" namespace for getting the time the file was last
modified. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>, and contains the time since the
file was modified, in seconds since the UNIX epoch.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TIME-MODIFIED-USEC:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC</title>
<indexterm zone="G-FILE-ATTRIBUTE-TIME-MODIFIED-USEC:CAPS"><primary sortas="FILE_ATTRIBUTE_TIME_MODIFIED_USEC">G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC "time::modified-usec" /* uint32 */
</programlisting>
<para>A key in the "time" namespace for getting the microseconds of the time
the file was last modified. This should be used in conjunction with
<link linkend="G-FILE-ATTRIBUTE-TIME-MODIFIED:CAPS"><type>G_FILE_ATTRIBUTE_TIME_MODIFIED</type></link>. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TIME-ACCESS:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TIME_ACCESS</title>
<indexterm zone="G-FILE-ATTRIBUTE-TIME-ACCESS:CAPS"><primary sortas="FILE_ATTRIBUTE_TIME_ACCESS">G_FILE_ATTRIBUTE_TIME_ACCESS</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TIME_ACCESS "time::access"               /* uint64 */
</programlisting>
<para>A key in the "time" namespace for getting the time the file was last
accessed. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>, and contains the time since the
file was last accessed, in seconds since the UNIX epoch.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TIME-ACCESS-USEC:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TIME_ACCESS_USEC</title>
<indexterm zone="G-FILE-ATTRIBUTE-TIME-ACCESS-USEC:CAPS"><primary sortas="FILE_ATTRIBUTE_TIME_ACCESS_USEC">G_FILE_ATTRIBUTE_TIME_ACCESS_USEC</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TIME_ACCESS_USEC "time::access-usec"     /* uint32 */
</programlisting>
<para>A key in the "time" namespace for getting the microseconds of the time
the file was last accessed. This should be used in conjunction with
<link linkend="G-FILE-ATTRIBUTE-TIME-ACCESS:CAPS"><type>G_FILE_ATTRIBUTE_TIME_ACCESS</type></link>. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TIME-CHANGED:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TIME_CHANGED</title>
<indexterm zone="G-FILE-ATTRIBUTE-TIME-CHANGED:CAPS"><primary sortas="FILE_ATTRIBUTE_TIME_CHANGED">G_FILE_ATTRIBUTE_TIME_CHANGED</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TIME_CHANGED "time::changed"             /* uint64 */
</programlisting>
<para>A key in the "time" namespace for getting the time the file was last
changed. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>,
and contains the time since the file was last changed, in seconds since the
UNIX epoch.</para>
<para>This corresponds to the traditional UNIX ctime.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TIME-CHANGED-USEC:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TIME_CHANGED_USEC</title>
<indexterm zone="G-FILE-ATTRIBUTE-TIME-CHANGED-USEC:CAPS"><primary sortas="FILE_ATTRIBUTE_TIME_CHANGED_USEC">G_FILE_ATTRIBUTE_TIME_CHANGED_USEC</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TIME_CHANGED_USEC "time::changed-usec"   /* uint32 */
</programlisting>
<para>A key in the "time" namespace for getting the microseconds of the time
the file was last changed. This should be used in conjunction with
<link linkend="G-FILE-ATTRIBUTE-TIME-CHANGED:CAPS"><type>G_FILE_ATTRIBUTE_TIME_CHANGED</type></link>. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TIME-CREATED:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TIME_CREATED</title>
<indexterm zone="G-FILE-ATTRIBUTE-TIME-CREATED:CAPS"><primary sortas="FILE_ATTRIBUTE_TIME_CREATED">G_FILE_ATTRIBUTE_TIME_CREATED</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TIME_CREATED "time::created"             /* uint64 */
</programlisting>
<para>A key in the "time" namespace for getting the time the file was created.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>,
and contains the time since the file was created, in seconds since the UNIX
epoch.</para>
<para>This corresponds to the NTFS ctime.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TIME-CREATED-USEC:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TIME_CREATED_USEC</title>
<indexterm zone="G-FILE-ATTRIBUTE-TIME-CREATED-USEC:CAPS"><primary sortas="FILE_ATTRIBUTE_TIME_CREATED_USEC">G_FILE_ATTRIBUTE_TIME_CREATED_USEC</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TIME_CREATED_USEC "time::created-usec"   /* uint32 */
</programlisting>
<para>A key in the "time" namespace for getting the microseconds of the time
the file was created. This should be used in conjunction with
<link linkend="G-FILE-ATTRIBUTE-TIME-CREATED:CAPS"><type>G_FILE_ATTRIBUTE_TIME_CREATED</type></link>. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-DEVICE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_DEVICE</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-DEVICE:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_DEVICE">G_FILE_ATTRIBUTE_UNIX_DEVICE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_DEVICE "unix::device"               /* uint32 */
</programlisting>
<para>A key in the "unix" namespace for getting the device id of the device the
file is located on (see <link linkend="stat"><function>stat()</function></link> documentation). This attribute is only
available for UNIX file systems. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-INODE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_INODE</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-INODE:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_INODE">G_FILE_ATTRIBUTE_UNIX_INODE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_INODE "unix::inode"                 /* uint64 */
</programlisting>
<para>A key in the "unix" namespace for getting the inode of the file.
This attribute is only available for UNIX file systems. Corresponding
<link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-MODE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_MODE</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-MODE:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_MODE">G_FILE_ATTRIBUTE_UNIX_MODE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_MODE "unix::mode"                   /* uint32 */
</programlisting>
<para>A key in the "unix" namespace for getting the mode of the file
(e.g. whether the file is a regular file, symlink, etc). See <link linkend="lstat"><function>lstat()</function></link>
documentation. This attribute is only available for UNIX file systems.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-NLINK:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_NLINK</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-NLINK:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_NLINK">G_FILE_ATTRIBUTE_UNIX_NLINK</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_NLINK "unix::nlink"                 /* uint32 */
</programlisting>
<para>A key in the "unix" namespace for getting the number of hard links
for a file. See <link linkend="lstat"><function>lstat()</function></link> documentation. This attribute is only available
for UNIX file systems. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-UID:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_UID</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-UID:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_UID">G_FILE_ATTRIBUTE_UNIX_UID</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_UID "unix::uid"                     /* uint32 */
</programlisting>
<para>A key in the "unix" namespace for getting the user ID for the file.
This attribute is only available for UNIX file systems.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-GID:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_GID</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-GID:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_GID">G_FILE_ATTRIBUTE_UNIX_GID</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_GID "unix::gid"                     /* uint32 */
</programlisting>
<para>A key in the "unix" namespace for getting the group ID for the file.
This attribute is only available for UNIX file systems.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-RDEV:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_RDEV</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-RDEV:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_RDEV">G_FILE_ATTRIBUTE_UNIX_RDEV</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_RDEV "unix::rdev"                   /* uint32 */
</programlisting>
<para>A key in the "unix" namespace for getting the device ID for the file
(if it is a special file). See <link linkend="lstat"><function>lstat()</function></link> documentation. This attribute
is only available for UNIX file systems. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link>
is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-BLOCK-SIZE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-BLOCK-SIZE:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_BLOCK_SIZE">G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE "unix::block-size"       /* uint32 */
</programlisting>
<para>A key in the "unix" namespace for getting the block size for the file
system. This attribute is only available for UNIX file systems.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-BLOCKS:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_BLOCKS</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-BLOCKS:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_BLOCKS">G_FILE_ATTRIBUTE_UNIX_BLOCKS</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_BLOCKS "unix::blocks"               /* uint64 */
</programlisting>
<para>A key in the "unix" namespace for getting the number of blocks allocated
for the file. This attribute is only available for UNIX file systems.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-UNIX-IS-MOUNTPOINT:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT</title>
<indexterm zone="G-FILE-ATTRIBUTE-UNIX-IS-MOUNTPOINT:CAPS"><primary sortas="FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT">G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT "unix::is-mountpoint" /* boolean */
</programlisting>
<para>A key in the "unix" namespace for checking if the file represents a
UNIX mount point. This attribute is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the file is a UNIX mount
point. Since 2.58, <literal>/</literal> is considered to be a mount point.
This attribute is only available for UNIX file systems.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-DOS-IS-ARCHIVE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE</title>
<indexterm zone="G-FILE-ATTRIBUTE-DOS-IS-ARCHIVE:CAPS"><primary sortas="FILE_ATTRIBUTE_DOS_IS_ARCHIVE">G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE "dos::is-archive"         /* boolean */
</programlisting>
<para>A key in the "dos" namespace for checking if the file's archive flag
is set. This attribute is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the archive flag is set. This attribute
is only available for DOS file systems. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link>
is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-DOS-IS-SYSTEM:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_DOS_IS_SYSTEM</title>
<indexterm zone="G-FILE-ATTRIBUTE-DOS-IS-SYSTEM:CAPS"><primary sortas="FILE_ATTRIBUTE_DOS_IS_SYSTEM">G_FILE_ATTRIBUTE_DOS_IS_SYSTEM</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_DOS_IS_SYSTEM "dos::is-system"           /* boolean */
</programlisting>
<para>A key in the "dos" namespace for checking if the file's backup flag
is set. This attribute is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the backup flag is set. This attribute
is only available for DOS file systems. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link>
is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-OWNER-USER:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_OWNER_USER</title>
<indexterm zone="G-FILE-ATTRIBUTE-OWNER-USER:CAPS"><primary sortas="FILE_ATTRIBUTE_OWNER_USER">G_FILE_ATTRIBUTE_OWNER_USER</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_OWNER_USER "owner::user"                 /* string */
</programlisting>
<para>A key in the "owner" namespace for getting the user name of the
file's owner. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-OWNER-USER-REAL:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_OWNER_USER_REAL</title>
<indexterm zone="G-FILE-ATTRIBUTE-OWNER-USER-REAL:CAPS"><primary sortas="FILE_ATTRIBUTE_OWNER_USER_REAL">G_FILE_ATTRIBUTE_OWNER_USER_REAL</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_OWNER_USER_REAL "owner::user-real"       /* string */
</programlisting>
<para>A key in the "owner" namespace for getting the real name of the
user that owns the file. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-OWNER-GROUP:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_OWNER_GROUP</title>
<indexterm zone="G-FILE-ATTRIBUTE-OWNER-GROUP:CAPS"><primary sortas="FILE_ATTRIBUTE_OWNER_GROUP">G_FILE_ATTRIBUTE_OWNER_GROUP</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_OWNER_GROUP "owner::group"               /* string */
</programlisting>
<para>A key in the "owner" namespace for getting the file owner's group.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-THUMBNAIL-PATH:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_THUMBNAIL_PATH</title>
<indexterm zone="G-FILE-ATTRIBUTE-THUMBNAIL-PATH:CAPS"><primary sortas="FILE_ATTRIBUTE_THUMBNAIL_PATH">G_FILE_ATTRIBUTE_THUMBNAIL_PATH</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_THUMBNAIL_PATH "thumbnail::path"         /* bytestring */
</programlisting>
<para>A key in the "thumbnail" namespace for getting the path to the thumbnail
image. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-BYTE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BYTE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-THUMBNAILING-FAILED:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_THUMBNAILING_FAILED</title>
<indexterm zone="G-FILE-ATTRIBUTE-THUMBNAILING-FAILED:CAPS"><primary sortas="FILE_ATTRIBUTE_THUMBNAILING_FAILED">G_FILE_ATTRIBUTE_THUMBNAILING_FAILED</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_THUMBNAILING_FAILED "thumbnail::failed"         /* boolean */
</programlisting>
<para>A key in the "thumbnail" namespace for checking if thumbnailing failed.
This attribute is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if thumbnailing failed. Corresponding
<link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-THUMBNAIL-IS-VALID:CAPS" role="macro" condition="since:2.40">
<title>G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID</title>
<indexterm zone="G-FILE-ATTRIBUTE-THUMBNAIL-IS-VALID:CAPS" role="2.40"><primary sortas="FILE_ATTRIBUTE_THUMBNAIL_IS_VALID">G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID "thumbnail::is-valid"        /* boolean */
</programlisting>
<para>A key in the "thumbnail" namespace for checking whether the thumbnail is outdated.
This attribute is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the thumbnail is up-to-date with the file it represents,
and <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if the file has been modified since the thumbnail was generated.</para>
<para>If <link linkend="G-FILE-ATTRIBUTE-THUMBNAILING-FAILED:CAPS"><literal>G_FILE_ATTRIBUTE_THUMBNAILING_FAILED</literal></link> is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> and this attribute is <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>,
it indicates that thumbnailing may be attempted again and may succeed.</para>
<para>Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.40">2.40</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-PREVIEW-ICON:CAPS" role="macro" condition="since:2.20">
<title>G_FILE_ATTRIBUTE_PREVIEW_ICON</title>
<indexterm zone="G-FILE-ATTRIBUTE-PREVIEW-ICON:CAPS" role="2.20"><primary sortas="FILE_ATTRIBUTE_PREVIEW_ICON">G_FILE_ATTRIBUTE_PREVIEW_ICON</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_PREVIEW_ICON "preview::icon"         /* object (GIcon) */
</programlisting>
<para>A key in the "preview" namespace for getting a <link linkend="GIcon"><type>GIcon</type></link> that can be
used to get preview of the file. For example, it may be a low
resolution thumbnail without metadata. Corresponding
<link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-OBJECT:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_OBJECT</literal></link>.  The value
for this key should contain a <link linkend="GIcon"><type>GIcon</type></link>.</para>
<para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-FILESYSTEM-SIZE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_FILESYSTEM_SIZE</title>
<indexterm zone="G-FILE-ATTRIBUTE-FILESYSTEM-SIZE:CAPS"><primary sortas="FILE_ATTRIBUTE_FILESYSTEM_SIZE">G_FILE_ATTRIBUTE_FILESYSTEM_SIZE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_FILESYSTEM_SIZE "filesystem::size"                       /* uint64 */
</programlisting>
<para>A key in the "filesystem" namespace for getting the total size (in bytes) of the file system,
used in <link linkend="g-file-query-filesystem-info"><function>g_file_query_filesystem_info()</function></link>. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link>
is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-FILESYSTEM-FREE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_FILESYSTEM_FREE</title>
<indexterm zone="G-FILE-ATTRIBUTE-FILESYSTEM-FREE:CAPS"><primary sortas="FILE_ATTRIBUTE_FILESYSTEM_FREE">G_FILE_ATTRIBUTE_FILESYSTEM_FREE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_FILESYSTEM_FREE "filesystem::free"                       /* uint64 */
</programlisting>
<para>A key in the "filesystem" namespace for getting the number of bytes of free space left on the
file system. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-FILESYSTEM-USED:CAPS" role="macro" condition="since:2.32">
<title>G_FILE_ATTRIBUTE_FILESYSTEM_USED</title>
<indexterm zone="G-FILE-ATTRIBUTE-FILESYSTEM-USED:CAPS" role="2.32"><primary sortas="FILE_ATTRIBUTE_FILESYSTEM_USED">G_FILE_ATTRIBUTE_FILESYSTEM_USED</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_FILESYSTEM_USED "filesystem::used"                       /* uint64 */
</programlisting>
<para>A key in the "filesystem" namespace for getting the number of bytes of used on the
file system. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-UINT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT64</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-FILESYSTEM-TYPE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_FILESYSTEM_TYPE</title>
<indexterm zone="G-FILE-ATTRIBUTE-FILESYSTEM-TYPE:CAPS"><primary sortas="FILE_ATTRIBUTE_FILESYSTEM_TYPE">G_FILE_ATTRIBUTE_FILESYSTEM_TYPE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_FILESYSTEM_TYPE "filesystem::type"                       /* string */
</programlisting>
<para>A key in the "filesystem" namespace for getting the file system's type.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-FILESYSTEM-READONLY:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_FILESYSTEM_READONLY</title>
<indexterm zone="G-FILE-ATTRIBUTE-FILESYSTEM-READONLY:CAPS"><primary sortas="FILE_ATTRIBUTE_FILESYSTEM_READONLY">G_FILE_ATTRIBUTE_FILESYSTEM_READONLY</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_FILESYSTEM_READONLY "filesystem::readonly"               /* boolean */
</programlisting>
<para>A key in the "filesystem" namespace for checking if the file system
is read only. Is set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the file system is read only.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-FILESYSTEM-USE-PREVIEW:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW</title>
<indexterm zone="G-FILE-ATTRIBUTE-FILESYSTEM-USE-PREVIEW:CAPS"><primary sortas="FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW">G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW "filesystem::use-preview"        /* uint32 (GFilesystemPreviewType) */
</programlisting>
<para>A key in the "filesystem" namespace for hinting a file manager
application whether it should preview (e.g. thumbnail) files on the
file system. The value for this key contain a
<link linkend="GFilesystemPreviewType"><type>GFilesystemPreviewType</type></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-FILESYSTEM-REMOTE:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE</title>
<indexterm zone="G-FILE-ATTRIBUTE-FILESYSTEM-REMOTE:CAPS"><primary sortas="FILE_ATTRIBUTE_FILESYSTEM_REMOTE">G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE "filesystem::remote"                   /* boolean */
</programlisting>
<para>A key in the "filesystem" namespace for checking if the file system
is remote. Is set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the file system is remote.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-BOOLEAN:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BOOLEAN</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-GVFS-BACKEND:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_GVFS_BACKEND</title>
<indexterm zone="G-FILE-ATTRIBUTE-GVFS-BACKEND:CAPS"><primary sortas="FILE_ATTRIBUTE_GVFS_BACKEND">G_FILE_ATTRIBUTE_GVFS_BACKEND</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_GVFS_BACKEND "gvfs::backend"             /* string */
</programlisting>
<para>A key in the "gvfs" namespace that gets the name of the current
GVFS backend in use. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-SELINUX-CONTEXT:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_SELINUX_CONTEXT</title>
<indexterm zone="G-FILE-ATTRIBUTE-SELINUX-CONTEXT:CAPS"><primary sortas="FILE_ATTRIBUTE_SELINUX_CONTEXT">G_FILE_ATTRIBUTE_SELINUX_CONTEXT</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_SELINUX_CONTEXT "selinux::context"       /* string */
</programlisting>
<para>A key in the "selinux" namespace for getting the file's SELinux
context. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>. Note that this attribute is only
available if GLib has been built with SELinux support.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TRASH-ITEM-COUNT:CAPS" role="macro">
<title>G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT</title>
<indexterm zone="G-FILE-ATTRIBUTE-TRASH-ITEM-COUNT:CAPS"><primary sortas="FILE_ATTRIBUTE_TRASH_ITEM_COUNT">G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT "trash::item-count"     /* uint32 */
</programlisting>
<para>A key in the "trash" namespace.  When requested against
<literal>trash:///</literal> returns the number of (toplevel) items in the trash folder.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-UINT32:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_UINT32</literal></link>.</para>
</refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TRASH-ORIG-PATH:CAPS" role="macro" condition="since:2.24">
<title>G_FILE_ATTRIBUTE_TRASH_ORIG_PATH</title>
<indexterm zone="G-FILE-ATTRIBUTE-TRASH-ORIG-PATH:CAPS" role="2.24"><primary sortas="FILE_ATTRIBUTE_TRASH_ORIG_PATH">G_FILE_ATTRIBUTE_TRASH_ORIG_PATH</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TRASH_ORIG_PATH "trash::orig-path"     /* byte string */
</programlisting>
<para>A key in the "trash" namespace.  When requested against
items in <literal>trash:///</literal>, will return the original path to the file before it
was trashed. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-BYTE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_BYTE_STRING</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.24">2.24</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-TRASH-DELETION-DATE:CAPS" role="macro" condition="since:2.24">
<title>G_FILE_ATTRIBUTE_TRASH_DELETION_DATE</title>
<indexterm zone="G-FILE-ATTRIBUTE-TRASH-DELETION-DATE:CAPS" role="2.24"><primary sortas="FILE_ATTRIBUTE_TRASH_DELETION_DATE">G_FILE_ATTRIBUTE_TRASH_DELETION_DATE</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_TRASH_DELETION_DATE "trash::deletion-date"  /* string */
</programlisting>
<para>A key in the "trash" namespace.  When requested against
items in <literal>trash:///</literal>, will return the date and time when the file
was trashed. The format of the returned string is YYYY-MM-DDThh:mm:ss.
Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is <link linkend="G-FILE-ATTRIBUTE-TYPE-STRING:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_STRING</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.24">2.24</link></para></refsect2>
<refsect2 id="G-FILE-ATTRIBUTE-RECENT-MODIFIED:CAPS" role="macro" condition="since:2.52">
<title>G_FILE_ATTRIBUTE_RECENT_MODIFIED</title>
<indexterm zone="G-FILE-ATTRIBUTE-RECENT-MODIFIED:CAPS" role="2.52"><primary sortas="FILE_ATTRIBUTE_RECENT_MODIFIED">G_FILE_ATTRIBUTE_RECENT_MODIFIED</primary></indexterm>
<programlisting language="C">#define G_FILE_ATTRIBUTE_RECENT_MODIFIED "recent::modified"          /* int64 (time_t) */
</programlisting>
<para>A key in the "recent" namespace for getting time, when the metadata for the
file in <literal>recent:///</literal> was last changed. Corresponding <link linkend="GFileAttributeType"><type>GFileAttributeType</type></link> is
<link linkend="G-FILE-ATTRIBUTE-TYPE-INT64:CAPS"><literal>G_FILE_ATTRIBUTE_TYPE_INT64</literal></link>.</para>
<para role="since">Since: <link linkend="api-index-2.52">2.52</link></para></refsect2>

</refsect1>
<refsect1 id="GFileInfo.see-also">
<title>See Also</title>
<para><link linkend="GFile"><type>GFile</type></link>, <link linkend="gio-GFileAttribute">GFileAttribute</link></para>

</refsect1>

</refentry>
