<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="gio-Unix-Mounts">
<refmeta>
<refentrytitle role="top_of_page" id="gio-Unix-Mounts.top_of_page">Unix Mounts</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>Unix Mounts</refname>
<refpurpose>UNIX mounts</refpurpose>
</refnamediv>

<refsect1 id="gio-Unix-Mounts.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-free">g_unix_mount_free</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint"><returnvalue>gint</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-compare">g_unix_mount_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GUnixMountEntry"><returnvalue>GUnixMountEntry</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-copy">g_unix_mount_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-get-mount-path">g_unix_mount_get_mount_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-get-device-path">g_unix_mount_get_device_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-get-fs-type">g_unix_mount_get_fs_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-get-options">g_unix_mount_get_options</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-is-readonly">g_unix_mount_is_readonly</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-is-system-internal">g_unix_mount_is_system_internal</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-guess-icon">g_unix_mount_guess_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-guess-symbolic-icon">g_unix_mount_guess_symbolic_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-guess-name">g_unix_mount_guess_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-guess-can-eject">g_unix_mount_guess_can_eject</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-guess-should-display">g_unix_mount_guess_should_display</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-point-free">g_unix_mount_point_free</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint"><returnvalue>gint</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-point-compare">g_unix_mount_point_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GUnixMountPoint"><returnvalue>GUnixMountPoint</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-point-copy">g_unix_mount_point_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-point-get-mount-path">g_unix_mount_point_get_mount_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-point-get-device-path">g_unix_mount_point_get_device_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-point-get-fs-type">g_unix_mount_point_get_fs_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-point-get-options">g_unix_mount_point_get_options</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-point-is-readonly">g_unix_mount_point_is_readonly</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-point-is-user-mountable">g_unix_mount_point_is_user_mountable</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-point-is-loopback">g_unix_mount_point_is_loopback</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-point-guess-icon">g_unix_mount_point_guess_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-point-guess-symbolic-icon">g_unix_mount_point_guess_symbolic_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-point-guess-name">g_unix_mount_point_guess_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-point-guess-can-eject">g_unix_mount_point_guess_can_eject</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-points-get">g_unix_mount_points_get</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mounts-get">g_unix_mounts_get</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GUnixMountEntry"><returnvalue>GUnixMountEntry</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-at">g_unix_mount_at</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GUnixMountEntry"><returnvalue>GUnixMountEntry</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-for">g_unix_mount_for</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mounts-changed-since">g_unix_mounts_changed_since</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-points-changed-since">g_unix_mount_points_changed_since</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GUnixMountMonitor"><returnvalue>GUnixMountMonitor</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-monitor-get">g_unix_mount_monitor_get</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GUnixMountMonitor"><returnvalue>GUnixMountMonitor</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-mount-monitor-new">g_unix_mount_monitor_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-mount-monitor-set-rate-limit">g_unix_mount_monitor_set_rate_limit</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-is-mount-path-system-internal">g_unix_is_mount_path_system_internal</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-is-system-fs-type">g_unix_is_system_fs_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-is-system-device-path">g_unix_is_system_device_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gio-Unix-Mounts.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signals_return" colwidth="150px"/>
<colspec colname="signals_name" colwidth="300px"/>
<colspec colname="signals_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GUnixMountMonitor-mountpoints-changed">mountpoints-changed</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GUnixMountMonitor-mounts-changed">mounts-changed</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<anchor id="GUnixMountPoint"/><anchor id="GUnixMountEntry"/><anchor id="GUnixMountMonitor"/><refsect1 id="gio-Unix-Mounts.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GUnixMountPoint-struct">GUnixMountPoint</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GUnixMountEntry-struct">GUnixMountEntry</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GUnixMountMonitor-struct">GUnixMountMonitor</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="gio-Unix-Mounts.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GBoxed">GBoxed</link>
    <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> GUnixMountEntry
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GUnixMountPoint
    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GUnixMountMonitor
</screen>
</refsect1>

<refsect1 id="gio-Unix-Mounts.includes"><title>Includes</title><synopsis>#include &lt;gio/gunixmounts.h&gt;
</synopsis></refsect1>

<refsect1 id="gio-Unix-Mounts.description" role="desc">
<title role="desc.title">Description</title>
<para>Routines for managing mounted UNIX mount points and paths.</para>
<para>Note that <literal>&amp;lt;gio/gunixmounts.h&gt;</literal> belongs to the UNIX-specific GIO
interfaces, thus you have to use the <literal>gio-unix-2.0.pc</literal> pkg-config
file when using it.</para>

</refsect1>
<refsect1 id="gio-Unix-Mounts.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-unix-mount-free" role="function">
<title>g_unix_mount_free&#160;()</title>
<indexterm zone="g-unix-mount-free"><primary sortas="unix_mount_free">g_unix_mount_free</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_unix_mount_free (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Frees a unix mount.</para>
<refsect3 id="g-unix-mount-free.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-compare" role="function">
<title>g_unix_mount_compare&#160;()</title>
<indexterm zone="g-unix-mount-compare"><primary sortas="unix_mount_compare">g_unix_mount_compare</primary></indexterm>
<programlisting language="C"><link linkend="gint"><returnvalue>gint</returnvalue></link>
g_unix_mount_compare (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount1</parameter>,
                      <parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount2</parameter>);</programlisting>
<para>Compares two unix mounts.</para>
<refsect3 id="g-unix-mount-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount1</para></entry>
<entry role="parameter_description"><para>first <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> to compare.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mount2</para></entry>
<entry role="parameter_description"><para>second <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> to compare.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-compare.returns" role="returns">
<title>Returns</title>
<para> 1, 0 or -1 if <parameter>mount1</parameter>
is greater than, equal to,
or less than <parameter>mount2</parameter>
, respectively. </para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-copy" role="function" condition="since:2.54">
<title>g_unix_mount_copy&#160;()</title>
<indexterm zone="g-unix-mount-copy" role="2.54"><primary sortas="unix_mount_copy">g_unix_mount_copy</primary></indexterm>
<programlisting language="C"><link linkend="GUnixMountEntry"><returnvalue>GUnixMountEntry</returnvalue></link>&#160;*
g_unix_mount_copy (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Makes a copy of <parameter>mount_entry</parameter>
.</para>
<refsect3 id="g-unix-mount-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-copy.returns" role="returns">
<title>Returns</title>
<para>a new <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.54">2.54</link></para></refsect2>
<refsect2 id="g-unix-mount-get-mount-path" role="function">
<title>g_unix_mount_get_mount_path&#160;()</title>
<indexterm zone="g-unix-mount-get-mount-path"><primary sortas="unix_mount_get_mount_path">g_unix_mount_get_mount_path</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_get_mount_path (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Gets the mount path for a unix mount.</para>
<refsect3 id="g-unix-mount-get-mount-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>input <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> to get the mount path for.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-get-mount-path.returns" role="returns">
<title>Returns</title>
<para>the mount path for <parameter>mount_entry</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-get-device-path" role="function">
<title>g_unix_mount_get_device_path&#160;()</title>
<indexterm zone="g-unix-mount-get-device-path"><primary sortas="unix_mount_get_device_path">g_unix_mount_get_device_path</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_get_device_path (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Gets the device path for a unix mount.</para>
<refsect3 id="g-unix-mount-get-device-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMount"><type>GUnixMount</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-get-device-path.returns" role="returns">
<title>Returns</title>
<para>a string containing the device path. </para>
<para><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-get-fs-type" role="function">
<title>g_unix_mount_get_fs_type&#160;()</title>
<indexterm zone="g-unix-mount-get-fs-type"><primary sortas="unix_mount_get_fs_type">g_unix_mount_get_fs_type</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_get_fs_type (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Gets the filesystem type for the unix mount.</para>
<refsect3 id="g-unix-mount-get-fs-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMount"><type>GUnixMount</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-get-fs-type.returns" role="returns">
<title>Returns</title>
<para> a string containing the file system type.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-get-options" role="function" condition="since:2.58">
<title>g_unix_mount_get_options&#160;()</title>
<indexterm zone="g-unix-mount-get-options" role="2.58"><primary sortas="unix_mount_get_options">g_unix_mount_get_options</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_get_options (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Gets a comma-separated list of mount options for the unix mount. For example,
<literal>rw,relatime,seclabel,data=ordered</literal>.</para>
<para>This is similar to <link linkend="g-unix-mount-point-get-options"><function>g_unix_mount_point_get_options()</function></link>, but it takes
a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> as an argument.</para>
<refsect3 id="g-unix-mount-get-options.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-get-options.returns" role="returns">
<title>Returns</title>
<para>a string containing the options, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not
available. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.58">2.58</link></para></refsect2>
<refsect2 id="g-unix-mount-is-readonly" role="function">
<title>g_unix_mount_is_readonly&#160;()</title>
<indexterm zone="g-unix-mount-is-readonly"><primary sortas="unix_mount_is_readonly">g_unix_mount_is_readonly</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_is_readonly (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Checks if a unix mount is mounted read only.</para>
<refsect3 id="g-unix-mount-is-readonly.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMount"><type>GUnixMount</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-is-readonly.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>mount_entry</parameter>
is read only.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-is-system-internal" role="function">
<title>g_unix_mount_is_system_internal&#160;()</title>
<indexterm zone="g-unix-mount-is-system-internal"><primary sortas="unix_mount_is_system_internal">g_unix_mount_is_system_internal</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_is_system_internal (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Checks if a Unix mount is a system mount. This is the Boolean OR of
<link linkend="g-unix-is-system-fs-type"><function>g_unix_is_system_fs_type()</function></link>, <link linkend="g-unix-is-system-device-path"><function>g_unix_is_system_device_path()</function></link> and
<link linkend="g-unix-is-mount-path-system-internal"><function>g_unix_is_mount_path_system_internal()</function></link> on <parameter>mount_entry</parameter>
’s properties.</para>
<para>The definition of what a ‘system’ mount entry is may change over time as new
file system types and device paths are ignored.</para>
<refsect3 id="g-unix-mount-is-system-internal.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMount"><type>GUnixMount</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-is-system-internal.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the unix mount is for a system path.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-guess-icon" role="function">
<title>g_unix_mount_guess_icon&#160;()</title>
<indexterm zone="g-unix-mount-guess-icon"><primary sortas="unix_mount_guess_icon">g_unix_mount_guess_icon</primary></indexterm>
<programlisting language="C"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
g_unix_mount_guess_icon (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Guesses the icon of a Unix mount.</para>
<refsect3 id="g-unix-mount-guess-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-guess-icon.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GIcon"><type>GIcon</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-guess-symbolic-icon" role="function" condition="since:2.34">
<title>g_unix_mount_guess_symbolic_icon&#160;()</title>
<indexterm zone="g-unix-mount-guess-symbolic-icon" role="2.34"><primary sortas="unix_mount_guess_symbolic_icon">g_unix_mount_guess_symbolic_icon</primary></indexterm>
<programlisting language="C"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
g_unix_mount_guess_symbolic_icon (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Guesses the symbolic icon of a Unix mount.</para>
<refsect3 id="g-unix-mount-guess-symbolic-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-guess-symbolic-icon.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GIcon"><type>GIcon</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.34">2.34</link></para></refsect2>
<refsect2 id="g-unix-mount-guess-name" role="function">
<title>g_unix_mount_guess_name&#160;()</title>
<indexterm zone="g-unix-mount-guess-name"><primary sortas="unix_mount_guess_name">g_unix_mount_guess_name</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_guess_name (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Guesses the name of a Unix mount. 
The result is a translated string.</para>
<refsect3 id="g-unix-mount-guess-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-guess-name.returns" role="returns">
<title>Returns</title>
<para> A newly allocated string that must
be freed with <link linkend="g-free"><function>g_free()</function></link></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-guess-can-eject" role="function">
<title>g_unix_mount_guess_can_eject&#160;()</title>
<indexterm zone="g-unix-mount-guess-can-eject"><primary sortas="unix_mount_guess_can_eject">g_unix_mount_guess_can_eject</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_guess_can_eject (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Guesses whether a Unix mount can be ejected.</para>
<refsect3 id="g-unix-mount-guess-can-eject.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-guess-can-eject.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>mount_entry</parameter>
is deemed to be ejectable.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-guess-should-display" role="function">
<title>g_unix_mount_guess_should_display&#160;()</title>
<indexterm zone="g-unix-mount-guess-should-display"><primary sortas="unix_mount_guess_should_display">g_unix_mount_guess_should_display</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_guess_should_display (<parameter><link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> *mount_entry</parameter>);</programlisting>
<para>Guesses whether a Unix mount should be displayed in the UI.</para>
<refsect3 id="g-unix-mount-guess-should-display.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_entry</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-guess-should-display.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>mount_entry</parameter>
is deemed to be displayable.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-free" role="function">
<title>g_unix_mount_point_free&#160;()</title>
<indexterm zone="g-unix-mount-point-free"><primary sortas="unix_mount_point_free">g_unix_mount_point_free</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_unix_mount_point_free (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Frees a unix mount point.</para>
<refsect3 id="g-unix-mount-point-free.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>unix mount point to free.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-compare" role="function">
<title>g_unix_mount_point_compare&#160;()</title>
<indexterm zone="g-unix-mount-point-compare"><primary sortas="unix_mount_point_compare">g_unix_mount_point_compare</primary></indexterm>
<programlisting language="C"><link linkend="gint"><returnvalue>gint</returnvalue></link>
g_unix_mount_point_compare (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount1</parameter>,
                            <parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount2</parameter>);</programlisting>
<para>Compares two unix mount points.</para>
<refsect3 id="g-unix-mount-point-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount1</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMount"><type>GUnixMount</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mount2</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMount"><type>GUnixMount</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-compare.returns" role="returns">
<title>Returns</title>
<para> 1, 0 or -1 if <parameter>mount1</parameter>
is greater than, equal to,
or less than <parameter>mount2</parameter>
, respectively.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-copy" role="function" condition="since:2.54">
<title>g_unix_mount_point_copy&#160;()</title>
<indexterm zone="g-unix-mount-point-copy" role="2.54"><primary sortas="unix_mount_point_copy">g_unix_mount_point_copy</primary></indexterm>
<programlisting language="C"><link linkend="GUnixMountPoint"><returnvalue>GUnixMountPoint</returnvalue></link>&#160;*
g_unix_mount_point_copy (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Makes a copy of <parameter>mount_point</parameter>
.</para>
<refsect3 id="g-unix-mount-point-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-copy.returns" role="returns">
<title>Returns</title>
<para>a new <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.54">2.54</link></para></refsect2>
<refsect2 id="g-unix-mount-point-get-mount-path" role="function">
<title>g_unix_mount_point_get_mount_path&#160;()</title>
<indexterm zone="g-unix-mount-point-get-mount-path"><primary sortas="unix_mount_point_get_mount_path">g_unix_mount_point_get_mount_path</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_point_get_mount_path (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Gets the mount path for a unix mount point.</para>
<refsect3 id="g-unix-mount-point-get-mount-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-get-mount-path.returns" role="returns">
<title>Returns</title>
<para>a string containing the mount path. </para>
<para><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-get-device-path" role="function">
<title>g_unix_mount_point_get_device_path&#160;()</title>
<indexterm zone="g-unix-mount-point-get-device-path"><primary sortas="unix_mount_point_get_device_path">g_unix_mount_point_get_device_path</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_point_get_device_path (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Gets the device path for a unix mount point.</para>
<refsect3 id="g-unix-mount-point-get-device-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-get-device-path.returns" role="returns">
<title>Returns</title>
<para>a string containing the device path. </para>
<para><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-get-fs-type" role="function">
<title>g_unix_mount_point_get_fs_type&#160;()</title>
<indexterm zone="g-unix-mount-point-get-fs-type"><primary sortas="unix_mount_point_get_fs_type">g_unix_mount_point_get_fs_type</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_point_get_fs_type (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Gets the file system type for the mount point.</para>
<refsect3 id="g-unix-mount-point-get-fs-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-get-fs-type.returns" role="returns">
<title>Returns</title>
<para> a string containing the file system type.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-get-options" role="function" condition="since:2.32">
<title>g_unix_mount_point_get_options&#160;()</title>
<indexterm zone="g-unix-mount-point-get-options" role="2.32"><primary sortas="unix_mount_point_get_options">g_unix_mount_point_get_options</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_point_get_options (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Gets the options for the mount point.</para>
<refsect3 id="g-unix-mount-point-get-options.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-get-options.returns" role="returns">
<title>Returns</title>
<para> a string containing the options.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>
<refsect2 id="g-unix-mount-point-is-readonly" role="function">
<title>g_unix_mount_point_is_readonly&#160;()</title>
<indexterm zone="g-unix-mount-point-is-readonly"><primary sortas="unix_mount_point_is_readonly">g_unix_mount_point_is_readonly</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_point_is_readonly (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Checks if a unix mount point is read only.</para>
<refsect3 id="g-unix-mount-point-is-readonly.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-is-readonly.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a mount point is read only.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-is-user-mountable" role="function">
<title>g_unix_mount_point_is_user_mountable&#160;()</title>
<indexterm zone="g-unix-mount-point-is-user-mountable"><primary sortas="unix_mount_point_is_user_mountable">g_unix_mount_point_is_user_mountable</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_point_is_user_mountable (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Checks if a unix mount point is mountable by the user.</para>
<refsect3 id="g-unix-mount-point-is-user-mountable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-is-user-mountable.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the mount point is user mountable.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-is-loopback" role="function">
<title>g_unix_mount_point_is_loopback&#160;()</title>
<indexterm zone="g-unix-mount-point-is-loopback"><primary sortas="unix_mount_point_is_loopback">g_unix_mount_point_is_loopback</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_point_is_loopback (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Checks if a unix mount point is a loopback device.</para>
<refsect3 id="g-unix-mount-point-is-loopback.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-is-loopback.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the mount point is a loopback. <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise. </para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-guess-icon" role="function">
<title>g_unix_mount_point_guess_icon&#160;()</title>
<indexterm zone="g-unix-mount-point-guess-icon"><primary sortas="unix_mount_point_guess_icon">g_unix_mount_point_guess_icon</primary></indexterm>
<programlisting language="C"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
g_unix_mount_point_guess_icon (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Guesses the icon of a Unix mount point.</para>
<refsect3 id="g-unix-mount-point-guess-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-guess-icon.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GIcon"><type>GIcon</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-guess-symbolic-icon" role="function" condition="since:2.34">
<title>g_unix_mount_point_guess_symbolic_icon&#160;()</title>
<indexterm zone="g-unix-mount-point-guess-symbolic-icon" role="2.34"><primary sortas="unix_mount_point_guess_symbolic_icon">g_unix_mount_point_guess_symbolic_icon</primary></indexterm>
<programlisting language="C"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
g_unix_mount_point_guess_symbolic_icon
                               (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Guesses the symbolic icon of a Unix mount point.</para>
<refsect3 id="g-unix-mount-point-guess-symbolic-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-guess-symbolic-icon.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GIcon"><type>GIcon</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.34">2.34</link></para></refsect2>
<refsect2 id="g-unix-mount-point-guess-name" role="function">
<title>g_unix_mount_point_guess_name&#160;()</title>
<indexterm zone="g-unix-mount-point-guess-name"><primary sortas="unix_mount_point_guess_name">g_unix_mount_point_guess_name</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_unix_mount_point_guess_name (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Guesses the name of a Unix mount point. 
The result is a translated string.</para>
<refsect3 id="g-unix-mount-point-guess-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-guess-name.returns" role="returns">
<title>Returns</title>
<para> A newly allocated string that must
be freed with <link linkend="g-free"><function>g_free()</function></link></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-point-guess-can-eject" role="function">
<title>g_unix_mount_point_guess_can_eject&#160;()</title>
<indexterm zone="g-unix-mount-point-guess-can-eject"><primary sortas="unix_mount_point_guess_can_eject">g_unix_mount_point_guess_can_eject</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_point_guess_can_eject (<parameter><link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> *mount_point</parameter>);</programlisting>
<para>Guesses whether a Unix mount point can be ejected.</para>
<refsect3 id="g-unix-mount-point-guess-can-eject.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_point</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-point-guess-can-eject.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>mount_point</parameter>
is deemed to be ejectable.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-points-get" role="function">
<title>g_unix_mount_points_get&#160;()</title>
<indexterm zone="g-unix-mount-points-get"><primary sortas="unix_mount_points_get">g_unix_mount_points_get</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
g_unix_mount_points_get (<parameter><link linkend="guint64"><type>guint64</type></link> *time_read</parameter>);</programlisting>
<para>Gets a <link linkend="GList"><type>GList</type></link> of <link linkend="GUnixMountPoint"><type>GUnixMountPoint</type></link> containing the unix mount points.
If <parameter>time_read</parameter>
 is set, it will be filled with the mount timestamp,
allowing for checking if the mounts have changed with
<link linkend="g-unix-mount-points-changed-since"><function>g_unix_mount_points_changed_since()</function></link>.</para>
<refsect3 id="g-unix-mount-points-get.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>time_read</para></entry>
<entry role="parameter_description"><para>guint64 to contain a timestamp. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-points-get.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GList"><type>GList</type></link> of the UNIX mountpoints. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> GUnixMountPoint][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mounts-get" role="function">
<title>g_unix_mounts_get&#160;()</title>
<indexterm zone="g-unix-mounts-get"><primary sortas="unix_mounts_get">g_unix_mounts_get</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
g_unix_mounts_get (<parameter><link linkend="guint64"><type>guint64</type></link> *time_read</parameter>);</programlisting>
<para>Gets a <link linkend="GList"><type>GList</type></link> of <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> containing the unix mounts.
If <parameter>time_read</parameter>
 is set, it will be filled with the mount
timestamp, allowing for checking if the mounts have changed
with <link linkend="g-unix-mounts-changed-since"><function>g_unix_mounts_changed_since()</function></link>.</para>
<refsect3 id="g-unix-mounts-get.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>time_read</para></entry>
<entry role="parameter_description"><para>guint64 to contain a timestamp, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mounts-get.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GList"><type>GList</type></link> of the UNIX mounts. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> GUnixMountEntry][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-at" role="function">
<title>g_unix_mount_at&#160;()</title>
<indexterm zone="g-unix-mount-at"><primary sortas="unix_mount_at">g_unix_mount_at</primary></indexterm>
<programlisting language="C"><link linkend="GUnixMountEntry"><returnvalue>GUnixMountEntry</returnvalue></link>&#160;*
g_unix_mount_at (<parameter>const <link linkend="char"><type>char</type></link> *mount_path</parameter>,
                 <parameter><link linkend="guint64"><type>guint64</type></link> *time_read</parameter>);</programlisting>
<para>Gets a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> for a given mount path. If <parameter>time_read</parameter>

is set, it will be filled with a unix timestamp for checking
if the mounts have changed since with <link linkend="g-unix-mounts-changed-since"><function>g_unix_mounts_changed_since()</function></link>.</para>
<refsect3 id="g-unix-mount-at.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_path</para></entry>
<entry role="parameter_description"><para>path for a possible unix mount. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
<row><entry role="parameter_name"><para>time_read</para></entry>
<entry role="parameter_description"><para>guint64 to contain a timestamp. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-at.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-for" role="function" condition="since:2.52">
<title>g_unix_mount_for&#160;()</title>
<indexterm zone="g-unix-mount-for" role="2.52"><primary sortas="unix_mount_for">g_unix_mount_for</primary></indexterm>
<programlisting language="C"><link linkend="GUnixMountEntry"><returnvalue>GUnixMountEntry</returnvalue></link>&#160;*
g_unix_mount_for (<parameter>const <link linkend="char"><type>char</type></link> *file_path</parameter>,
                  <parameter><link linkend="guint64"><type>guint64</type></link> *time_read</parameter>);</programlisting>
<para>Gets a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link> for a given file path. If <parameter>time_read</parameter>

is set, it will be filled with a unix timestamp for checking
if the mounts have changed since with <link linkend="g-unix-mounts-changed-since"><function>g_unix_mounts_changed_since()</function></link>.</para>
<refsect3 id="g-unix-mount-for.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>file_path</para></entry>
<entry role="parameter_description"><para>file path on some unix mount. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
<row><entry role="parameter_name"><para>time_read</para></entry>
<entry role="parameter_description"><para>guint64 to contain a timestamp. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-for.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GUnixMountEntry"><type>GUnixMountEntry</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.52">2.52</link></para></refsect2>
<refsect2 id="g-unix-mounts-changed-since" role="function">
<title>g_unix_mounts_changed_since&#160;()</title>
<indexterm zone="g-unix-mounts-changed-since"><primary sortas="unix_mounts_changed_since">g_unix_mounts_changed_since</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mounts_changed_since (<parameter><link linkend="guint64"><type>guint64</type></link> time</parameter>);</programlisting>
<para>Checks if the unix mounts have changed since a given unix time.</para>
<refsect3 id="g-unix-mounts-changed-since.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>time</para></entry>
<entry role="parameter_description"><para>guint64 to contain a timestamp.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mounts-changed-since.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the mounts have changed since <parameter>time</parameter>
. </para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-points-changed-since" role="function">
<title>g_unix_mount_points_changed_since&#160;()</title>
<indexterm zone="g-unix-mount-points-changed-since"><primary sortas="unix_mount_points_changed_since">g_unix_mount_points_changed_since</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_mount_points_changed_since (<parameter><link linkend="guint64"><type>guint64</type></link> time</parameter>);</programlisting>
<para>Checks if the unix mount points have changed since a given unix time.</para>
<refsect3 id="g-unix-mount-points-changed-since.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>time</para></entry>
<entry role="parameter_description"><para>guint64 to contain a timestamp.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-mount-points-changed-since.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the mount points have changed since <parameter>time</parameter>
. </para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-monitor-get" role="function" condition="since:2.44">
<title>g_unix_mount_monitor_get&#160;()</title>
<indexterm zone="g-unix-mount-monitor-get" role="2.44"><primary sortas="unix_mount_monitor_get">g_unix_mount_monitor_get</primary></indexterm>
<programlisting language="C"><link linkend="GUnixMountMonitor"><returnvalue>GUnixMountMonitor</returnvalue></link>&#160;*
g_unix_mount_monitor_get (<parameter><type>void</type></parameter>);</programlisting>
<para>Gets the <link linkend="GUnixMountMonitor"><type>GUnixMountMonitor</type></link> for the current thread-default main
context.</para>
<para>The mount monitor can be used to monitor for changes to the list of
mounted filesystems as well as the list of mount points (ie: fstab
entries).</para>
<para>You must only call <link linkend="g-object-unref"><function>g_object_unref()</function></link> on the return value from under
the same main context as you called this function.</para>
<refsect3 id="g-unix-mount-monitor-get.returns" role="returns">
<title>Returns</title>
<para>the <link linkend="GUnixMountMonitor"><type>GUnixMountMonitor</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.44">2.44</link></para></refsect2>
<refsect2 id="g-unix-mount-monitor-new" role="function" condition="deprecated:2.44:Use g_unix_mount_monitor_get() instead.">
<title>g_unix_mount_monitor_new&#160;()</title>
<indexterm zone="g-unix-mount-monitor-new" role="deprecated"><primary sortas="unix_mount_monitor_new">g_unix_mount_monitor_new</primary></indexterm>
<programlisting language="C"><link linkend="GUnixMountMonitor"><returnvalue>GUnixMountMonitor</returnvalue></link>&#160;*
g_unix_mount_monitor_new (<parameter><type>void</type></parameter>);</programlisting>
<warning><para><literal>g_unix_mount_monitor_new</literal> has been deprecated since version 2.44 and should not be used in newly-written code.</para> <para>Use <link linkend="g-unix-mount-monitor-get"><function>g_unix_mount_monitor_get()</function></link> instead.</para>
</warning>
<para>Deprecated alias for <link linkend="g-unix-mount-monitor-get"><function>g_unix_mount_monitor_get()</function></link>.</para>
<para>This function was never a true constructor, which is why it was
renamed.</para>
<refsect3 id="g-unix-mount-monitor-new.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GUnixMountMonitor"><type>GUnixMountMonitor</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-mount-monitor-set-rate-limit" role="function" condition="deprecated:2.44:This function does nothing.  Don't call it.|since:2.18">
<title>g_unix_mount_monitor_set_rate_limit&#160;()</title>
<indexterm zone="g-unix-mount-monitor-set-rate-limit" role="deprecated"><primary sortas="unix_mount_monitor_set_rate_limit">g_unix_mount_monitor_set_rate_limit</primary></indexterm><indexterm zone="g-unix-mount-monitor-set-rate-limit" role="2.18"><primary sortas="unix_mount_monitor_set_rate_limit">g_unix_mount_monitor_set_rate_limit</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_unix_mount_monitor_set_rate_limit (<parameter><link linkend="GUnixMountMonitor"><type>GUnixMountMonitor</type></link> *mount_monitor</parameter>,
                                     <parameter><link linkend="int"><type>int</type></link> limit_msec</parameter>);</programlisting>
<warning><para><literal>g_unix_mount_monitor_set_rate_limit</literal> has been deprecated since version 2.44 and should not be used in newly-written code.</para> <para>This function does nothing.  Don't call it.</para>
</warning>
<para>This function does nothing.</para>
<para>Before 2.44, this was a partially-effective way of controlling the
rate at which events would be reported under some uncommon
circumstances.  Since <parameter>mount_monitor</parameter>
 is a singleton, it also meant
that calling this function would have side effects for other users of
the monitor.</para>
<refsect3 id="g-unix-mount-monitor-set-rate-limit.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_monitor</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixMountMonitor"><type>GUnixMountMonitor</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>limit_msec</para></entry>
<entry role="parameter_description"><para>a integer with the limit in milliseconds to
poll for changes.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.18">2.18</link></para></refsect2>
<refsect2 id="g-unix-is-mount-path-system-internal" role="function">
<title>g_unix_is_mount_path_system_internal&#160;()</title>
<indexterm zone="g-unix-is-mount-path-system-internal"><primary sortas="unix_is_mount_path_system_internal">g_unix_is_mount_path_system_internal</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_is_mount_path_system_internal (<parameter>const <link linkend="char"><type>char</type></link> *mount_path</parameter>);</programlisting>
<para>Determines if <parameter>mount_path</parameter>
 is considered an implementation of the
OS. This is primarily used for hiding mountable and mounted volumes
that only are used in the OS and has little to no relevance to the
casual user.</para>
<refsect3 id="g-unix-is-mount-path-system-internal.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mount_path</para></entry>
<entry role="parameter_description"><para>a mount path, e.g. <literal>/media/disk</literal> or <literal>/usr</literal>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-is-mount-path-system-internal.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>mount_path</parameter>
is considered an implementation detail
of the OS.</para>
</refsect3></refsect2>
<refsect2 id="g-unix-is-system-fs-type" role="function" condition="since:2.56">
<title>g_unix_is_system_fs_type&#160;()</title>
<indexterm zone="g-unix-is-system-fs-type" role="2.56"><primary sortas="unix_is_system_fs_type">g_unix_is_system_fs_type</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_is_system_fs_type (<parameter>const <link linkend="char"><type>char</type></link> *fs_type</parameter>);</programlisting>
<para>Determines if <parameter>fs_type</parameter>
 is considered a type of file system which is only
used in implementation of the OS. This is primarily used for hiding
mounted volumes that are intended as APIs for programs to read, and system
administrators at a shell; rather than something that should, for example,
appear in a GUI. For example, the Linux <literal>/proc</literal> filesystem.</para>
<para>The list of file system types considered ‘system’ ones may change over time.</para>
<refsect3 id="g-unix-is-system-fs-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>fs_type</para></entry>
<entry role="parameter_description"><para>a file system type, e.g. <literal>procfs</literal> or <literal>tmpfs</literal></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-is-system-fs-type.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>fs_type</parameter>
is considered an implementation detail of the OS.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.56">2.56</link></para></refsect2>
<refsect2 id="g-unix-is-system-device-path" role="function" condition="since:2.56">
<title>g_unix_is_system_device_path&#160;()</title>
<indexterm zone="g-unix-is-system-device-path" role="2.56"><primary sortas="unix_is_system_device_path">g_unix_is_system_device_path</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_is_system_device_path (<parameter>const <link linkend="char"><type>char</type></link> *device_path</parameter>);</programlisting>
<para>Determines if <parameter>device_path</parameter>
 is considered a block device path which is only
used in implementation of the OS. This is primarily used for hiding
mounted volumes that are intended as APIs for programs to read, and system
administrators at a shell; rather than something that should, for example,
appear in a GUI. For example, the Linux <literal>/proc</literal> filesystem.</para>
<para>The list of device paths considered ‘system’ ones may change over time.</para>
<refsect3 id="g-unix-is-system-device-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>device_path</para></entry>
<entry role="parameter_description"><para>a device path, e.g. <literal>/dev/loop0</literal> or <literal>nfsd</literal></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-is-system-device-path.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>device_path</parameter>
is considered an implementation detail of
the OS.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.56">2.56</link></para></refsect2>

</refsect1>
<refsect1 id="gio-Unix-Mounts.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GUnixMountPoint-struct" role="struct">
<title>GUnixMountPoint</title>
<indexterm zone="GUnixMountPoint-struct"><primary sortas="UnixMountPoint">GUnixMountPoint</primary></indexterm>
<programlisting language="C">typedef struct _GUnixMountPoint GUnixMountPoint;</programlisting>
<para>Defines a Unix mount point (e.g. &lt;filename>/dev&lt;/filename>).
This corresponds roughly to a fstab entry.</para>
</refsect2>
<refsect2 id="GUnixMountEntry-struct" role="struct">
<title>GUnixMountEntry</title>
<indexterm zone="GUnixMountEntry-struct"><primary sortas="UnixMountEntry">GUnixMountEntry</primary></indexterm>
<programlisting language="C">typedef struct _GUnixMountEntry GUnixMountEntry;</programlisting>
<para>Defines a Unix mount entry (e.g. &lt;filename>/media/cdrom&lt;/filename>).
This corresponds roughly to a mtab entry.</para>
</refsect2>
<refsect2 id="GUnixMountMonitor-struct" role="struct">
<title>GUnixMountMonitor</title>
<indexterm zone="GUnixMountMonitor-struct"><primary sortas="UnixMountMonitor">GUnixMountMonitor</primary></indexterm>
<programlisting language="C">typedef struct _GUnixMountMonitor GUnixMountMonitor;</programlisting>
<para>Watches <link linkend="GUnixMounts"><type>GUnixMounts</type></link> for changes.</para>
</refsect2>

</refsect1>
<refsect1 id="gio-Unix-Mounts.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GUnixMountMonitor-mountpoints-changed" role="signal"><title>The <literal>“mountpoints-changed”</literal> signal</title>
<indexterm zone="GUnixMountMonitor-mountpoints-changed"><primary sortas="UnixMountMonitor::mountpoints-changed">GUnixMountMonitor::mountpoints-changed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GUnixMountMonitor"><type>GUnixMountMonitor</type></link> *monitor,
               <link linkend="gpointer"><type>gpointer</type></link>           user_data)</programlisting>
<para>Emitted when the unix mount points have changed.</para>
<refsect3 id="GUnixMountMonitor-mountpoints-changed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>monitor</para></entry>
<entry role="parameter_description"><para>the object on which the signal is emitted</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
</refsect2><refsect2 id="GUnixMountMonitor-mounts-changed" role="signal"><title>The <literal>“mounts-changed”</literal> signal</title>
<indexterm zone="GUnixMountMonitor-mounts-changed"><primary sortas="UnixMountMonitor::mounts-changed">GUnixMountMonitor::mounts-changed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GUnixMountMonitor"><type>GUnixMountMonitor</type></link> *monitor,
               <link linkend="gpointer"><type>gpointer</type></link>           user_data)</programlisting>
<para>Emitted when the unix mounts have changed.</para>
<refsect3 id="GUnixMountMonitor-mounts-changed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>monitor</para></entry>
<entry role="parameter_description"><para>the object on which the signal is emitted</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
</refsect2>
</refsect1>

</refentry>
