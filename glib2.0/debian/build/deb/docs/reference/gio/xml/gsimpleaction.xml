<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GSimpleAction">
<refmeta>
<refentrytitle role="top_of_page" id="GSimpleAction.top_of_page">GSimpleAction</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GSimpleAction</refname>
<refpurpose>A simple GAction implementation</refpurpose>
</refnamediv>

<refsect1 id="GSimpleAction.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GSimpleAction"><returnvalue>GSimpleAction</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-simple-action-new">g_simple_action_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GSimpleAction"><returnvalue>GSimpleAction</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-simple-action-new-stateful">g_simple_action_new_stateful</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-simple-action-set-enabled">g_simple_action_set_enabled</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-simple-action-set-state">g_simple_action_set_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-simple-action-set-state-hint">g_simple_action_set_state_hint</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GSimpleAction.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="gboolean"><type>gboolean</type></link></entry><entry role="property_name"><link linkend="GSimpleAction--enabled">enabled</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="GSimpleAction--name">name</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="GVariantType"><type>GVariantType</type></link>&#160;*</entry><entry role="property_name"><link linkend="GSimpleAction--parameter-type">parameter-type</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="GVariant"><type>GVariant</type></link>&#160;*</entry><entry role="property_name"><link linkend="GSimpleAction--state">state</link></entry><entry role="property_flags">Read / Write / Construct</entry></row>
<row><entry role="property_type"><link linkend="GVariantType"><type>GVariantType</type></link>&#160;*</entry><entry role="property_name"><link linkend="GSimpleAction--state-type">state-type</link></entry><entry role="property_flags">Read</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GSimpleAction.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signals_return" colwidth="150px"/>
<colspec colname="signals_name" colwidth="300px"/>
<colspec colname="signals_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GSimpleAction-activate">activate</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GSimpleAction-change-state">change-state</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GSimpleAction.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GSimpleAction-struct">GSimpleAction</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GSimpleAction.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GSimpleAction
</screen>
</refsect1>
<refsect1 id="GSimpleAction.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GSimpleAction implements
 <link linkend="GAction">GAction</link>.</para>

</refsect1>

<refsect1 id="GSimpleAction.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GSimpleAction.description" role="desc">
<title role="desc.title">Description</title>
<para>A <link linkend="GSimpleAction"><type>GSimpleAction</type></link> is the obvious simple implementation of the <link linkend="GAction"><type>GAction</type></link>
interface. This is the easiest way to create an action for purposes of
adding it to a <link linkend="GSimpleActionGroup"><type>GSimpleActionGroup</type></link>.</para>
<para>See also <link linkend="GtkAction"><type>GtkAction</type></link>.</para>

</refsect1>
<refsect1 id="GSimpleAction.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-simple-action-new" role="function" condition="since:2.28">
<title>g_simple_action_new&#160;()</title>
<indexterm zone="g-simple-action-new" role="2.28"><primary sortas="simple_action_new">g_simple_action_new</primary></indexterm>
<programlisting language="C"><link linkend="GSimpleAction"><returnvalue>GSimpleAction</returnvalue></link>&#160;*
g_simple_action_new (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                     <parameter>const <link linkend="GVariantType"><type>GVariantType</type></link> *parameter_type</parameter>);</programlisting>
<para>Creates a new action.</para>
<para>The created action is stateless. See <link linkend="g-simple-action-new-stateful"><function>g_simple_action_new_stateful()</function></link> to create
an action that has state.</para>
<refsect3 id="g-simple-action-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the name of the action</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameter_type</para></entry>
<entry role="parameter_description"><para>the type of parameter that will be passed to
handlers for the <link linkend="GSimpleAction-activate"><type>“activate”</type></link> signal, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for no parameter. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-simple-action-new.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GSimpleAction"><type>GSimpleAction</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-simple-action-new-stateful" role="function" condition="since:2.28">
<title>g_simple_action_new_stateful&#160;()</title>
<indexterm zone="g-simple-action-new-stateful" role="2.28"><primary sortas="simple_action_new_stateful">g_simple_action_new_stateful</primary></indexterm>
<programlisting language="C"><link linkend="GSimpleAction"><returnvalue>GSimpleAction</returnvalue></link>&#160;*
g_simple_action_new_stateful (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>,
                              <parameter>const <link linkend="GVariantType"><type>GVariantType</type></link> *parameter_type</parameter>,
                              <parameter><link linkend="GVariant"><type>GVariant</type></link> *state</parameter>);</programlisting>
<para>Creates a new stateful action.</para>
<para>All future state values must have the same <link linkend="GVariantType"><type>GVariantType</type></link> as the initial
<parameter>state</parameter>
.</para>
<para>If the <parameter>state</parameter>
 <link linkend="GVariant"><type>GVariant</type></link> is floating, it is consumed.</para>
<refsect3 id="g-simple-action-new-stateful.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the name of the action</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameter_type</para></entry>
<entry role="parameter_description"><para>the type of the parameter that will be passed to
handlers for the <link linkend="GSimpleAction-activate"><type>“activate”</type></link> signal, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for no parameter. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>state</para></entry>
<entry role="parameter_description"><para>the initial state of the action</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-simple-action-new-stateful.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GSimpleAction"><type>GSimpleAction</type></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-simple-action-set-enabled" role="function" condition="since:2.28">
<title>g_simple_action_set_enabled&#160;()</title>
<indexterm zone="g-simple-action-set-enabled" role="2.28"><primary sortas="simple_action_set_enabled">g_simple_action_set_enabled</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_simple_action_set_enabled (<parameter><link linkend="GSimpleAction"><type>GSimpleAction</type></link> *simple</parameter>,
                             <parameter><link linkend="gboolean"><type>gboolean</type></link> enabled</parameter>);</programlisting>
<para>Sets the action as enabled or not.</para>
<para>An action must be enabled in order to be activated or in order to
have its state changed from outside callers.</para>
<para>This should only be called by the implementor of the action.  Users
of the action should not attempt to modify its enabled flag.</para>
<refsect3 id="g-simple-action-set-enabled.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>simple</para></entry>
<entry role="parameter_description"><para>a <link linkend="GSimpleAction"><type>GSimpleAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>enabled</para></entry>
<entry role="parameter_description"><para>whether the action is enabled</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-simple-action-set-state" role="function" condition="since:2.30">
<title>g_simple_action_set_state&#160;()</title>
<indexterm zone="g-simple-action-set-state" role="2.30"><primary sortas="simple_action_set_state">g_simple_action_set_state</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_simple_action_set_state (<parameter><link linkend="GSimpleAction"><type>GSimpleAction</type></link> *simple</parameter>,
                           <parameter><link linkend="GVariant"><type>GVariant</type></link> *value</parameter>);</programlisting>
<para>Sets the state of the action.</para>
<para>This directly updates the 'state' property to the given value.</para>
<para>This should only be called by the implementor of the action.  Users
of the action should not attempt to directly modify the 'state'
property.  Instead, they should call <link linkend="g-action-change-state"><function>g_action_change_state()</function></link> to
request the change.</para>
<para>If the <parameter>value</parameter>
 GVariant is floating, it is consumed.</para>
<refsect3 id="g-simple-action-set-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>simple</para></entry>
<entry role="parameter_description"><para>a <link linkend="GSimpleAction"><type>GSimpleAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>the new <link linkend="GVariant"><type>GVariant</type></link> for the state</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.30">2.30</link></para></refsect2>
<refsect2 id="g-simple-action-set-state-hint" role="function" condition="since:2.44">
<title>g_simple_action_set_state_hint&#160;()</title>
<indexterm zone="g-simple-action-set-state-hint" role="2.44"><primary sortas="simple_action_set_state_hint">g_simple_action_set_state_hint</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_simple_action_set_state_hint (<parameter><link linkend="GSimpleAction"><type>GSimpleAction</type></link> *simple</parameter>,
                                <parameter><link linkend="GVariant"><type>GVariant</type></link> *state_hint</parameter>);</programlisting>
<para>Sets the state hint for the action.</para>
<para>See <link linkend="g-action-get-state-hint"><function>g_action_get_state_hint()</function></link> for more information about
action state hints.</para>
<refsect3 id="g-simple-action-set-state-hint.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>simple</para></entry>
<entry role="parameter_description"><para>a <link linkend="GSimpleAction"><type>GSimpleAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>state_hint</para></entry>
<entry role="parameter_description"><para>a <link linkend="GVariant"><type>GVariant</type></link> representing the state hint. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.44">2.44</link></para></refsect2>

</refsect1>
<refsect1 id="GSimpleAction.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GSimpleAction-struct" role="struct">
<title>GSimpleAction</title>
<indexterm zone="GSimpleAction-struct"><primary sortas="SimpleAction">GSimpleAction</primary></indexterm>
<programlisting language="C">typedef struct _GSimpleAction GSimpleAction;</programlisting>
<para><link linkend="GSimpleAction"><type>GSimpleAction</type></link> is an opaque data structure and can only be accessed
using the following functions.</para>
</refsect2>

</refsect1>
<refsect1 id="GSimpleAction.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GSimpleAction--enabled" role="property"><title>The <literal>“enabled”</literal> property</title>
<indexterm zone="GSimpleAction--enabled" role="2.28"><primary sortas="SimpleAction:enabled">GSimpleAction:enabled</primary></indexterm>
<programlisting>  “enabled”                  <link linkend="gboolean"><type>gboolean</type></link></programlisting>
<para>If <parameter>action</parameter>
 is currently enabled.</para>
<para>If the action is disabled then calls to <link linkend="g-action-activate"><function>g_action_activate()</function></link> and
<link linkend="g-action-change-state"><function>g_action_change_state()</function></link> have no effect.</para>
<para>Flags: Read / Write</para>
<para>Default value: TRUE</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GSimpleAction--name" role="property"><title>The <literal>“name”</literal> property</title>
<indexterm zone="GSimpleAction--name" role="2.28"><primary sortas="SimpleAction:name">GSimpleAction:name</primary></indexterm>
<programlisting>  “name”                     <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The name of the action. This is mostly meaningful for identifying
the action once it has been added to a <link linkend="GSimpleActionGroup"><type>GSimpleActionGroup</type></link>.</para>
<para>Flags: Read / Write / Construct Only</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GSimpleAction--parameter-type" role="property"><title>The <literal>“parameter-type”</literal> property</title>
<indexterm zone="GSimpleAction--parameter-type" role="2.28"><primary sortas="SimpleAction:parameter-type">GSimpleAction:parameter-type</primary></indexterm>
<programlisting>  “parameter-type”           <link linkend="GVariantType"><type>GVariantType</type></link>&#160;*</programlisting>
<para>The type of the parameter that must be given when activating the
action.</para>
<para>Flags: Read / Write / Construct Only</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GSimpleAction--state" role="property"><title>The <literal>“state”</literal> property</title>
<indexterm zone="GSimpleAction--state" role="2.28"><primary sortas="SimpleAction:state">GSimpleAction:state</primary></indexterm>
<programlisting>  “state”                    <link linkend="GVariant"><type>GVariant</type></link>&#160;*</programlisting>
<para>The state of the action, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the action is stateless.</para>
<para>Flags: Read / Write / Construct</para>
<para>Allowed values: GVariant&lt;*&gt;</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GSimpleAction--state-type" role="property"><title>The <literal>“state-type”</literal> property</title>
<indexterm zone="GSimpleAction--state-type" role="2.28"><primary sortas="SimpleAction:state-type">GSimpleAction:state-type</primary></indexterm>
<programlisting>  “state-type”               <link linkend="GVariantType"><type>GVariantType</type></link>&#160;*</programlisting>
<para>The <link linkend="GVariantType"><type>GVariantType</type></link> of the state that the action has, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
action is stateless.</para>
<para>Flags: Read</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>

</refsect1>
<refsect1 id="GSimpleAction.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GSimpleAction-activate" role="signal"><title>The <literal>“activate”</literal> signal</title>
<indexterm zone="GSimpleAction-activate" role="2.28"><primary sortas="SimpleAction::activate">GSimpleAction::activate</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GSimpleAction"><type>GSimpleAction</type></link> *simple,
               <link linkend="GVariant"><type>GVariant</type></link>      *parameter,
               <link linkend="gpointer"><type>gpointer</type></link>       user_data)</programlisting>
<para>Indicates that the action was just activated.</para>
<para><parameter>parameter</parameter>
 will always be of the expected type, i.e. the parameter type
specified when the action was created. If an incorrect type is given when
activating the action, this signal is not emitted.</para>
<para>Since GLib 2.40, if no handler is connected to this signal then the
default behaviour for boolean-stated actions with a <link linkend="NULL:CAPS"><literal>NULL</literal></link> parameter
type is to toggle them via the <link linkend="GSimpleAction-change-state"><type>“change-state”</type></link> signal.
For stateful actions where the state type is equal to the parameter
type, the default is to forward them directly to
<link linkend="GSimpleAction-change-state"><type>“change-state”</type></link>.  This should allow almost all users
of <link linkend="GSimpleAction"><type>GSimpleAction</type></link> to connect only one handler or the other.</para>
<refsect3 id="GSimpleAction-activate.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>simple</para></entry>
<entry role="parameter_description"><para>the <link linkend="GSimpleAction"><type>GSimpleAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameter</para></entry>
<entry role="parameter_description"><para>the parameter to the activation, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if it has
no parameter. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2><refsect2 id="GSimpleAction-change-state" role="signal"><title>The <literal>“change-state”</literal> signal</title>
<indexterm zone="GSimpleAction-change-state" role="2.30"><primary sortas="SimpleAction::change-state">GSimpleAction::change-state</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GSimpleAction"><type>GSimpleAction</type></link> *simple,
               <link linkend="GVariant"><type>GVariant</type></link>      *value,
               <link linkend="gpointer"><type>gpointer</type></link>       user_data)</programlisting>
<para>Indicates that the action just received a request to change its
state.</para>
<para><parameter>value</parameter>
 will always be of the correct state type, i.e. the type of the
initial state passed to <link linkend="g-simple-action-new-stateful"><function>g_simple_action_new_stateful()</function></link>. If an incorrect
type is given when requesting to change the state, this signal is not
emitted.</para>
<para>If no handler is connected to this signal then the default
behaviour is to call <link linkend="g-simple-action-set-state"><function>g_simple_action_set_state()</function></link> to set the state
to the requested value. If you connect a signal handler then no
default action is taken. If the state should change then you must
call <link linkend="g-simple-action-set-state"><function>g_simple_action_set_state()</function></link> from the handler.</para>
<para>An example of a 'change-state' handler:</para>
<informalexample><programlisting role="example"><![CDATA[
static void
change_volume_state (GSimpleAction *action,
                     GVariant      *value,
                     gpointer       user_data)
{
  gint requested;

  requested = g_variant_get_int32 (value);

  // Volume only goes from 0 to 10
  if (0 <= requested && requested <= 10)
    g_simple_action_set_state (action, value);
}
]]></programlisting></informalexample>
<para></para>
<para>The handler need not set the state to the requested value.
It could set it to any value at all, or take some other action.</para>
<refsect3 id="GSimpleAction-change-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>simple</para></entry>
<entry role="parameter_description"><para>the <link linkend="GSimpleAction"><type>GSimpleAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>the requested value for the state. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
<para role="since">Since: <link linkend="api-index-2.30">2.30</link></para></refsect2>
</refsect1>

</refentry>
