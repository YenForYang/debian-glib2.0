<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GUnixConnection">
<refmeta>
<refentrytitle role="top_of_page" id="GUnixConnection.top_of_page">GUnixConnection</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GUnixConnection</refname>
<refpurpose>A UNIX domain GSocketConnection</refpurpose>
</refnamediv>

<refsect1 id="GUnixConnection.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="gint"><returnvalue>gint</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-connection-receive-fd">g_unix_connection_receive_fd</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-connection-send-fd">g_unix_connection_send_fd</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GCredentials"><returnvalue>GCredentials</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-connection-receive-credentials">g_unix_connection_receive_credentials</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-connection-receive-credentials-async">g_unix_connection_receive_credentials_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GCredentials"><returnvalue>GCredentials</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-unix-connection-receive-credentials-finish">g_unix_connection_receive_credentials_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-connection-send-credentials">g_unix_connection_send_credentials</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-connection-send-credentials-async">g_unix_connection_send_credentials_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-unix-connection-send-credentials-finish">g_unix_connection_send_credentials_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GUnixConnection.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GUnixConnection-struct">GUnixConnection</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GUnixConnection.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GIOStream">GIOStream</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GSocketConnection">GSocketConnection</link>
            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GUnixConnection
</screen>
</refsect1>

<refsect1 id="GUnixConnection.includes"><title>Includes</title><synopsis>#include &lt;gio/gunixconnection.h&gt;
</synopsis></refsect1>

<refsect1 id="GUnixConnection.description" role="desc">
<title role="desc.title">Description</title>
<para>This is the subclass of <link linkend="GSocketConnection"><type>GSocketConnection</type></link> that is created
for UNIX domain sockets.</para>
<para>It contains functions to do some of the UNIX socket specific
functionality like passing file descriptors.</para>
<para>Note that <literal>&amp;lt;gio/gunixconnection.h&gt;</literal> belongs to the UNIX-specific
GIO interfaces, thus you have to use the <literal>gio-unix-2.0.pc</literal>
pkg-config file when using it.</para>

</refsect1>
<refsect1 id="GUnixConnection.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-unix-connection-receive-fd" role="function" condition="since:2.22">
<title>g_unix_connection_receive_fd&#160;()</title>
<indexterm zone="g-unix-connection-receive-fd" role="2.22"><primary sortas="unix_connection_receive_fd">g_unix_connection_receive_fd</primary></indexterm>
<programlisting language="C"><link linkend="gint"><returnvalue>gint</returnvalue></link>
g_unix_connection_receive_fd (<parameter><link linkend="GUnixConnection"><type>GUnixConnection</type></link> *connection</parameter>,
                              <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                              <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Receives a file descriptor from the sending end of the connection.
The sending end has to call <link linkend="g-unix-connection-send-fd"><function>g_unix_connection_send_fd()</function></link> for this
to work.</para>
<para>As well as reading the fd this also reads a single byte from the
stream, as this is required for fd passing to work on some
implementations.</para>
<refsect3 id="g-unix-connection-receive-fd.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixConnection"><type>GUnixConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-connection-receive-fd.returns" role="returns">
<title>Returns</title>
<para> a file descriptor on success, -1 on error.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="g-unix-connection-send-fd" role="function" condition="since:2.22">
<title>g_unix_connection_send_fd&#160;()</title>
<indexterm zone="g-unix-connection-send-fd" role="2.22"><primary sortas="unix_connection_send_fd">g_unix_connection_send_fd</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_connection_send_fd (<parameter><link linkend="GUnixConnection"><type>GUnixConnection</type></link> *connection</parameter>,
                           <parameter><link linkend="gint"><type>gint</type></link> fd</parameter>,
                           <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                           <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Passes a file descriptor to the receiving side of the
connection. The receiving end has to call <link linkend="g-unix-connection-receive-fd"><function>g_unix_connection_receive_fd()</function></link>
to accept the file descriptor.</para>
<para>As well as sending the fd this also writes a single byte to the
stream, as this is required for fd passing to work on some
implementations.</para>
<refsect3 id="g-unix-connection-send-fd.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixConnection"><type>GUnixConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fd</para></entry>
<entry role="parameter_description"><para>a file descriptor</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-connection-send-fd.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="g-unix-connection-receive-credentials" role="function" condition="since:2.26">
<title>g_unix_connection_receive_credentials&#160;()</title>
<indexterm zone="g-unix-connection-receive-credentials" role="2.26"><primary sortas="unix_connection_receive_credentials">g_unix_connection_receive_credentials</primary></indexterm>
<programlisting language="C"><link linkend="GCredentials"><returnvalue>GCredentials</returnvalue></link>&#160;*
g_unix_connection_receive_credentials (<parameter><link linkend="GUnixConnection"><type>GUnixConnection</type></link> *connection</parameter>,
                                       <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                       <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Receives credentials from the sending end of the connection.  The
sending end has to call <link linkend="g-unix-connection-send-credentials"><function>g_unix_connection_send_credentials()</function></link> (or
similar) for this to work.</para>
<para>As well as reading the credentials this also reads (and discards) a
single byte from the stream, as this is required for credentials
passing to work on some implementations.</para>
<para>Other ways to exchange credentials with a foreign peer includes the
<link linkend="GUnixCredentialsMessage"><type>GUnixCredentialsMessage</type></link> type and <link linkend="g-socket-get-credentials"><function>g_socket_get_credentials()</function></link> function.</para>
<refsect3 id="g-unix-connection-receive-credentials.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GUnixConnection"><type>GUnixConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-connection-receive-credentials.returns" role="returns">
<title>Returns</title>
<para>Received credentials on success (free with
<link linkend="g-object-unref"><function>g_object_unref()</function></link>), <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-unix-connection-receive-credentials-async" role="function" condition="since:2.32">
<title>g_unix_connection_receive_credentials_async&#160;()</title>
<indexterm zone="g-unix-connection-receive-credentials-async" role="2.32"><primary sortas="unix_connection_receive_credentials_async">g_unix_connection_receive_credentials_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_unix_connection_receive_credentials_async
                               (<parameter><link linkend="GUnixConnection"><type>GUnixConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously receive credentials.</para>
<para>For more details, see <link linkend="g-unix-connection-receive-credentials"><function>g_unix_connection_receive_credentials()</function></link> which is
the synchronous version of this call.</para>
<para>When the operation is finished, <parameter>callback</parameter>
 will be called. You can then call
<link linkend="g-unix-connection-receive-credentials-finish"><function>g_unix_connection_receive_credentials_finish()</function></link> to get the result of the operation.</para>
<refsect3 id="g-unix-connection-receive-credentials-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GUnixConnection"><type>GUnixConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is satisfied. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>
<refsect2 id="g-unix-connection-receive-credentials-finish" role="function" condition="since:2.32">
<title>g_unix_connection_receive_credentials_finish&#160;()</title>
<indexterm zone="g-unix-connection-receive-credentials-finish" role="2.32"><primary sortas="unix_connection_receive_credentials_finish">g_unix_connection_receive_credentials_finish</primary></indexterm>
<programlisting language="C"><link linkend="GCredentials"><returnvalue>GCredentials</returnvalue></link>&#160;*
g_unix_connection_receive_credentials_finish
                               (<parameter><link linkend="GUnixConnection"><type>GUnixConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an asynchronous receive credentials operation started with
<link linkend="g-unix-connection-receive-credentials-async"><function>g_unix_connection_receive_credentials_async()</function></link>.</para>
<refsect3 id="g-unix-connection-receive-credentials-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GUnixConnection"><type>GUnixConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-connection-receive-credentials-finish.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GCredentials"><type>GCredentials</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error.
Free the returned object with <link linkend="g-object-unref"><function>g_object_unref()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>
<refsect2 id="g-unix-connection-send-credentials" role="function" condition="since:2.26">
<title>g_unix_connection_send_credentials&#160;()</title>
<indexterm zone="g-unix-connection-send-credentials" role="2.26"><primary sortas="unix_connection_send_credentials">g_unix_connection_send_credentials</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_connection_send_credentials (<parameter><link linkend="GUnixConnection"><type>GUnixConnection</type></link> *connection</parameter>,
                                    <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                    <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Passes the credentials of the current user the receiving side
of the connection. The receiving end has to call
<link linkend="g-unix-connection-receive-credentials"><function>g_unix_connection_receive_credentials()</function></link> (or similar) to accept the
credentials.</para>
<para>As well as sending the credentials this also writes a single NUL
byte to the stream, as this is required for credentials passing to
work on some implementations.</para>
<para>Other ways to exchange credentials with a foreign peer includes the
<link linkend="GUnixCredentialsMessage"><type>GUnixCredentialsMessage</type></link> type and <link linkend="g-socket-get-credentials"><function>g_socket_get_credentials()</function></link> function.</para>
<refsect3 id="g-unix-connection-send-credentials.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GUnixConnection"><type>GUnixConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-connection-send-credentials.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if <parameter>error</parameter>
is set.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-unix-connection-send-credentials-async" role="function" condition="since:2.32">
<title>g_unix_connection_send_credentials_async&#160;()</title>
<indexterm zone="g-unix-connection-send-credentials-async" role="2.32"><primary sortas="unix_connection_send_credentials_async">g_unix_connection_send_credentials_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_unix_connection_send_credentials_async
                               (<parameter><link linkend="GUnixConnection"><type>GUnixConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously send credentials.</para>
<para>For more details, see <link linkend="g-unix-connection-send-credentials"><function>g_unix_connection_send_credentials()</function></link> which is
the synchronous version of this call.</para>
<para>When the operation is finished, <parameter>callback</parameter>
 will be called. You can then call
<link linkend="g-unix-connection-send-credentials-finish"><function>g_unix_connection_send_credentials_finish()</function></link> to get the result of the operation.</para>
<refsect3 id="g-unix-connection-send-credentials-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GUnixConnection"><type>GUnixConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is satisfied. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>
<refsect2 id="g-unix-connection-send-credentials-finish" role="function" condition="since:2.32">
<title>g_unix_connection_send_credentials_finish&#160;()</title>
<indexterm zone="g-unix-connection-send-credentials-finish" role="2.32"><primary sortas="unix_connection_send_credentials_finish">g_unix_connection_send_credentials_finish</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_unix_connection_send_credentials_finish
                               (<parameter><link linkend="GUnixConnection"><type>GUnixConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an asynchronous send credentials operation started with
<link linkend="g-unix-connection-send-credentials-async"><function>g_unix_connection_send_credentials_async()</function></link>.</para>
<refsect3 id="g-unix-connection-send-credentials-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GUnixConnection"><type>GUnixConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-unix-connection-send-credentials-finish.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation was successful, otherwise <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>

</refsect1>
<refsect1 id="GUnixConnection.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GUnixConnection-struct" role="struct">
<title>struct GUnixConnection</title>
<indexterm zone="GUnixConnection-struct"><primary sortas="UnixConnection">GUnixConnection</primary></indexterm>
<programlisting language="C">struct GUnixConnection;</programlisting>
<para><link linkend="GUnixConnection"><type>GUnixConnection</type></link> is an opaque data structure and can only be accessed
using the following functions.</para>
</refsect2>

</refsect1>
<refsect1 id="GUnixConnection.see-also">
<title>See Also</title>
<para><link linkend="GSocketConnection"><type>GSocketConnection</type></link>.</para>

</refsect1>

</refentry>
