<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GAppInfo">
<refmeta>
<refentrytitle role="top_of_page" id="GAppInfo.top_of_page">GAppInfo</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GAppInfo</refname>
<refpurpose>Application information and launch contexts</refpurpose>
</refnamediv>

<refsect1 id="GAppInfo.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GAppInfo"><returnvalue>GAppInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-create-from-commandline">g_app_info_create_from_commandline</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GAppInfo"><returnvalue>GAppInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-dup">g_app_info_dup</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-equal">g_app_info_equal</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-id">g_app_info_get_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-name">g_app_info_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-display-name">g_app_info_get_display_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-description">g_app_info_get_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-executable">g_app_info_get_executable</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-commandline">g_app_info_get_commandline</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-icon">g_app_info_get_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-launch">g_app_info_launch</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-supports-files">g_app_info_supports_files</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-supports-uris">g_app_info_supports_uris</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-launch-uris">g_app_info_launch_uris</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-should-show">g_app_info_should_show</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-can-delete">g_app_info_can_delete</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-delete">g_app_info_delete</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-reset-type-associations">g_app_info_reset_type_associations</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-set-as-default-for-type">g_app_info_set_as_default_for_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-set-as-default-for-extension">g_app_info_set_as_default_for_extension</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-set-as-last-used-for-type">g_app_info_set_as_last_used_for_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-add-supports-type">g_app_info_add_supports_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-can-remove-supports-type">g_app_info_can_remove_supports_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-remove-supports-type">g_app_info_remove_supports_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="g-app-info-get-supported-types">g_app_info_get_supported_types</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-all">g_app_info_get_all</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-all-for-type">g_app_info_get_all_for_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GAppInfo"><returnvalue>GAppInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-default-for-type">g_app_info_get_default_for_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GAppInfo"><returnvalue>GAppInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-default-for-uri-scheme">g_app_info_get_default_for_uri_scheme</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-fallback-for-type">g_app_info_get_fallback_for_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-info-get-recommended-for-type">g_app_info_get_recommended_for_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-launch-default-for-uri">g_app_info_launch_default_for_uri</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-launch-default-for-uri-async">g_app_info_launch_default_for_uri_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-info-launch-default-for-uri-finish">g_app_info_launch_default_for_uri_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-launch-context-setenv">g_app_launch_context_setenv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-launch-context-unsetenv">g_app_launch_context_unsetenv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="g-app-launch-context-get-environment">g_app_launch_context_get_environment</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-launch-context-get-display">g_app_launch_context_get_display</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-launch-context-get-startup-notify-id">g_app_launch_context_get_startup_notify_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-app-launch-context-launch-failed">g_app_launch_context_launch_failed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GAppLaunchContext"><returnvalue>GAppLaunchContext</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-app-launch-context-new">g_app_launch_context_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GAppInfo.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signals_return" colwidth="150px"/>
<colspec colname="signals_name" colwidth="300px"/>
<colspec colname="signals_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GAppLaunchContext-launch-failed">launch-failed</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GAppLaunchContext-launched">launched</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<anchor id="GAppLaunchContext"/><refsect1 id="GAppInfo.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GAppInfoCreateFlags">GAppInfoCreateFlags</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GAppInfo-struct">GAppInfo</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GAppInfoIface">GAppInfoIface</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GAppLaunchContext-struct">GAppLaunchContext</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GAppInfo.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GFlags">GFlags</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GAppInfoCreateFlags
    <link linkend="GInterface">GInterface</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GAppInfo
    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GAppLaunchContext
</screen>
</refsect1>
<refsect1 id="GAppInfo.prerequisites" role="prerequisites">
<title role="prerequisites.title">Prerequisites</title>
<para>
GAppInfo requires
 <link linkend="GObject">GObject</link>.</para>

</refsect1>
<refsect1 id="GAppInfo.implementations" role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
GAppInfo is implemented by
 <link linkend="GDesktopAppInfo">GDesktopAppInfo</link>.</para>

</refsect1>

<refsect1 id="GAppInfo.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GAppInfo.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GAppInfo"><type>GAppInfo</type></link> and <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> are used for describing and launching
applications installed on the system.</para>
<para>As of GLib 2.20, URIs will always be converted to POSIX paths
(using <link linkend="g-file-get-path"><function>g_file_get_path()</function></link>) when using <link linkend="g-app-info-launch"><function>g_app_info_launch()</function></link> even if
the application requested an URI and not a POSIX path. For example
for an desktop-file based application with Exec key <literal>totem
%U</literal> and a single URI, <literal>sftp://foo/file.avi</literal>, then
<literal>/home/user/.gvfs/sftp on foo/file.avi</literal> will be passed. This will
only work if a set of suitable GIO extensions (such as gvfs 2.26
compiled with FUSE support), is available and operational; if this
is not the case, the URI will be passed unmodified to the application.
Some URIs, such as <literal>mailto:</literal>, of course cannot be mapped to a POSIX
path (in gvfs there's no FUSE mount for it); such URIs will be
passed unmodified to the application.</para>
<para>Specifically for gvfs 2.26 and later, the POSIX URI will be mapped
back to the GIO URI in the <link linkend="GFile"><type>GFile</type></link> constructors (since gvfs
implements the <link linkend="GVfs"><type>GVfs</type></link> extension point). As such, if the application
needs to examine the URI, it needs to use <link linkend="g-file-get-uri"><function>g_file_get_uri()</function></link> or
similar on <link linkend="GFile"><type>GFile</type></link>. In other words, an application cannot assume
that the URI passed to e.g. <link linkend="g-file-new-for-commandline-arg"><function>g_file_new_for_commandline_arg()</function></link> is
equal to the result of <link linkend="g-file-get-uri"><function>g_file_get_uri()</function></link>. The following snippet
illustrates this:</para>
<informalexample><programlisting role="example"><![CDATA[
GFile *f;
char *uri;

file = g_file_new_for_commandline_arg (uri_from_commandline);

uri = g_file_get_uri (file);
strcmp (uri, uri_from_commandline) == 0;
g_free (uri);

if (g_file_has_uri_scheme (file, "cdda"))
  {
    // do something special with uri
  }
g_object_unref (file);
]]></programlisting></informalexample>
<para></para>
<para>This code will work when both <literal>cdda://sr0/Track 1.wav</literal> and
<literal>/home/user/.gvfs/cdda on sr0/Track 1.wav</literal> is passed to the
application. It should be noted that it's generally not safe
for applications to rely on the format of a particular URIs.
Different launcher applications (e.g. file managers) may have
different ideas of what a given URI means.</para>

</refsect1>
<refsect1 id="GAppInfo.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-app-info-create-from-commandline" role="function">
<title>g_app_info_create_from_commandline&#160;()</title>
<indexterm zone="g-app-info-create-from-commandline"><primary sortas="app_info_create_from_commandline">g_app_info_create_from_commandline</primary></indexterm>
<programlisting language="C"><link linkend="GAppInfo"><returnvalue>GAppInfo</returnvalue></link>&#160;*
g_app_info_create_from_commandline (<parameter>const <link linkend="char"><type>char</type></link> *commandline</parameter>,
                                    <parameter>const <link linkend="char"><type>char</type></link> *application_name</parameter>,
                                    <parameter><link linkend="GAppInfoCreateFlags"><type>GAppInfoCreateFlags</type></link> flags</parameter>,
                                    <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Creates a new <link linkend="GAppInfo"><type>GAppInfo</type></link> from the given information.</para>
<para>Note that for <parameter>commandline</parameter>
, the quoting rules of the Exec key of the
<ulink url="http://freedesktop.org/Standards/desktop-entry-spec">freedesktop.org Desktop Entry Specification</ulink>
are applied. For example, if the <parameter>commandline</parameter>
 contains
percent-encoded URIs, the percent-character must be doubled in order to prevent it from
being swallowed by Exec key unquoting. See the specification for exact quoting rules.</para>
<refsect3 id="g-app-info-create-from-commandline.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>commandline</para></entry>
<entry role="parameter_description"><para>the commandline to use. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
<row><entry role="parameter_name"><para>application_name</para></entry>
<entry role="parameter_description"><para>the application name, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to use <parameter>commandline</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags that can specify details of the created <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link> location to store the error occurring, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-create-from-commandline.returns" role="returns">
<title>Returns</title>
<para>new <link linkend="GAppInfo"><type>GAppInfo</type></link> for given command. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-app-info-dup" role="function">
<title>g_app_info_dup&#160;()</title>
<indexterm zone="g-app-info-dup"><primary sortas="app_info_dup">g_app_info_dup</primary></indexterm>
<programlisting language="C"><link linkend="GAppInfo"><returnvalue>GAppInfo</returnvalue></link>&#160;*
g_app_info_dup (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Creates a duplicate of a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para>
<refsect3 id="g-app-info-dup.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-dup.returns" role="returns">
<title>Returns</title>
<para>a duplicate of <parameter>appinfo</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-app-info-equal" role="function">
<title>g_app_info_equal&#160;()</title>
<indexterm zone="g-app-info-equal"><primary sortas="app_info_equal">g_app_info_equal</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_equal (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo1</parameter>,
                  <parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo2</parameter>);</programlisting>
<para>Checks if two <link linkend="GAppInfos"><type>GAppInfos</type></link> are equal.</para>
<para>Note that the check &lt;emphasis>may not&lt;/emphasis> compare each individual
field, and only does an identity check. In case detecting changes in the 
contents is needed, program code must additionally compare relevant fields.</para>
<refsect3 id="g-app-info-equal.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo1</para></entry>
<entry role="parameter_description"><para>the first <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>appinfo2</para></entry>
<entry role="parameter_description"><para>the second <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-equal.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>appinfo1</parameter>
is equal to <parameter>appinfo2</parameter>
. <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-id" role="function">
<title>g_app_info_get_id&#160;()</title>
<indexterm zone="g-app-info-get-id"><primary sortas="app_info_get_id">g_app_info_get_id</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_app_info_get_id (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Gets the ID of an application. An id is a string that
identifies the application. The exact format of the id is
platform dependent. For instance, on Unix this is the
desktop file id from the xdg menu specification.</para>
<para>Note that the returned ID may be <link linkend="NULL:CAPS"><literal>NULL</literal></link>, depending on how
the <parameter>appinfo</parameter>
 has been constructed.</para>
<refsect3 id="g-app-info-get-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-id.returns" role="returns">
<title>Returns</title>
<para> a string containing the application's ID.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-name" role="function">
<title>g_app_info_get_name&#160;()</title>
<indexterm zone="g-app-info-get-name"><primary sortas="app_info_get_name">g_app_info_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_app_info_get_name (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Gets the installed name of the application.</para>
<refsect3 id="g-app-info-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-name.returns" role="returns">
<title>Returns</title>
<para> the name of the application for <parameter>appinfo</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-display-name" role="function" condition="since:2.24">
<title>g_app_info_get_display_name&#160;()</title>
<indexterm zone="g-app-info-get-display-name" role="2.24"><primary sortas="app_info_get_display_name">g_app_info_get_display_name</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_app_info_get_display_name (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Gets the display name of the application. The display name is often more
descriptive to the user than the name itself.</para>
<refsect3 id="g-app-info-get-display-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-display-name.returns" role="returns">
<title>Returns</title>
<para> the display name of the application for <parameter>appinfo</parameter>
, or the name if
no display name is available.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.24">2.24</link></para></refsect2>
<refsect2 id="g-app-info-get-description" role="function">
<title>g_app_info_get_description&#160;()</title>
<indexterm zone="g-app-info-get-description"><primary sortas="app_info_get_description">g_app_info_get_description</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_app_info_get_description (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Gets a human-readable description of an installed application.</para>
<refsect3 id="g-app-info-get-description.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-description.returns" role="returns">
<title>Returns</title>
<para> a string containing a description of the
application <parameter>appinfo</parameter>
, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if none. </para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-executable" role="function">
<title>g_app_info_get_executable&#160;()</title>
<indexterm zone="g-app-info-get-executable"><primary sortas="app_info_get_executable">g_app_info_get_executable</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_app_info_get_executable (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Gets the executable's name for the installed application.</para>
<refsect3 id="g-app-info-get-executable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-executable.returns" role="returns">
<title>Returns</title>
<para>a string containing the <parameter>appinfo</parameter>
's application
binaries name. </para>
<para><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-commandline" role="function" condition="since:2.20">
<title>g_app_info_get_commandline&#160;()</title>
<indexterm zone="g-app-info-get-commandline" role="2.20"><primary sortas="app_info_get_commandline">g_app_info_get_commandline</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_app_info_get_commandline (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Gets the commandline with which the application will be
started.</para>
<refsect3 id="g-app-info-get-commandline.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-commandline.returns" role="returns">
<title>Returns</title>
<para>a string containing the <parameter>appinfo</parameter>
's commandline,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if this information is not available. </para>
<para><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="g-app-info-get-icon" role="function">
<title>g_app_info_get_icon&#160;()</title>
<indexterm zone="g-app-info-get-icon"><primary sortas="app_info_get_icon">g_app_info_get_icon</primary></indexterm>
<programlisting language="C"><link linkend="GIcon"><returnvalue>GIcon</returnvalue></link>&#160;*
g_app_info_get_icon (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Gets the icon for the application.</para>
<refsect3 id="g-app-info-get-icon.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-icon.returns" role="returns">
<title>Returns</title>
<para>the default <link linkend="GIcon"><type>GIcon</type></link> for <parameter>appinfo</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
if there is no default icon. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-app-info-launch" role="function">
<title>g_app_info_launch&#160;()</title>
<indexterm zone="g-app-info-launch"><primary sortas="app_info_launch">g_app_info_launch</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_launch (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>,
                   <parameter><link linkend="GList"><type>GList</type></link> *files</parameter>,
                   <parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                   <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Launches the application. Passes <parameter>files</parameter>
 to the launched application
as arguments, using the optional <parameter>context</parameter>
 to get information
about the details of the launcher (like what screen it is on).
On error, <parameter>error</parameter>
 will be set accordingly.</para>
<para>To launch the application without arguments pass a <link linkend="NULL:CAPS"><literal>NULL</literal></link> <parameter>files</parameter>
 list.</para>
<para>Note that even if the launch is successful the application launched
can fail to start if it runs into problems during startup. There is
no way to detect this.</para>
<para>Some URIs can be changed when passed through a GFile (for instance
unsupported URIs with strange formats like mailto:), so if you have
a textual URI you want to pass in as argument, consider using
<link linkend="g-app-info-launch-uris"><function>g_app_info_launch_uris()</function></link> instead.</para>
<para>The launched application inherits the environment of the launching
process, but it can be modified with <link linkend="g-app-launch-context-setenv"><function>g_app_launch_context_setenv()</function></link>
and <link linkend="g-app-launch-context-unsetenv"><function>g_app_launch_context_unsetenv()</function></link>.</para>
<para>On UNIX, this function sets the <literal>GIO_LAUNCHED_DESKTOP_FILE</literal>
environment variable with the path of the launched desktop file and
<literal>GIO_LAUNCHED_DESKTOP_FILE_PID</literal> to the process id of the launched
process. This can be used to ignore <literal>GIO_LAUNCHED_DESKTOP_FILE</literal>,
should it be inherited by further processes. The <literal>DISPLAY</literal> and
<literal>DESKTOP_STARTUP_ID</literal> environment variables are also set, based
on information provided in <parameter>context</parameter>
.</para>
<refsect3 id="g-app-info-launch.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>files</para></entry>
<entry role="parameter_description"><para>a <link linkend="GList"><type>GList</type></link> of <link linkend="GFile"><type>GFile</type></link> objects. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>element-type</acronym> GFile]</emphasis></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-launch.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on successful launch, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-supports-files" role="function">
<title>g_app_info_supports_files&#160;()</title>
<indexterm zone="g-app-info-supports-files"><primary sortas="app_info_supports_files">g_app_info_supports_files</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_supports_files (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Checks if the application accepts files as arguments.</para>
<refsect3 id="g-app-info-supports-files.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-supports-files.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the <parameter>appinfo</parameter>
supports files.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-supports-uris" role="function">
<title>g_app_info_supports_uris&#160;()</title>
<indexterm zone="g-app-info-supports-uris"><primary sortas="app_info_supports_uris">g_app_info_supports_uris</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_supports_uris (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Checks if the application supports reading files and directories from URIs.</para>
<refsect3 id="g-app-info-supports-uris.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-supports-uris.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the <parameter>appinfo</parameter>
supports URIs.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-launch-uris" role="function">
<title>g_app_info_launch_uris&#160;()</title>
<indexterm zone="g-app-info-launch-uris"><primary sortas="app_info_launch_uris">g_app_info_launch_uris</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_launch_uris (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>,
                        <parameter><link linkend="GList"><type>GList</type></link> *uris</parameter>,
                        <parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                        <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Launches the application. This passes the <parameter>uris</parameter>
 to the launched application
as arguments, using the optional <parameter>context</parameter>
 to get information
about the details of the launcher (like what screen it is on).
On error, <parameter>error</parameter>
 will be set accordingly.</para>
<para>To launch the application without arguments pass a <link linkend="NULL:CAPS"><literal>NULL</literal></link> <parameter>uris</parameter>
 list.</para>
<para>Note that even if the launch is successful the application launched
can fail to start if it runs into problems during startup. There is
no way to detect this.</para>
<refsect3 id="g-app-info-launch-uris.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uris</para></entry>
<entry role="parameter_description"><para>a <link linkend="GList"><type>GList</type></link> containing URIs to launch. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>element-type</acronym> utf8]</emphasis></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-launch-uris.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on successful launch, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-should-show" role="function">
<title>g_app_info_should_show&#160;()</title>
<indexterm zone="g-app-info-should-show"><primary sortas="app_info_should_show">g_app_info_should_show</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_should_show (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Checks if the application info should be shown in menus that 
list available applications.</para>
<refsect3 id="g-app-info-should-show.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-should-show.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the <parameter>appinfo</parameter>
should be shown, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-can-delete" role="function" condition="since:2.20">
<title>g_app_info_can_delete&#160;()</title>
<indexterm zone="g-app-info-can-delete" role="2.20"><primary sortas="app_info_can_delete">g_app_info_can_delete</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_can_delete (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Obtains the information whether the <link linkend="GAppInfo"><type>GAppInfo</type></link> can be deleted.
See <link linkend="g-app-info-delete"><function>g_app_info_delete()</function></link>.</para>
<refsect3 id="g-app-info-can-delete.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-can-delete.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>appinfo</parameter>
can be deleted</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="g-app-info-delete" role="function" condition="since:2.20">
<title>g_app_info_delete&#160;()</title>
<indexterm zone="g-app-info-delete" role="2.20"><primary sortas="app_info_delete">g_app_info_delete</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_delete (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Tries to delete a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para>
<para>On some platforms, there may be a difference between user-defined
<link linkend="GAppInfos"><type>GAppInfos</type></link> which can be deleted, and system-wide ones which cannot.
See <link linkend="g-app-info-can-delete"><function>g_app_info_can_delete()</function></link>.</para>
<para>Virtual: do_delete</para>
<refsect3 id="g-app-info-delete.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-delete.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>appinfo</parameter>
has been deleted</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="g-app-info-reset-type-associations" role="function" condition="since:2.20">
<title>g_app_info_reset_type_associations&#160;()</title>
<indexterm zone="g-app-info-reset-type-associations" role="2.20"><primary sortas="app_info_reset_type_associations">g_app_info_reset_type_associations</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_app_info_reset_type_associations (<parameter>const <link linkend="char"><type>char</type></link> *content_type</parameter>);</programlisting>
<para>Removes all changes to the type associations done by
<link linkend="g-app-info-set-as-default-for-type"><function>g_app_info_set_as_default_for_type()</function></link>,
<link linkend="g-app-info-set-as-default-for-extension"><function>g_app_info_set_as_default_for_extension()</function></link>,
<link linkend="g-app-info-add-supports-type"><function>g_app_info_add_supports_type()</function></link> or
<link linkend="g-app-info-remove-supports-type"><function>g_app_info_remove_supports_type()</function></link>.</para>
<refsect3 id="g-app-info-reset-type-associations.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>a content type</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="g-app-info-set-as-default-for-type" role="function">
<title>g_app_info_set_as_default_for_type&#160;()</title>
<indexterm zone="g-app-info-set-as-default-for-type"><primary sortas="app_info_set_as_default_for_type">g_app_info_set_as_default_for_type</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_set_as_default_for_type (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>,
                                    <parameter>const <link linkend="char"><type>char</type></link> *content_type</parameter>,
                                    <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Sets the application as the default handler for a given type.</para>
<refsect3 id="g-app-info-set-as-default-for-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>the content type.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-set-as-default-for-type.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on error.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-set-as-default-for-extension" role="function">
<title>g_app_info_set_as_default_for_extension&#160;()</title>
<indexterm zone="g-app-info-set-as-default-for-extension"><primary sortas="app_info_set_as_default_for_extension">g_app_info_set_as_default_for_extension</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_set_as_default_for_extension
                               (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>,
                                <parameter>const <link linkend="char"><type>char</type></link> *extension</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Sets the application as the default handler for the given file extension.</para>
<refsect3 id="g-app-info-set-as-default-for-extension.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>extension</para></entry>
<entry role="parameter_description"><para>a string containing the file extension
(without the dot). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-set-as-default-for-extension.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on error.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-set-as-last-used-for-type" role="function">
<title>g_app_info_set_as_last_used_for_type&#160;()</title>
<indexterm zone="g-app-info-set-as-last-used-for-type"><primary sortas="app_info_set_as_last_used_for_type">g_app_info_set_as_last_used_for_type</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_set_as_last_used_for_type (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>,
                                      <parameter>const <link linkend="char"><type>char</type></link> *content_type</parameter>,
                                      <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Sets the application as the last used application for a given type.
This will make the application appear as first in the list returned
by <link linkend="g-app-info-get-recommended-for-type"><function>g_app_info_get_recommended_for_type()</function></link>, regardless of the default
application for that content type.</para>
<refsect3 id="g-app-info-set-as-last-used-for-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>the content type.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-set-as-last-used-for-type.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on error.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-add-supports-type" role="function">
<title>g_app_info_add_supports_type&#160;()</title>
<indexterm zone="g-app-info-add-supports-type"><primary sortas="app_info_add_supports_type">g_app_info_add_supports_type</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_add_supports_type (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>,
                              <parameter>const <link linkend="char"><type>char</type></link> *content_type</parameter>,
                              <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Adds a content type to the application information to indicate the 
application is capable of opening files with the given content type.</para>
<refsect3 id="g-app-info-add-supports-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>a string.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-add-supports-type.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on error.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-can-remove-supports-type" role="function">
<title>g_app_info_can_remove_supports_type&#160;()</title>
<indexterm zone="g-app-info-can-remove-supports-type"><primary sortas="app_info_can_remove_supports_type">g_app_info_can_remove_supports_type</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_can_remove_supports_type (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Checks if a supported content type can be removed from an application.</para>
<refsect3 id="g-app-info-can-remove-supports-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-can-remove-supports-type.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if it is possible to remove supported
content types from a given <parameter>appinfo</parameter>
, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if not.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-remove-supports-type" role="function">
<title>g_app_info_remove_supports_type&#160;()</title>
<indexterm zone="g-app-info-remove-supports-type"><primary sortas="app_info_remove_supports_type">g_app_info_remove_supports_type</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_remove_supports_type (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *content_type</parameter>,
                                 <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Removes a supported type from an application, if possible.</para>
<refsect3 id="g-app-info-remove-supports-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>a string.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-remove-supports-type.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on error.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-supported-types" role="function" condition="since:2.34">
<title>g_app_info_get_supported_types&#160;()</title>
<indexterm zone="g-app-info-get-supported-types" role="2.34"><primary sortas="app_info_get_supported_types">g_app_info_get_supported_types</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
g_app_info_get_supported_types (<parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *appinfo</parameter>);</programlisting>
<para>Retrieves the list of content types that <parameter>app_info</parameter>
 claims to support.
If this information is not provided by the environment, this function
will return <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
This function does not take in consideration associations added with
<link linkend="g-app-info-add-supports-type"><function>g_app_info_add_supports_type()</function></link>, but only those exported directly by
the application.</para>
<refsect3 id="g-app-info-get-supported-types.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>appinfo</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link> that can handle files</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-supported-types.returns" role="returns">
<title>Returns</title>
<para>a list of content types. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>array</acronym> zero-terminated=1][<acronym>element-type</acronym> utf8]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.34">2.34</link></para></refsect2>
<refsect2 id="g-app-info-get-all" role="function">
<title>g_app_info_get_all&#160;()</title>
<indexterm zone="g-app-info-get-all"><primary sortas="app_info_get_all">g_app_info_get_all</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
g_app_info_get_all (<parameter><type>void</type></parameter>);</programlisting>
<para>Gets a list of all of the applications currently registered
on this system.</para>
<para>For desktop files, this includes applications that have
<literal>NoDisplay=true</literal> set or are excluded from display by means
of <literal>OnlyShowIn</literal> or <literal>NotShowIn</literal>. See <link linkend="g-app-info-should-show"><function>g_app_info_should_show()</function></link>.
The returned list does not include applications which have
the <literal>Hidden</literal> key set.</para>
<refsect3 id="g-app-info-get-all.returns" role="returns">
<title>Returns</title>
<para>a newly allocated <link linkend="GList"><type>GList</type></link> of references to <link linkend="GAppInfos"><type>GAppInfos</type></link>. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> GAppInfo][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-all-for-type" role="function">
<title>g_app_info_get_all_for_type&#160;()</title>
<indexterm zone="g-app-info-get-all-for-type"><primary sortas="app_info_get_all_for_type">g_app_info_get_all_for_type</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
g_app_info_get_all_for_type (<parameter>const <link linkend="char"><type>char</type></link> *content_type</parameter>);</programlisting>
<para>Gets a list of all <link linkend="GAppInfos"><type>GAppInfos</type></link> for a given content type,
including the recommended and fallback <link linkend="GAppInfos"><type>GAppInfos</type></link>. See
<link linkend="g-app-info-get-recommended-for-type"><function>g_app_info_get_recommended_for_type()</function></link> and
<link linkend="g-app-info-get-fallback-for-type"><function>g_app_info_get_fallback_for_type()</function></link>.</para>
<refsect3 id="g-app-info-get-all-for-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>the content type to find a <link linkend="GAppInfo"><type>GAppInfo</type></link> for</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-all-for-type.returns" role="returns">
<title>Returns</title>
<para><link linkend="GList"><type>GList</type></link> of <link linkend="GAppInfos"><type>GAppInfos</type></link>
for given <parameter>content_type</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> GAppInfo][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-default-for-type" role="function">
<title>g_app_info_get_default_for_type&#160;()</title>
<indexterm zone="g-app-info-get-default-for-type"><primary sortas="app_info_get_default_for_type">g_app_info_get_default_for_type</primary></indexterm>
<programlisting language="C"><link linkend="GAppInfo"><returnvalue>GAppInfo</returnvalue></link>&#160;*
g_app_info_get_default_for_type (<parameter>const <link linkend="char"><type>char</type></link> *content_type</parameter>,
                                 <parameter><link linkend="gboolean"><type>gboolean</type></link> must_support_uris</parameter>);</programlisting>
<para>Gets the default <link linkend="GAppInfo"><type>GAppInfo</type></link> for a given content type.</para>
<refsect3 id="g-app-info-get-default-for-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>the content type to find a <link linkend="GAppInfo"><type>GAppInfo</type></link> for</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>must_support_uris</para></entry>
<entry role="parameter_description"><para>if <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, the <link linkend="GAppInfo"><type>GAppInfo</type></link> is expected to
support URIs</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-default-for-type.returns" role="returns">
<title>Returns</title>
<para><link linkend="GAppInfo"><type>GAppInfo</type></link> for given <parameter>content_type</parameter>
or
<link linkend="NULL:CAPS"><literal>NULL</literal></link> on error. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-default-for-uri-scheme" role="function">
<title>g_app_info_get_default_for_uri_scheme&#160;()</title>
<indexterm zone="g-app-info-get-default-for-uri-scheme"><primary sortas="app_info_get_default_for_uri_scheme">g_app_info_get_default_for_uri_scheme</primary></indexterm>
<programlisting language="C"><link linkend="GAppInfo"><returnvalue>GAppInfo</returnvalue></link>&#160;*
g_app_info_get_default_for_uri_scheme (<parameter>const <link linkend="char"><type>char</type></link> *uri_scheme</parameter>);</programlisting>
<para>Gets the default application for handling URIs with
the given URI scheme. A URI scheme is the initial part
of the URI, up to but not including the ':', e.g. "http",
"ftp" or "sip".</para>
<refsect3 id="g-app-info-get-default-for-uri-scheme.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>uri_scheme</para></entry>
<entry role="parameter_description"><para>a string containing a URI scheme.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-default-for-uri-scheme.returns" role="returns">
<title>Returns</title>
<para><link linkend="GAppInfo"><type>GAppInfo</type></link> for given <parameter>uri_scheme</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-app-info-get-fallback-for-type" role="function" condition="since:2.28">
<title>g_app_info_get_fallback_for_type&#160;()</title>
<indexterm zone="g-app-info-get-fallback-for-type" role="2.28"><primary sortas="app_info_get_fallback_for_type">g_app_info_get_fallback_for_type</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
g_app_info_get_fallback_for_type (<parameter>const <link linkend="gchar"><type>gchar</type></link> *content_type</parameter>);</programlisting>
<para>Gets a list of fallback <link linkend="GAppInfos"><type>GAppInfos</type></link> for a given content type, i.e.
those applications which claim to support the given content type
by MIME type subclassing and not directly.</para>
<refsect3 id="g-app-info-get-fallback-for-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>the content type to find a <link linkend="GAppInfo"><type>GAppInfo</type></link> for</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-fallback-for-type.returns" role="returns">
<title>Returns</title>
<para><link linkend="GList"><type>GList</type></link> of <link linkend="GAppInfos"><type>GAppInfos</type></link>
for given <parameter>content_type</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> GAppInfo][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-app-info-get-recommended-for-type" role="function" condition="since:2.28">
<title>g_app_info_get_recommended_for_type&#160;()</title>
<indexterm zone="g-app-info-get-recommended-for-type" role="2.28"><primary sortas="app_info_get_recommended_for_type">g_app_info_get_recommended_for_type</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
g_app_info_get_recommended_for_type (<parameter>const <link linkend="gchar"><type>gchar</type></link> *content_type</parameter>);</programlisting>
<para>Gets a list of recommended <link linkend="GAppInfos"><type>GAppInfos</type></link> for a given content type, i.e.
those applications which claim to support the given content type exactly,
and not by MIME type subclassing.
Note that the first application of the list is the last used one, i.e.
the last one for which <link linkend="g-app-info-set-as-last-used-for-type"><function>g_app_info_set_as_last_used_for_type()</function></link> has been
called.</para>
<refsect3 id="g-app-info-get-recommended-for-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>content_type</para></entry>
<entry role="parameter_description"><para>the content type to find a <link linkend="GAppInfo"><type>GAppInfo</type></link> for</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-get-recommended-for-type.returns" role="returns">
<title>Returns</title>
<para><link linkend="GList"><type>GList</type></link> of <link linkend="GAppInfos"><type>GAppInfos</type></link>
for given <parameter>content_type</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> GAppInfo][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-app-info-launch-default-for-uri" role="function">
<title>g_app_info_launch_default_for_uri&#160;()</title>
<indexterm zone="g-app-info-launch-default-for-uri"><primary sortas="app_info_launch_default_for_uri">g_app_info_launch_default_for_uri</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_launch_default_for_uri (<parameter>const <link linkend="char"><type>char</type></link> *uri</parameter>,
                                   <parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                                   <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Utility function that launches the default application
registered to handle the specified uri. Synchronous I/O
is done on the uri to detect the type of the file if
required.</para>
<refsect3 id="g-app-info-launch-default-for-uri.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the uri to show</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>an optional <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for an error, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-launch-default-for-uri.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on error.</para>
</refsect3></refsect2>
<refsect2 id="g-app-info-launch-default-for-uri-async" role="function" condition="since:2.50">
<title>g_app_info_launch_default_for_uri_async&#160;()</title>
<indexterm zone="g-app-info-launch-default-for-uri-async" role="2.50"><primary sortas="app_info_launch_default_for_uri_async">g_app_info_launch_default_for_uri_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_app_info_launch_default_for_uri_async
                               (<parameter>const <link linkend="char"><type>char</type></link> *uri</parameter>,
                                <parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Async version of <link linkend="g-app-info-launch-default-for-uri"><function>g_app_info_launch_default_for_uri()</function></link>.</para>
<para>This version is useful if you are interested in receiving
error information in the case where the application is
sandboxed and the portal may present an application chooser
dialog to the user.</para>
<refsect3 id="g-app-info-launch-default-for-uri-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the uri to show</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>an optional <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GASyncReadyCallback"><type>GASyncReadyCallback</type></link> to call when the request is done. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>data to pass to <parameter>callback</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.50">2.50</link></para></refsect2>
<refsect2 id="g-app-info-launch-default-for-uri-finish" role="function" condition="since:2.50">
<title>g_app_info_launch_default_for_uri_finish&#160;()</title>
<indexterm zone="g-app-info-launch-default-for-uri-finish" role="2.50"><primary sortas="app_info_launch_default_for_uri_finish">g_app_info_launch_default_for_uri_finish</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_app_info_launch_default_for_uri_finish
                               (<parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an asynchronous launch-default-for-uri operation.</para>
<refsect3 id="g-app-info-launch-default-for-uri-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for an error, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-info-launch-default-for-uri-finish.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the launch was successful, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if <parameter>error</parameter>
is set</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.50">2.50</link></para></refsect2>
<refsect2 id="g-app-launch-context-setenv" role="function" condition="since:2.32">
<title>g_app_launch_context_setenv&#160;()</title>
<indexterm zone="g-app-launch-context-setenv" role="2.32"><primary sortas="app_launch_context_setenv">g_app_launch_context_setenv</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_app_launch_context_setenv (<parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                             <parameter>const <link linkend="char"><type>char</type></link> *variable</parameter>,
                             <parameter>const <link linkend="char"><type>char</type></link> *value</parameter>);</programlisting>
<para>Arranges for <parameter>variable</parameter>
 to be set to <parameter>value</parameter>
 in the child's
environment when <parameter>context</parameter>
 is used to launch an application.</para>
<refsect3 id="g-app-launch-context-setenv.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>variable</para></entry>
<entry role="parameter_description"><para>the environment variable to set. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>the value for to set the variable to. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>
<refsect2 id="g-app-launch-context-unsetenv" role="function" condition="since:2.32">
<title>g_app_launch_context_unsetenv&#160;()</title>
<indexterm zone="g-app-launch-context-unsetenv" role="2.32"><primary sortas="app_launch_context_unsetenv">g_app_launch_context_unsetenv</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_app_launch_context_unsetenv (<parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                               <parameter>const <link linkend="char"><type>char</type></link> *variable</parameter>);</programlisting>
<para>Arranges for <parameter>variable</parameter>
 to be unset in the child's environment
when <parameter>context</parameter>
 is used to launch an application.</para>
<refsect3 id="g-app-launch-context-unsetenv.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>variable</para></entry>
<entry role="parameter_description"><para>the environment variable to remove. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>type</acronym> filename]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>
<refsect2 id="g-app-launch-context-get-environment" role="function" condition="since:2.32">
<title>g_app_launch_context_get_environment&#160;()</title>
<indexterm zone="g-app-launch-context-get-environment" role="2.32"><primary sortas="app_launch_context_get_environment">g_app_launch_context_get_environment</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;**
g_app_launch_context_get_environment (<parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>);</programlisting>
<para>Gets the complete environment variable list to be passed to
the child process when <parameter>context</parameter>
 is used to launch an application.
This is a <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated array of strings, where each string has
the form <literal>KEY=VALUE</literal>.</para>
<refsect3 id="g-app-launch-context-get-environment.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-launch-context-get-environment.returns" role="returns">
<title>Returns</title>
<para>the child's environment. </para>
<para><emphasis role="annotation">[<acronym>array</acronym> zero-terminated=1][<acronym>element-type</acronym> filename][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.32">2.32</link></para></refsect2>
<refsect2 id="g-app-launch-context-get-display" role="function">
<title>g_app_launch_context_get_display&#160;()</title>
<indexterm zone="g-app-launch-context-get-display"><primary sortas="app_launch_context_get_display">g_app_launch_context_get_display</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_app_launch_context_get_display (<parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                                  <parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *info</parameter>,
                                  <parameter><link linkend="GList"><type>GList</type></link> *files</parameter>);</programlisting>
<para>Gets the display string for the <parameter>context</parameter>
. This is used to ensure new
applications are started on the same display as the launching
application, by setting the <literal>DISPLAY</literal> environment variable.</para>
<refsect3 id="g-app-launch-context-get-display.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>files</para></entry>
<entry role="parameter_description"><para>a <link linkend="GList"><type>GList</type></link> of <link linkend="GFile"><type>GFile</type></link> objects. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>element-type</acronym> GFile]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-launch-context-get-display.returns" role="returns">
<title>Returns</title>
<para> a display string for the display.</para>
</refsect3></refsect2>
<refsect2 id="g-app-launch-context-get-startup-notify-id" role="function">
<title>g_app_launch_context_get_startup_notify_id&#160;()</title>
<indexterm zone="g-app-launch-context-get-startup-notify-id"><primary sortas="app_launch_context_get_startup_notify_id">g_app_launch_context_get_startup_notify_id</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_app_launch_context_get_startup_notify_id
                               (<parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                                <parameter><link linkend="GAppInfo"><type>GAppInfo</type></link> *info</parameter>,
                                <parameter><link linkend="GList"><type>GList</type></link> *files</parameter>);</programlisting>
<para>Initiates startup notification for the application and returns the
<literal>DESKTOP_STARTUP_ID</literal> for the launched operation, if supported.</para>
<para>Startup notification IDs are defined in the 
[FreeDesktop.Org Startup Notifications standard](http://standards.freedesktop.org/startup-notification-spec/startup-notification-latest.txt").</para>
<refsect3 id="g-app-launch-context-get-startup-notify-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppInfo"><type>GAppInfo</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>files</para></entry>
<entry role="parameter_description"><para>a <link linkend="GList"><type>GList</type></link> of of <link linkend="GFile"><type>GFile</type></link> objects. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>element-type</acronym> GFile]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-app-launch-context-get-startup-notify-id.returns" role="returns">
<title>Returns</title>
<para> a startup notification ID for the application, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if
not supported.</para>
</refsect3></refsect2>
<refsect2 id="g-app-launch-context-launch-failed" role="function">
<title>g_app_launch_context_launch_failed&#160;()</title>
<indexterm zone="g-app-launch-context-launch-failed"><primary sortas="app_launch_context_launch_failed">g_app_launch_context_launch_failed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_app_launch_context_launch_failed (<parameter><link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context</parameter>,
                                    <parameter>const <link linkend="char"><type>char</type></link> *startup_notify_id</parameter>);</programlisting>
<para>Called when an application has failed to launch, so that it can cancel
the application startup notification started in <link linkend="g-app-launch-context-get-startup-notify-id"><function>g_app_launch_context_get_startup_notify_id()</function></link>.</para>
<refsect3 id="g-app-launch-context-launch-failed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>startup_notify_id</para></entry>
<entry role="parameter_description"><para>the startup notification id that was returned by <link linkend="g-app-launch-context-get-startup-notify-id"><function>g_app_launch_context_get_startup_notify_id()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-app-launch-context-new" role="function">
<title>g_app_launch_context_new&#160;()</title>
<indexterm zone="g-app-launch-context-new"><primary sortas="app_launch_context_new">g_app_launch_context_new</primary></indexterm>
<programlisting language="C"><link linkend="GAppLaunchContext"><returnvalue>GAppLaunchContext</returnvalue></link>&#160;*
g_app_launch_context_new (<parameter><type>void</type></parameter>);</programlisting>
<para>Creates a new application launch context. This is not normally used,
instead you instantiate a subclass of this, such as <link linkend="GdkAppLaunchContext"><type>GdkAppLaunchContext</type></link>.</para>
<refsect3 id="g-app-launch-context-new.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link>.</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="GAppInfo.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GAppInfoCreateFlags" role="enum">
<title>enum GAppInfoCreateFlags</title>
<indexterm zone="GAppInfoCreateFlags"><primary sortas="AppInfoCreateFlags">GAppInfoCreateFlags</primary></indexterm>
<para>Flags used when creating a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para>
<refsect3 id="GAppInfoCreateFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-APP-INFO-CREATE-NONE:CAPS">G_APP_INFO_CREATE_NONE</para></entry>
<entry role="enum_member_description"><para>No flags.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-APP-INFO-CREATE-NEEDS-TERMINAL:CAPS">G_APP_INFO_CREATE_NEEDS_TERMINAL</para></entry>
<entry role="enum_member_description"><para>Application opens in a terminal window.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-APP-INFO-CREATE-SUPPORTS-URIS:CAPS">G_APP_INFO_CREATE_SUPPORTS_URIS</para></entry>
<entry role="enum_member_description"><para>Application supports URI arguments.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-APP-INFO-CREATE-SUPPORTS-STARTUP-NOTIFICATION:CAPS">G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION</para></entry>
<entry role="enum_member_description"><para>Application supports startup notification. Since 2.26</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GAppInfo-struct" role="struct">
<title>GAppInfo</title>
<indexterm zone="GAppInfo-struct"><primary sortas="AppInfo">GAppInfo</primary></indexterm>
<programlisting language="C">typedef struct _GAppInfo GAppInfo;</programlisting>
<para>Information about an installed application and methods to launch
it (with file arguments).</para>
</refsect2>
<refsect2 id="GAppInfoIface" role="struct">
<title>struct GAppInfoIface</title>
<indexterm zone="GAppInfoIface"><primary sortas="AppInfoIface">GAppInfoIface</primary></indexterm>
<programlisting language="C">struct GAppInfoIface {
  GTypeInterface g_iface;

  /* Virtual Table */

  GAppInfo *   (* dup)                          (GAppInfo           *appinfo);
  gboolean     (* equal)                        (GAppInfo           *appinfo1,
                                                 GAppInfo           *appinfo2);
  const char * (* get_id)                       (GAppInfo           *appinfo);
  const char * (* get_name)                     (GAppInfo           *appinfo);
  const char * (* get_description)              (GAppInfo           *appinfo);
  const char * (* get_executable)               (GAppInfo           *appinfo);
  GIcon *      (* get_icon)                     (GAppInfo           *appinfo);
  gboolean     (* launch)                       (GAppInfo           *appinfo,
                                                 GList              *files,
                                                 GAppLaunchContext  *context,
                                                 GError            **error);
  gboolean     (* supports_uris)                (GAppInfo           *appinfo);
  gboolean     (* supports_files)               (GAppInfo           *appinfo);
  gboolean     (* launch_uris)                  (GAppInfo           *appinfo,
                                                 GList              *uris,
                                                 GAppLaunchContext  *context,
                                                 GError            **error);
  gboolean     (* should_show)                  (GAppInfo           *appinfo);

  /* For changing associations */
  gboolean     (* set_as_default_for_type)      (GAppInfo           *appinfo,
                                                 const char         *content_type,
                                                 GError            **error);
  gboolean     (* set_as_default_for_extension) (GAppInfo           *appinfo,
                                                 const char         *extension,
                                                 GError            **error);
  gboolean     (* add_supports_type)            (GAppInfo           *appinfo,
                                                 const char         *content_type,
                                                 GError            **error);
  gboolean     (* can_remove_supports_type)     (GAppInfo           *appinfo);
  gboolean     (* remove_supports_type)         (GAppInfo           *appinfo,
                                                 const char         *content_type,
                                                 GError            **error);
  gboolean     (* can_delete)                   (GAppInfo           *appinfo);
  gboolean     (* do_delete)                    (GAppInfo           *appinfo);
  const char * (* get_commandline)              (GAppInfo           *appinfo);
  const char * (* get_display_name)             (GAppInfo           *appinfo);
  gboolean     (* set_as_last_used_for_type)    (GAppInfo           *appinfo,
                                                 const char         *content_type,
                                                 GError            **error);
  const char ** (* get_supported_types)         (GAppInfo           *appinfo);
};
</programlisting>
<para>Application Information interface, for operating system portability.</para>
<refsect3 id="GAppInfoIface.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.dup">dup</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Copies a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.equal">equal</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Checks two <link linkend="GAppInfos"><type>GAppInfos</type></link> for equality.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.get-id">get_id</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Gets a string identifier for a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.get-name">get_name</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Gets the name of the application for a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.get-description">get_description</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Gets a short description for the application described by the <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.get-executable">get_executable</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Gets the executable name for the <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.get-icon">get_icon</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Gets the <link linkend="GIcon"><type>GIcon</type></link> for the <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.launch">launch</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Launches an application specified by the <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.supports-uris">supports_uris</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Indicates whether the application specified supports launching URIs.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.supports-files">supports_files</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Indicates whether the application specified accepts filename arguments.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.launch-uris">launch_uris</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Launches an application with a list of URIs.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.should-show">should_show</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Returns whether an application should be shown (e.g. when getting a list of installed applications).
<ulink url="http://standards.freedesktop.org/startup-notification-spec/startup-notification-latest.txt">FreeDesktop.Org Startup Notification Specification</ulink>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.set-as-default-for-type">set_as_default_for_type</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Sets an application as default for a given content type.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.set-as-default-for-extension">set_as_default_for_extension</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Sets an application as default for a given file extension.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.add-supports-type">add_supports_type</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Adds to the <link linkend="GAppInfo"><type>GAppInfo</type></link> information about supported file types.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.can-remove-supports-type">can_remove_supports_type</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Checks for support for removing supported file types from a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.remove-supports-type">remove_supports_type</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Removes a supported application type from a <link linkend="GAppInfo"><type>GAppInfo</type></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.can-delete">can_delete</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Checks if a <link linkend="GAppInfo"><type>GAppInfo</type></link> can be deleted. Since 2.20</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.do-delete">do_delete</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Deletes a <link linkend="GAppInfo"><type>GAppInfo</type></link>. Since 2.20</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.get-commandline">get_commandline</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Gets the commandline for the <link linkend="GAppInfo"><type>GAppInfo</type></link>. Since 2.20</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.get-display-name">get_display_name</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Gets the display name for the <link linkend="GAppInfo"><type>GAppInfo</type></link>. Since 2.24</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.set-as-last-used-for-type">set_as_last_used_for_type</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Sets the application as the last used. See <link linkend="g-app-info-set-as-last-used-for-type"><function>g_app_info_set_as_last_used_for_type()</function></link>.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GAppInfoIface.get-supported-types">get_supported_types</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Retrieves the list of content types that <parameter>app_info</parameter>
claims to support.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="GAppLaunchContext-struct" role="struct">
<title>GAppLaunchContext</title>
<indexterm zone="GAppLaunchContext-struct"><primary sortas="AppLaunchContext">GAppLaunchContext</primary></indexterm>
<programlisting language="C">typedef struct _GAppLaunchContext GAppLaunchContext;</programlisting>
<para>Integrating the launch with the launching application. This is used to
handle for instance startup notification and launching the new application
on the same screen as the launching window.</para>
</refsect2>

</refsect1>
<refsect1 id="GAppInfo.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GAppLaunchContext-launch-failed" role="signal"><title>The <literal>“launch-failed”</literal> signal</title>
<indexterm zone="GAppLaunchContext-launch-failed" role="2.36"><primary sortas="AppLaunchContext::launch-failed">GAppLaunchContext::launch-failed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context,
               <link linkend="gchar"><type>gchar</type></link>             *startup_notify_id,
               <link linkend="gpointer"><type>gpointer</type></link>           user_data)</programlisting>
<para>The ::launch-failed signal is emitted when a <link linkend="GAppInfo"><type>GAppInfo</type></link> launch
fails. The startup notification id is provided, so that the launcher
can cancel the startup notification.</para>
<refsect3 id="GAppLaunchContext-launch-failed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>the object emitting the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>startup_notify_id</para></entry>
<entry role="parameter_description"><para>the startup notification id for the failed launch</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
<para role="since">Since: <link linkend="api-index-2.36">2.36</link></para></refsect2><refsect2 id="GAppLaunchContext-launched" role="signal"><title>The <literal>“launched”</literal> signal</title>
<indexterm zone="GAppLaunchContext-launched" role="2.36"><primary sortas="AppLaunchContext::launched">GAppLaunchContext::launched</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GAppLaunchContext"><type>GAppLaunchContext</type></link> *context,
               <link linkend="GAppInfo"><type>GAppInfo</type></link>          *info,
               <link linkend="GVariant"><type>GVariant</type></link>          *platform_data,
               <link linkend="gpointer"><type>gpointer</type></link>           user_data)</programlisting>
<para>The ::launched signal is emitted when a <link linkend="GAppInfo"><type>GAppInfo</type></link> is successfully
launched. The <parameter>platform_data</parameter>
 is an GVariant dictionary mapping
strings to variants (ie a{sv}), which contains additional,
platform-specific data about this launch. On UNIX, at least the
"pid" and "startup-notification-id" keys will be present.</para>
<refsect3 id="GAppLaunchContext-launched.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>context</para></entry>
<entry role="parameter_description"><para>the object emitting the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>the <link linkend="GAppInfo"><type>GAppInfo</type></link> that was just launched</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>platform_data</para></entry>
<entry role="parameter_description"><para>additional platform-specific data for this launch</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
<para role="since">Since: <link linkend="api-index-2.36">2.36</link></para></refsect2>
</refsect1>
<refsect1 id="GAppInfo.see-also">
<title>See Also</title>
<para><link linkend="GAppInfoMonitor"><type>GAppInfoMonitor</type></link></para>

</refsect1>

</refentry>
