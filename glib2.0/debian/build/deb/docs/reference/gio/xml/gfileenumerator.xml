<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GFileEnumerator">
<refmeta>
<refentrytitle role="top_of_page" id="GFileEnumerator.top_of_page">GFileEnumerator</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GFileEnumerator</refname>
<refpurpose>Enumerated Files Routines</refpurpose>
</refnamediv>

<refsect1 id="GFileEnumerator.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-enumerator-iterate">g_file_enumerator_iterate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-enumerator-next-file">g_file_enumerator_next_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-enumerator-close">g_file_enumerator_close</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-enumerator-next-files-async">g_file_enumerator_next_files_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-enumerator-next-files-finish">g_file_enumerator_next_files_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-enumerator-close-async">g_file_enumerator_close_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-enumerator-close-finish">g_file_enumerator_close_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-enumerator-is-closed">g_file_enumerator_is_closed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-enumerator-has-pending">g_file_enumerator_has_pending</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-enumerator-set-pending">g_file_enumerator_set_pending</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFile"><returnvalue>GFile</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-enumerator-get-container">g_file_enumerator_get_container</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFile"><returnvalue>GFile</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-enumerator-get-child">g_file_enumerator_get_child</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GFileEnumerator.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="GFile"><type>GFile</type></link>&#160;*</entry><entry role="property_name"><link linkend="GFileEnumerator--container">container</link></entry><entry role="property_flags">Write / Construct Only</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GFileEnumerator.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GFileEnumerator-struct">GFileEnumerator</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GFileEnumerator.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GFileEnumerator
</screen>
</refsect1>

<refsect1 id="GFileEnumerator.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GFileEnumerator.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> allows you to operate on a set of <link linkend="GFiles"><type>GFiles</type></link>, 
returning a <link linkend="GFileInfo"><type>GFileInfo</type></link> structure for each file enumerated (e.g. 
<link linkend="g-file-enumerate-children"><function>g_file_enumerate_children()</function></link> will return a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> for each 
of the children within a directory).</para>
<para>To get the next file's information from a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>, use 
<link linkend="g-file-enumerator-next-file"><function>g_file_enumerator_next_file()</function></link> or its asynchronous version, 
<link linkend="g-file-enumerator-next-files-async"><function>g_file_enumerator_next_files_async()</function></link>. Note that the asynchronous 
version will return a list of <link linkend="GFileInfos"><type>GFileInfos</type></link>, whereas the 
synchronous will only return the next file in the enumerator.</para>
<para>The ordering of returned files is unspecified for non-Unix
platforms; for more information, see <link linkend="g-dir-read-name"><function>g_dir_read_name()</function></link>.  On Unix,
when operating on local files, returned files will be sorted by
inode number.  Effectively you can assume that the ordering of
returned files will be stable between successive calls (and
applications) assuming the directory is unchanged.</para>
<para>If your application needs a specific ordering, such as by name or
modification time, you will have to implement that in your
application code.</para>
<para>To close a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>, use <link linkend="g-file-enumerator-close"><function>g_file_enumerator_close()</function></link>, or 
its asynchronous version, <link linkend="g-file-enumerator-close-async"><function>g_file_enumerator_close_async()</function></link>. Once 
a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> is closed, no further actions may be performed 
on it, and it should be freed with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>

</refsect1>
<refsect1 id="GFileEnumerator.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-file-enumerator-iterate" role="function" condition="since:2.44">
<title>g_file_enumerator_iterate&#160;()</title>
<indexterm zone="g-file-enumerator-iterate" role="2.44"><primary sortas="file_enumerator_iterate">g_file_enumerator_iterate</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_enumerator_iterate (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *direnum</parameter>,
                           <parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> **out_info</parameter>,
                           <parameter><link linkend="GFile"><type>GFile</type></link> **out_child</parameter>,
                           <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                           <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>This is a version of <link linkend="g-file-enumerator-next-file"><function>g_file_enumerator_next_file()</function></link> that's easier to
use correctly from C programs.  With <link linkend="g-file-enumerator-next-file"><function>g_file_enumerator_next_file()</function></link>,
the gboolean return value signifies "end of iteration or error", which
requires allocation of a temporary <link linkend="GError"><type>GError</type></link>.</para>
<para>In contrast, with this function, a <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> return from
<link linkend="g-file-enumerator-iterate"><function>g_file_enumerator_iterate()</function></link> *always* means
"error".  End of iteration is signaled by <parameter>out_info</parameter>
 or <parameter>out_child</parameter>
 being <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>Another crucial difference is that the references for <parameter>out_info</parameter>
 and
<parameter>out_child</parameter>
 are owned by <parameter>direnum</parameter>
 (they are cached as hidden
properties).  You must not unref them in your own code.  This makes
memory management significantly easier for C code in combination
with loops.</para>
<para>Finally, this function optionally allows retrieving a <link linkend="GFile"><type>GFile</type></link> as
well.</para>
<para>You must specify at least one of <parameter>out_info</parameter>
 or <parameter>out_child</parameter>
.</para>
<para>The code pattern for correctly using <link linkend="g-file-enumerator-iterate"><function>g_file_enumerator_iterate()</function></link> from C
is:</para>
<informalexample><programlisting role="example"><![CDATA[
direnum = g_file_enumerate_children (file, ...);
while (TRUE)
  {
    GFileInfo *info;
    if (!g_file_enumerator_iterate (direnum, &info, NULL, cancellable, error))
      goto out;
    if (!info)
      break;
    ... do stuff with "info"; do not unref it! ...
  }

out:
  g_object_unref (direnum); // Note: frees the last @info
]]></programlisting></informalexample>
<para></para>
<refsect3 id="g-file-enumerator-iterate.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>direnum</para></entry>
<entry role="parameter_description"><para>an open <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out_info</para></entry>
<entry role="parameter_description"><para>Output location for the next <link linkend="GFileInfo"><type>GFileInfo</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>out_child</para></entry>
<entry role="parameter_description"><para>Output location for the next <link linkend="GFile"><type>GFile</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>transfer none</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.44">2.44</link></para></refsect2>
<refsect2 id="g-file-enumerator-next-file" role="function">
<title>g_file_enumerator_next_file&#160;()</title>
<indexterm zone="g-file-enumerator-next-file"><primary sortas="file_enumerator_next_file">g_file_enumerator_next_file</primary></indexterm>
<programlisting language="C"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
g_file_enumerator_next_file (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>,
                             <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                             <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Returns information for the next file in the enumerated object.
Will block until the information is available. The <link linkend="GFileInfo"><type>GFileInfo</type></link> 
returned from this function will contain attributes that match the 
attribute string that was passed when the <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> was created.</para>
<para>See the documentation of <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> for information about the
order of returned files.</para>
<para>On error, returns <link linkend="NULL:CAPS"><literal>NULL</literal></link> and sets <parameter>error</parameter>
 to the error. If the
enumerator is at the end, <link linkend="NULL:CAPS"><literal>NULL</literal></link> will be returned and <parameter>error</parameter>
 will
be unset.</para>
<refsect3 id="g-file-enumerator-next-file.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>location to store the error occurring, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-enumerator-next-file.returns" role="returns">
<title>Returns</title>
<para>A <link linkend="GFileInfo"><type>GFileInfo</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error
or end of enumerator.  Free the returned object with
<link linkend="g-object-unref"><function>g_object_unref()</function></link> when no longer needed. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-close" role="function">
<title>g_file_enumerator_close&#160;()</title>
<indexterm zone="g-file-enumerator-close"><primary sortas="file_enumerator_close">g_file_enumerator_close</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_enumerator_close (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>,
                         <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                         <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Releases all resources used by this enumerator, making the
enumerator return <link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link> on all calls.</para>
<para>This will be automatically called when the last reference
is dropped, but you might want to call this function to make 
sure resources are released as early as possible.</para>
<refsect3 id="g-file-enumerator-close.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>location to store the error occurring, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-enumerator-close.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><type>TRUE</type></link> on success or <link linkend="FALSE:CAPS"><type>FALSE</type></link> on error.</para>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-next-files-async" role="function">
<title>g_file_enumerator_next_files_async&#160;()</title>
<indexterm zone="g-file-enumerator-next-files-async"><primary sortas="file_enumerator_next_files_async">g_file_enumerator_next_files_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_enumerator_next_files_async (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>,
                                    <parameter><link linkend="int"><type>int</type></link> num_files</parameter>,
                                    <parameter><link linkend="int"><type>int</type></link> io_priority</parameter>,
                                    <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                    <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                    <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Request information for a number of files from the enumerator asynchronously.
When all i/o for the operation is finished the <parameter>callback</parameter>
 will be called with
the requested information. </para>
<para>See the documentation of <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> for information about the
order of returned files.</para>
<para>The callback can be called with less than <parameter>num_files</parameter>
 files in case of error
or at the end of the enumerator. In case of a partial error the callback will
be called with any succeeding items and no error, and on the next request the
error will be reported. If a request is cancelled the callback will be called
with <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link>.</para>
<para>During an async request no other sync and async calls are allowed, and will
result in <link linkend="G-IO-ERROR-PENDING:CAPS"><literal>G_IO_ERROR_PENDING</literal></link> errors. </para>
<para>Any outstanding i/o request with higher priority (lower numerical value) will
be executed before an outstanding request with lower priority. Default
priority is <link linkend="G-PRIORITY-DEFAULT:CAPS"><literal>G_PRIORITY_DEFAULT</literal></link>.</para>
<refsect3 id="g-file-enumerator-next-files-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>num_files</para></entry>
<entry role="parameter_description"><para>the number of file info objects to request</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>io_priority</para></entry>
<entry role="parameter_description"><para>the <link linkend="io-priority">I/O priority</link> of the request</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is satisfied. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-next-files-finish" role="function">
<title>g_file_enumerator_next_files_finish&#160;()</title>
<indexterm zone="g-file-enumerator-next-files-finish"><primary sortas="file_enumerator_next_files_finish">g_file_enumerator_next_files_finish</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
g_file_enumerator_next_files_finish (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>,
                                     <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                     <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes the asynchronous operation started with <link linkend="g-file-enumerator-next-files-async"><function>g_file_enumerator_next_files_async()</function></link>.</para>
<refsect3 id="g-file-enumerator-next-files-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link> location to store the error occurring, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to
ignore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-enumerator-next-files-finish.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GList"><type>GList</type></link> of <link linkend="GFileInfos"><type>GFileInfos</type></link>. You must free the list with
<link linkend="g-list-free"><function>g_list_free()</function></link> and unref the infos with <link linkend="g-object-unref"><function>g_object_unref()</function></link> when you're
done with them. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>element-type</acronym> Gio.FileInfo]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-close-async" role="function">
<title>g_file_enumerator_close_async&#160;()</title>
<indexterm zone="g-file-enumerator-close-async"><primary sortas="file_enumerator_close_async">g_file_enumerator_close_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_enumerator_close_async (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>,
                               <parameter><link linkend="int"><type>int</type></link> io_priority</parameter>,
                               <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                               <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                               <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously closes the file enumerator. </para>
<para>If <parameter>cancellable</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be returned in 
<link linkend="g-file-enumerator-close-finish"><function>g_file_enumerator_close_finish()</function></link>.</para>
<refsect3 id="g-file-enumerator-close-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>io_priority</para></entry>
<entry role="parameter_description"><para>the <link linkend="io-priority">I/O priority</link> of the request</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is satisfied. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-close-finish" role="function">
<title>g_file_enumerator_close_finish&#160;()</title>
<indexterm zone="g-file-enumerator-close-finish"><primary sortas="file_enumerator_close_finish">g_file_enumerator_close_finish</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_enumerator_close_finish (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>,
                                <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes closing a file enumerator, started from <link linkend="g-file-enumerator-close-async"><function>g_file_enumerator_close_async()</function></link>.</para>
<para>If the file enumerator was already closed when <link linkend="g-file-enumerator-close-async"><function>g_file_enumerator_close_async()</function></link> 
was called, then this function will report <link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link> in <parameter>error</parameter>
, and 
return <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>. If the file enumerator had pending operation when the close 
operation was started, then this function will report <link linkend="G-IO-ERROR-PENDING:CAPS"><literal>G_IO_ERROR_PENDING</literal></link>, and
return <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>.  If <parameter>cancellable</parameter>
 was not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation may have been 
cancelled by triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be set, and <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> will be 
returned.</para>
<refsect3 id="g-file-enumerator-close-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link> location to store the error occurring, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to
ignore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-enumerator-close-finish.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the close operation has finished successfully.</para>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-is-closed" role="function">
<title>g_file_enumerator_is_closed&#160;()</title>
<indexterm zone="g-file-enumerator-is-closed"><primary sortas="file_enumerator_is_closed">g_file_enumerator_is_closed</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_enumerator_is_closed (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>);</programlisting>
<para>Checks if the file enumerator has been closed.</para>
<refsect3 id="g-file-enumerator-is-closed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-enumerator-is-closed.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the <parameter>enumerator</parameter>
is closed.</para>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-has-pending" role="function">
<title>g_file_enumerator_has_pending&#160;()</title>
<indexterm zone="g-file-enumerator-has-pending"><primary sortas="file_enumerator_has_pending">g_file_enumerator_has_pending</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_file_enumerator_has_pending (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>);</programlisting>
<para>Checks if the file enumerator has pending operations.</para>
<refsect3 id="g-file-enumerator-has-pending.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-enumerator-has-pending.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the <parameter>enumerator</parameter>
has pending operations.</para>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-set-pending" role="function">
<title>g_file_enumerator_set_pending&#160;()</title>
<indexterm zone="g-file-enumerator-set-pending"><primary sortas="file_enumerator_set_pending">g_file_enumerator_set_pending</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_enumerator_set_pending (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>,
                               <parameter><link linkend="gboolean"><type>gboolean</type></link> pending</parameter>);</programlisting>
<para>Sets the file enumerator as having pending operations.</para>
<refsect3 id="g-file-enumerator-set-pending.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pending</para></entry>
<entry role="parameter_description"><para>a boolean value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-file-enumerator-get-container" role="function" condition="since:2.18">
<title>g_file_enumerator_get_container&#160;()</title>
<indexterm zone="g-file-enumerator-get-container" role="2.18"><primary sortas="file_enumerator_get_container">g_file_enumerator_get_container</primary></indexterm>
<programlisting language="C"><link linkend="GFile"><returnvalue>GFile</returnvalue></link>&#160;*
g_file_enumerator_get_container (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>);</programlisting>
<para>Get the <link linkend="GFile"><type>GFile</type></link> container which is being enumerated.</para>
<refsect3 id="g-file-enumerator-get-container.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-enumerator-get-container.returns" role="returns">
<title>Returns</title>
<para>the <link linkend="GFile"><type>GFile</type></link> which is being enumerated. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.18">2.18</link></para></refsect2>
<refsect2 id="g-file-enumerator-get-child" role="function" condition="since:2.36">
<title>g_file_enumerator_get_child&#160;()</title>
<indexterm zone="g-file-enumerator-get-child" role="2.36"><primary sortas="file_enumerator_get_child">g_file_enumerator_get_child</primary></indexterm>
<programlisting language="C"><link linkend="GFile"><returnvalue>GFile</returnvalue></link>&#160;*
g_file_enumerator_get_child (<parameter><link linkend="GFileEnumerator"><type>GFileEnumerator</type></link> *enumerator</parameter>,
                             <parameter><link linkend="GFileInfo"><type>GFileInfo</type></link> *info</parameter>);</programlisting>
<para>Return a new <link linkend="GFile"><type>GFile</type></link> which refers to the file named by <parameter>info</parameter>
 in the source
directory of <parameter>enumerator</parameter>
.  This function is primarily intended to be used
inside loops with <link linkend="g-file-enumerator-next-file"><function>g_file_enumerator_next_file()</function></link>.</para>
<para>This is a convenience method that's equivalent to:</para>
<informalexample><programlisting role="example"><![CDATA[
  gchar *name = g_file_info_get_name (info);
  GFile *child = g_file_get_child (g_file_enumerator_get_container (enumr),
                                   name);
]]></programlisting></informalexample>
<para></para>
<refsect3 id="g-file-enumerator-get-child.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>enumerator</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileEnumerator"><type>GFileEnumerator</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>info</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileInfo"><type>GFileInfo</type></link> gotten from <link linkend="g-file-enumerator-next-file"><function>g_file_enumerator_next_file()</function></link>
or the async equivalents.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-enumerator-get-child.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GFile"><type>GFile</type></link> for the <link linkend="GFileInfo"><type>GFileInfo</type></link> passed it. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.36">2.36</link></para></refsect2>

</refsect1>
<refsect1 id="GFileEnumerator.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GFileEnumerator-struct" role="struct">
<title>GFileEnumerator</title>
<indexterm zone="GFileEnumerator-struct"><primary sortas="FileEnumerator">GFileEnumerator</primary></indexterm>
<programlisting language="C">typedef struct _GFileEnumerator GFileEnumerator;</programlisting>
<para>A per matched file iterator.</para>
</refsect2>

</refsect1>
<refsect1 id="GFileEnumerator.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GFileEnumerator--container" role="property"><title>The <literal>“container”</literal> property</title>
<indexterm zone="GFileEnumerator--container"><primary sortas="FileEnumerator:container">GFileEnumerator:container</primary></indexterm>
<programlisting>  “container”                <link linkend="GFile"><type>GFile</type></link>&#160;*</programlisting>
<para>The container that is being enumerated.</para><para>Flags: Write / Construct Only</para>
</refsect2>

</refsect1>

</refentry>
