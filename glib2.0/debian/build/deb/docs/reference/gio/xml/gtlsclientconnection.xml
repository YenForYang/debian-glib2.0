<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GTlsClientConnection">
<refmeta>
<refentrytitle role="top_of_page" id="GTlsClientConnection.top_of_page">GTlsClientConnection</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GTlsClientConnection</refname>
<refpurpose>TLS client-side connection</refpurpose>
</refnamediv>

<refsect1 id="GTlsClientConnection.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GIOStream"><returnvalue>GIOStream</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-tls-client-connection-new">g_tls_client_connection_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-tls-client-connection-set-server-identity">g_tls_client_connection_set_server_identity</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GSocketConnectable"><returnvalue>GSocketConnectable</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-tls-client-connection-get-server-identity">g_tls_client_connection_get_server_identity</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-tls-client-connection-set-validation-flags">g_tls_client_connection_set_validation_flags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GTlsCertificateFlags"><returnvalue>GTlsCertificateFlags</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-tls-client-connection-get-validation-flags">g_tls_client_connection_get_validation_flags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-tls-client-connection-set-use-ssl3">g_tls_client_connection_set_use_ssl3</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-tls-client-connection-get-use-ssl3">g_tls_client_connection_get_use_ssl3</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-tls-client-connection-get-accepted-cas">g_tls_client_connection_get_accepted_cas</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-tls-client-connection-copy-session-state">g_tls_client_connection_copy_session_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GTlsClientConnection.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="gpointer"><type>gpointer</type></link></entry><entry role="property_name"><link linkend="GTlsClientConnection--accepted-cas">accepted-cas</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="GSocketConnectable"><type>GSocketConnectable</type></link>&#160;*</entry><entry role="property_name"><link linkend="GTlsClientConnection--server-identity">server-identity</link></entry><entry role="property_flags">Read / Write / Construct</entry></row>
<row><entry role="property_type"><link linkend="gboolean"><type>gboolean</type></link></entry><entry role="property_name"><link linkend="GTlsClientConnection--use-ssl3">use-ssl3</link></entry><entry role="property_flags">Read / Write / Construct</entry></row>
<row><entry role="property_type"><link linkend="GTlsCertificateFlags"><type>GTlsCertificateFlags</type></link></entry><entry role="property_name"><link linkend="GTlsClientConnection--validation-flags">validation-flags</link></entry><entry role="property_flags">Read / Write / Construct</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GTlsClientConnection.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GTlsClientConnection-struct">GTlsClientConnection</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GTlsClientConnectionInterface">GTlsClientConnectionInterface</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GTlsClientConnection.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GInterface">GInterface</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GTlsClientConnection
</screen>
</refsect1>
<refsect1 id="GTlsClientConnection.prerequisites" role="prerequisites">
<title role="prerequisites.title">Prerequisites</title>
<para>
GTlsClientConnection requires
 <link linkend="GTlsConnection">GTlsConnection</link>.</para>

</refsect1>

<refsect1 id="GTlsClientConnection.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GTlsClientConnection.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> is the client-side subclass of
<link linkend="GTlsConnection"><type>GTlsConnection</type></link>, representing a client-side TLS connection.</para>

</refsect1>
<refsect1 id="GTlsClientConnection.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-tls-client-connection-new" role="function" condition="since:2.28">
<title>g_tls_client_connection_new&#160;()</title>
<indexterm zone="g-tls-client-connection-new" role="2.28"><primary sortas="tls_client_connection_new">g_tls_client_connection_new</primary></indexterm>
<programlisting language="C"><link linkend="GIOStream"><returnvalue>GIOStream</returnvalue></link>&#160;*
g_tls_client_connection_new (<parameter><link linkend="GIOStream"><type>GIOStream</type></link> *base_io_stream</parameter>,
                             <parameter><link linkend="GSocketConnectable"><type>GSocketConnectable</type></link> *server_identity</parameter>,
                             <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Creates a new <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> wrapping <parameter>base_io_stream</parameter>
 (which
must have pollable input and output streams) which is assumed to
communicate with the server identified by <parameter>server_identity</parameter>
.</para>
<para>See the documentation for <link linkend="GTlsConnection--base-io-stream"><type>“base-io-stream”</type></link> for restrictions
on when application code can run operations on the <parameter>base_io_stream</parameter>
 after
this function has returned.</para>
<refsect3 id="g-tls-client-connection-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>base_io_stream</para></entry>
<entry role="parameter_description"><para>the <link linkend="GIOStream"><type>GIOStream</type></link> to wrap</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>server_identity</para></entry>
<entry role="parameter_description"><para>the expected identity of the server. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-tls-client-connection-new.returns" role="returns">
<title>Returns</title>
<para>the new
<link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>type</acronym> GTlsClientConnection]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-tls-client-connection-set-server-identity" role="function" condition="since:2.28">
<title>g_tls_client_connection_set_server_identity&#160;()</title>
<indexterm zone="g-tls-client-connection-set-server-identity" role="2.28"><primary sortas="tls_client_connection_set_server_identity">g_tls_client_connection_set_server_identity</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_tls_client_connection_set_server_identity
                               (<parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *conn</parameter>,
                                <parameter><link linkend="GSocketConnectable"><type>GSocketConnectable</type></link> *identity</parameter>);</programlisting>
<para>Sets <parameter>conn</parameter>
's expected server identity, which is used both to tell
servers on virtual hosts which certificate to present, and also
to let <parameter>conn</parameter>
 know what name to look for in the certificate when
performing <link linkend="G-TLS-CERTIFICATE-BAD-IDENTITY:CAPS"><literal>G_TLS_CERTIFICATE_BAD_IDENTITY</literal></link> validation, if enabled.</para>
<refsect3 id="g-tls-client-connection-set-server-identity.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>the <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>identity</para></entry>
<entry role="parameter_description"><para>a <link linkend="GSocketConnectable"><type>GSocketConnectable</type></link> describing the expected server identity</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-tls-client-connection-get-server-identity" role="function" condition="since:2.28">
<title>g_tls_client_connection_get_server_identity&#160;()</title>
<indexterm zone="g-tls-client-connection-get-server-identity" role="2.28"><primary sortas="tls_client_connection_get_server_identity">g_tls_client_connection_get_server_identity</primary></indexterm>
<programlisting language="C"><link linkend="GSocketConnectable"><returnvalue>GSocketConnectable</returnvalue></link>&#160;*
g_tls_client_connection_get_server_identity
                               (<parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *conn</parameter>);</programlisting>
<para>Gets <parameter>conn</parameter>
's expected server identity</para>
<refsect3 id="g-tls-client-connection-get-server-identity.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>the <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-tls-client-connection-get-server-identity.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GSocketConnectable"><type>GSocketConnectable</type></link> describing the
expected server identity, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the expected identity is not
known. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-tls-client-connection-set-validation-flags" role="function" condition="since:2.28">
<title>g_tls_client_connection_set_validation_flags&#160;()</title>
<indexterm zone="g-tls-client-connection-set-validation-flags" role="2.28"><primary sortas="tls_client_connection_set_validation_flags">g_tls_client_connection_set_validation_flags</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_tls_client_connection_set_validation_flags
                               (<parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *conn</parameter>,
                                <parameter><link linkend="GTlsCertificateFlags"><type>GTlsCertificateFlags</type></link> flags</parameter>);</programlisting>
<para>Sets <parameter>conn</parameter>
's validation flags, to override the default set of
checks performed when validating a server certificate. By default,
<link linkend="G-TLS-CERTIFICATE-VALIDATE-ALL:CAPS"><literal>G_TLS_CERTIFICATE_VALIDATE_ALL</literal></link> is used.</para>
<refsect3 id="g-tls-client-connection-set-validation-flags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>the <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>the <link linkend="GTlsCertificateFlags"><type>GTlsCertificateFlags</type></link> to use</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-tls-client-connection-get-validation-flags" role="function" condition="since:2.28">
<title>g_tls_client_connection_get_validation_flags&#160;()</title>
<indexterm zone="g-tls-client-connection-get-validation-flags" role="2.28"><primary sortas="tls_client_connection_get_validation_flags">g_tls_client_connection_get_validation_flags</primary></indexterm>
<programlisting language="C"><link linkend="GTlsCertificateFlags"><returnvalue>GTlsCertificateFlags</returnvalue></link>
g_tls_client_connection_get_validation_flags
                               (<parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *conn</parameter>);</programlisting>
<para>Gets <parameter>conn</parameter>
's validation flags</para>
<refsect3 id="g-tls-client-connection-get-validation-flags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>the <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-tls-client-connection-get-validation-flags.returns" role="returns">
<title>Returns</title>
<para> the validation flags</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-tls-client-connection-set-use-ssl3" role="function" condition="deprecated|since:2.28">
<title>g_tls_client_connection_set_use_ssl3&#160;()</title>
<indexterm zone="g-tls-client-connection-set-use-ssl3" role="deprecated"><primary sortas="tls_client_connection_set_use_ssl3">g_tls_client_connection_set_use_ssl3</primary></indexterm><indexterm zone="g-tls-client-connection-set-use-ssl3" role="2.28"><primary sortas="tls_client_connection_set_use_ssl3">g_tls_client_connection_set_use_ssl3</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_tls_client_connection_set_use_ssl3 (<parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *conn</parameter>,
                                      <parameter><link linkend="gboolean"><type>gboolean</type></link> use_ssl3</parameter>);</programlisting>
<warning><para><literal>g_tls_client_connection_set_use_ssl3</literal> has been deprecated since version 2.56 and should not be used in newly-written code.</para> <para>SSL 3.0 is insecure, and this function does not
generally enable or disable it, despite its name.</para>
</warning>
<para>Since 2.42.1, if <parameter>use_ssl3</parameter>
 is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, this forces <parameter>conn</parameter>
 to use the
lowest-supported TLS protocol version rather than trying to properly
negotiate the highest mutually-supported protocol version with the
peer. Be aware that SSL 3.0 is generally disabled by the
<link linkend="GTlsBackend"><type>GTlsBackend</type></link>, so the lowest-supported protocol version is probably
not SSL 3.0.</para>
<para>Since 2.58, this may additionally cause an RFC 7507 fallback SCSV to
be sent to the server, causing modern TLS servers to immediately
terminate the connection. You should generally only use this function
if you need to connect to broken servers that exhibit TLS protocol
version intolerance, and when an initial attempt to connect to a
server normally has already failed.</para>
<refsect3 id="g-tls-client-connection-set-use-ssl3.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>the <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>use_ssl3</para></entry>
<entry role="parameter_description"><para>whether to use the lowest-supported protocol version</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-tls-client-connection-get-use-ssl3" role="function" condition="deprecated|since:2.28">
<title>g_tls_client_connection_get_use_ssl3&#160;()</title>
<indexterm zone="g-tls-client-connection-get-use-ssl3" role="deprecated"><primary sortas="tls_client_connection_get_use_ssl3">g_tls_client_connection_get_use_ssl3</primary></indexterm><indexterm zone="g-tls-client-connection-get-use-ssl3" role="2.28"><primary sortas="tls_client_connection_get_use_ssl3">g_tls_client_connection_get_use_ssl3</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_tls_client_connection_get_use_ssl3 (<parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *conn</parameter>);</programlisting>
<warning><para><literal>g_tls_client_connection_get_use_ssl3</literal> has been deprecated since version 2.56 and should not be used in newly-written code.</para> <para>SSL 3.0 is insecure, and this function does not
actually indicate whether it is enabled.</para>
</warning>
<para>Gets whether <parameter>conn</parameter>
 will force the lowest-supported TLS protocol
version rather than attempt to negotiate the highest mutually-
supported version of TLS; see <link linkend="g-tls-client-connection-set-use-ssl3"><function>g_tls_client_connection_set_use_ssl3()</function></link>.</para>
<refsect3 id="g-tls-client-connection-get-use-ssl3.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>the <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-tls-client-connection-get-use-ssl3.returns" role="returns">
<title>Returns</title>
<para> whether <parameter>conn</parameter>
will use the lowest-supported TLS protocol version</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-tls-client-connection-get-accepted-cas" role="function" condition="since:2.28">
<title>g_tls_client_connection_get_accepted_cas&#160;()</title>
<indexterm zone="g-tls-client-connection-get-accepted-cas" role="2.28"><primary sortas="tls_client_connection_get_accepted_cas">g_tls_client_connection_get_accepted_cas</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
g_tls_client_connection_get_accepted_cas
                               (<parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *conn</parameter>);</programlisting>
<para>Gets the list of distinguished names of the Certificate Authorities
that the server will accept certificates from. This will be set
during the TLS handshake if the server requests a certificate.
Otherwise, it will be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>Each item in the list is a <link linkend="GByteArray"><type>GByteArray</type></link> which contains the complete
subject DN of the certificate authority.</para>
<refsect3 id="g-tls-client-connection-get-accepted-cas.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>the <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-tls-client-connection-get-accepted-cas.returns" role="returns">
<title>Returns</title>
<para>the list of
CA DNs. You should unref each element with <link linkend="g-byte-array-unref"><function>g_byte_array_unref()</function></link> and then
the free the list with <link linkend="g-list-free"><function>g_list_free()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> GByteArray][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-tls-client-connection-copy-session-state" role="function" condition="since:2.46">
<title>g_tls_client_connection_copy_session_state&#160;()</title>
<indexterm zone="g-tls-client-connection-copy-session-state" role="2.46"><primary sortas="tls_client_connection_copy_session_state">g_tls_client_connection_copy_session_state</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_tls_client_connection_copy_session_state
                               (<parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *conn</parameter>,
                                <parameter><link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> *source</parameter>);</programlisting>
<para>Copies session state from one connection to another. This is
not normally needed, but may be used when the same session
needs to be used between different endpoints as is required
by some protocols such as FTP over TLS. <parameter>source</parameter>
 should have
already completed a handshake, and <parameter>conn</parameter>
 should not have
completed a handshake.</para>
<refsect3 id="g-tls-client-connection-copy-session-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>a <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>source</para></entry>
<entry role="parameter_description"><para>a <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.46">2.46</link></para></refsect2>

</refsect1>
<refsect1 id="GTlsClientConnection.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GTlsClientConnection-struct" role="struct">
<title>GTlsClientConnection</title>
<indexterm zone="GTlsClientConnection-struct" role="2.28"><primary sortas="TlsClientConnection">GTlsClientConnection</primary></indexterm>
<programlisting language="C">typedef struct _GTlsClientConnection GTlsClientConnection;</programlisting>
<para>Abstract base class for the backend-specific client connection
type.</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GTlsClientConnectionInterface" role="struct" condition="since:2.26">
<title>struct GTlsClientConnectionInterface</title>
<indexterm zone="GTlsClientConnectionInterface" role="2.26"><primary sortas="TlsClientConnectionInterface">GTlsClientConnectionInterface</primary></indexterm>
<programlisting language="C">struct GTlsClientConnectionInterface {
  GTypeInterface g_iface;

  void     ( *copy_session_state )     (GTlsClientConnection       *conn,
                                        GTlsClientConnection       *source);
};
</programlisting>
<para>vtable for a <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> implementation.</para>
<refsect3 id="GTlsClientConnectionInterface.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><structfield id="GTlsClientConnectionInterface.copy-session-state">copy_session_state</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>Copies session state from one <link linkend="GTlsClientConnection"><type>GTlsClientConnection</type></link> to another.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>

</refsect1>
<refsect1 id="GTlsClientConnection.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GTlsClientConnection--accepted-cas" role="property"><title>The <literal>“accepted-cas”</literal> property</title>
<indexterm zone="GTlsClientConnection--accepted-cas" role="2.28"><primary sortas="TlsClientConnection:accepted-cas">GTlsClientConnection:accepted-cas</primary></indexterm>
<programlisting>  “accepted-cas”             <link linkend="gpointer"><type>gpointer</type></link></programlisting>
<para>A list of the distinguished names of the Certificate Authorities
that the server will accept client certificates signed by. If the
server requests a client certificate during the handshake, then
this property will be set after the handshake completes.</para>
<para>Each item in the list is a <link linkend="GByteArray"><type>GByteArray</type></link> which contains the complete
subject DN of the certificate authority.</para>

<para><emphasis role="annotation">[<acronym>element-type</acronym> GLib.ByteArray]</emphasis></para><para>Flags: Read</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GTlsClientConnection--server-identity" role="property"><title>The <literal>“server-identity”</literal> property</title>
<indexterm zone="GTlsClientConnection--server-identity" role="2.28"><primary sortas="TlsClientConnection:server-identity">GTlsClientConnection:server-identity</primary></indexterm>
<programlisting>  “server-identity”          <link linkend="GSocketConnectable"><type>GSocketConnectable</type></link>&#160;*</programlisting>
<para>A <link linkend="GSocketConnectable"><type>GSocketConnectable</type></link> describing the identity of the server that
is expected on the other end of the connection.</para>
<para>If the <link linkend="G-TLS-CERTIFICATE-BAD-IDENTITY:CAPS"><literal>G_TLS_CERTIFICATE_BAD_IDENTITY</literal></link> flag is set in
<link linkend="GTlsClientConnection--validation-flags"><type>“validation-flags”</type></link>, this object will be used
to determine the expected identify of the remote end of the
connection; if <link linkend="GTlsClientConnection--server-identity"><type>“server-identity”</type></link> is not set,
or does not match the identity presented by the server, then the
<link linkend="G-TLS-CERTIFICATE-BAD-IDENTITY:CAPS"><literal>G_TLS_CERTIFICATE_BAD_IDENTITY</literal></link> validation will fail.</para>
<para>In addition to its use in verifying the server certificate,
this is also used to give a hint to the server about what
certificate we expect, which is useful for servers that serve
virtual hosts.</para>
<para>Flags: Read / Write / Construct</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GTlsClientConnection--use-ssl3" role="property"><title>The <literal>“use-ssl3”</literal> property</title>
<indexterm zone="GTlsClientConnection--use-ssl3" role="deprecated"><primary sortas="TlsClientConnection:use-ssl3">GTlsClientConnection:use-ssl3</primary></indexterm><indexterm zone="GTlsClientConnection--use-ssl3" role="2.28"><primary sortas="TlsClientConnection:use-ssl3">GTlsClientConnection:use-ssl3</primary></indexterm>
<programlisting>  “use-ssl3”                 <link linkend="gboolean"><type>gboolean</type></link></programlisting>
<para>If <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, forces the connection to use a fallback version of TLS
or SSL, rather than trying to negotiate the best version of TLS
to use. See <link linkend="g-tls-client-connection-set-use-ssl3"><function>g_tls_client_connection_set_use_ssl3()</function></link>.</para>
<warning><para><literal>GTlsClientConnection:use-ssl3</literal> has been deprecated since version 2.56 and should not be used in newly-written code.</para> <para>SSL 3.0 is insecure, and this property does not
generally enable or disable it, despite its name.</para>
</warning>
<para>Flags: Read / Write / Construct</para>
<para>Default value: FALSE</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GTlsClientConnection--validation-flags" role="property"><title>The <literal>“validation-flags”</literal> property</title>
<indexterm zone="GTlsClientConnection--validation-flags" role="2.28"><primary sortas="TlsClientConnection:validation-flags">GTlsClientConnection:validation-flags</primary></indexterm>
<programlisting>  “validation-flags”         <link linkend="GTlsCertificateFlags"><type>GTlsCertificateFlags</type></link></programlisting>
<para>What steps to perform when validating a certificate received from
a server. Server certificates that fail to validate in all of the
ways indicated here will be rejected unless the application
overrides the default via <link linkend="GTlsConnection-accept-certificate"><type>“accept-certificate”</type></link>.</para>
<para>Flags: Read / Write / Construct</para>
<para>Default value: G_TLS_CERTIFICATE_UNKNOWN_CA | G_TLS_CERTIFICATE_BAD_IDENTITY | G_TLS_CERTIFICATE_NOT_ACTIVATED | G_TLS_CERTIFICATE_EXPIRED | G_TLS_CERTIFICATE_REVOKED | G_TLS_CERTIFICATE_INSECURE | G_TLS_CERTIFICATE_GENERIC_ERROR</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>

</refsect1>

</refentry>
