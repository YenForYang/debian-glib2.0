<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GCredentials">
<refmeta>
<refentrytitle role="top_of_page" id="GCredentials.top_of_page">GCredentials</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GCredentials</refname>
<refpurpose>An object containing credentials</refpurpose>
</refnamediv>

<refsect1 id="GCredentials.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GCredentials"><returnvalue>GCredentials</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-credentials-new">g_credentials_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-credentials-to-string">g_credentials_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-credentials-get-native">g_credentials_get_native</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-credentials-set-native">g_credentials_set_native</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-credentials-is-same-user">g_credentials_is_same_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uid-t"><returnvalue>uid_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-credentials-get-unix-user">g_credentials_get_unix_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-credentials-set-unix-user">g_credentials_set_unix_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="pid-t"><returnvalue>pid_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-credentials-get-unix-pid">g_credentials_get_unix_pid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GCredentials.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GCredentials-struct">GCredentials</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GCredentialsType">GCredentialsType</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GCredentials.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GEnum">GEnum</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GCredentialsType
    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GCredentials
</screen>
</refsect1>

<refsect1 id="GCredentials.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GCredentials.description" role="desc">
<title role="desc.title">Description</title>
<para>The <link linkend="GCredentials"><type>GCredentials</type></link> type is a reference-counted wrapper for native
credentials. This information is typically used for identifying,
authenticating and authorizing other processes.</para>
<para>Some operating systems supports looking up the credentials of the
remote peer of a communication endpoint - see e.g.
<link linkend="g-socket-get-credentials"><function>g_socket_get_credentials()</function></link>.</para>
<para>Some operating systems supports securely sending and receiving
credentials over a Unix Domain Socket, see
<link linkend="GUnixCredentialsMessage"><type>GUnixCredentialsMessage</type></link>, <link linkend="g-unix-connection-send-credentials"><function>g_unix_connection_send_credentials()</function></link> and
<link linkend="g-unix-connection-receive-credentials"><function>g_unix_connection_receive_credentials()</function></link> for details.</para>
<para>On Linux, the native credential type is a struct ucred - see the
unix(7) man page for details. This corresponds to
<link linkend="G-CREDENTIALS-TYPE-LINUX-UCRED:CAPS"><literal>G_CREDENTIALS_TYPE_LINUX_UCRED</literal></link>.</para>
<para>On FreeBSD, Debian GNU/kFreeBSD, and GNU/Hurd, the native
credential type is a struct cmsgcred. This corresponds
to <link linkend="G-CREDENTIALS-TYPE-FREEBSD-CMSGCRED:CAPS"><literal>G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED</literal></link>.</para>
<para>On NetBSD, the native credential type is a struct unpcbid.
This corresponds to <link linkend="G-CREDENTIALS-TYPE-NETBSD-UNPCBID:CAPS"><literal>G_CREDENTIALS_TYPE_NETBSD_UNPCBID</literal></link>.</para>
<para>On OpenBSD, the native credential type is a struct sockpeercred.
This corresponds to <link linkend="G-CREDENTIALS-TYPE-OPENBSD-SOCKPEERCRED:CAPS"><literal>G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED</literal></link>.</para>
<para>On Solaris (including OpenSolaris and its derivatives), the native
credential type is a ucred_t. This corresponds to
<link linkend="G-CREDENTIALS-TYPE-SOLARIS-UCRED:CAPS"><literal>G_CREDENTIALS_TYPE_SOLARIS_UCRED</literal></link>.</para>

</refsect1>
<refsect1 id="GCredentials.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-credentials-new" role="function" condition="since:2.26">
<title>g_credentials_new&#160;()</title>
<indexterm zone="g-credentials-new" role="2.26"><primary sortas="credentials_new">g_credentials_new</primary></indexterm>
<programlisting language="C"><link linkend="GCredentials"><returnvalue>GCredentials</returnvalue></link>&#160;*
g_credentials_new (<parameter><type>void</type></parameter>);</programlisting>
<para>Creates a new <link linkend="GCredentials"><type>GCredentials</type></link> object with credentials matching the
the current process.</para>
<refsect3 id="g-credentials-new.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="GCredentials"><type>GCredentials</type></link>. Free with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-credentials-to-string" role="function" condition="since:2.26">
<title>g_credentials_to_string&#160;()</title>
<indexterm zone="g-credentials-to-string" role="2.26"><primary sortas="credentials_to_string">g_credentials_to_string</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
g_credentials_to_string (<parameter><link linkend="GCredentials"><type>GCredentials</type></link> *credentials</parameter>);</programlisting>
<para>Creates a human-readable textual representation of <parameter>credentials</parameter>

that can be used in logging and debug messages. The format of the
returned string may change in future GLib release.</para>
<refsect3 id="g-credentials-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>credentials</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCredentials"><type>GCredentials</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-credentials-to-string.returns" role="returns">
<title>Returns</title>
<para> A string that should be freed with <link linkend="g-free"><function>g_free()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-credentials-get-native" role="function" condition="since:2.26">
<title>g_credentials_get_native&#160;()</title>
<indexterm zone="g-credentials-get-native" role="2.26"><primary sortas="credentials_get_native">g_credentials_get_native</primary></indexterm>
<programlisting language="C"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
g_credentials_get_native (<parameter><link linkend="GCredentials"><type>GCredentials</type></link> *credentials</parameter>,
                          <parameter><link linkend="GCredentialsType"><type>GCredentialsType</type></link> native_type</parameter>);</programlisting>
<para>Gets a pointer to native credentials of type <parameter>native_type</parameter>
 from
<parameter>credentials</parameter>
.</para>
<para>It is a programming error (which will cause an warning to be
logged) to use this method if there is no <link linkend="GCredentials"><type>GCredentials</type></link> support for
the OS or if <parameter>native_type</parameter>
 isn't supported by the OS.</para>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="g-credentials-get-native.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>credentials</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCredentials"><type>GCredentials</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>native_type</para></entry>
<entry role="parameter_description"><para>The type of native credentials to get.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-credentials-get-native.returns" role="returns">
<title>Returns</title>
<para> The pointer to native credentials or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
operation there is no <link linkend="GCredentials"><type>GCredentials</type></link> support for the OS or if
<parameter>native_type</parameter>
isn't supported by the OS. Do not free the returned
data, it is owned by <parameter>credentials</parameter>
.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-credentials-set-native" role="function" condition="since:2.26">
<title>g_credentials_set_native&#160;()</title>
<indexterm zone="g-credentials-set-native" role="2.26"><primary sortas="credentials_set_native">g_credentials_set_native</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_credentials_set_native (<parameter><link linkend="GCredentials"><type>GCredentials</type></link> *credentials</parameter>,
                          <parameter><link linkend="GCredentialsType"><type>GCredentialsType</type></link> native_type</parameter>,
                          <parameter><link linkend="gpointer"><type>gpointer</type></link> native</parameter>);</programlisting>
<para>Copies the native credentials of type <parameter>native_type</parameter>
 from <parameter>native</parameter>

into <parameter>credentials</parameter>
.</para>
<para>It is a programming error (which will cause an warning to be
logged) to use this method if there is no <link linkend="GCredentials"><type>GCredentials</type></link> support for
the OS or if <parameter>native_type</parameter>
 isn't supported by the OS.</para>
<refsect3 id="g-credentials-set-native.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>credentials</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCredentials"><type>GCredentials</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>native_type</para></entry>
<entry role="parameter_description"><para>The type of native credentials to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>native</para></entry>
<entry role="parameter_description"><para>A pointer to native credentials. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>not nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-credentials-is-same-user" role="function" condition="since:2.26">
<title>g_credentials_is_same_user&#160;()</title>
<indexterm zone="g-credentials-is-same-user" role="2.26"><primary sortas="credentials_is_same_user">g_credentials_is_same_user</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_credentials_is_same_user (<parameter><link linkend="GCredentials"><type>GCredentials</type></link> *credentials</parameter>,
                            <parameter><link linkend="GCredentials"><type>GCredentials</type></link> *other_credentials</parameter>,
                            <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Checks if <parameter>credentials</parameter>
 and <parameter>other_credentials</parameter>
 is the same user.</para>
<para>This operation can fail if <link linkend="GCredentials"><type>GCredentials</type></link> is not supported on the
the OS.</para>
<refsect3 id="g-credentials-is-same-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>credentials</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCredentials"><type>GCredentials</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>other_credentials</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCredentials"><type>GCredentials</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-credentials-is-same-user.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>credentials</parameter>
and <parameter>other_credentials</parameter>
has the same
user, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise or if <parameter>error</parameter>
is set.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-credentials-get-unix-user" role="function" condition="since:2.26">
<title>g_credentials_get_unix_user&#160;()</title>
<indexterm zone="g-credentials-get-unix-user" role="2.26"><primary sortas="credentials_get_unix_user">g_credentials_get_unix_user</primary></indexterm>
<programlisting language="C"><link linkend="uid-t"><returnvalue>uid_t</returnvalue></link>
g_credentials_get_unix_user (<parameter><link linkend="GCredentials"><type>GCredentials</type></link> *credentials</parameter>,
                             <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Tries to get the UNIX user identifier from <parameter>credentials</parameter>
. This
method is only available on UNIX platforms.</para>
<para>This operation can fail if <link linkend="GCredentials"><type>GCredentials</type></link> is not supported on the
OS or if the native credentials type does not contain information
about the UNIX user.</para>
<refsect3 id="g-credentials-get-unix-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>credentials</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCredentials"><type>GCredentials</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-credentials-get-unix-user.returns" role="returns">
<title>Returns</title>
<para> The UNIX user identifier or -1 if <parameter>error</parameter>
is set.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-credentials-set-unix-user" role="function" condition="since:2.26">
<title>g_credentials_set_unix_user&#160;()</title>
<indexterm zone="g-credentials-set-unix-user" role="2.26"><primary sortas="credentials_set_unix_user">g_credentials_set_unix_user</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_credentials_set_unix_user (<parameter><link linkend="GCredentials"><type>GCredentials</type></link> *credentials</parameter>,
                             <parameter><link linkend="uid-t"><type>uid_t</type></link> uid</parameter>,
                             <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Tries to set the UNIX user identifier on <parameter>credentials</parameter>
. This method
is only available on UNIX platforms.</para>
<para>This operation can fail if <link linkend="GCredentials"><type>GCredentials</type></link> is not supported on the
OS or if the native credentials type does not contain information
about the UNIX user. It can also fail if the OS does not allow the
use of "spoofed" credentials.</para>
<refsect3 id="g-credentials-set-unix-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>credentials</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCredentials"><type>GCredentials</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uid</para></entry>
<entry role="parameter_description"><para>The UNIX user identifier to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-credentials-set-unix-user.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>uid</parameter>
was set, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if error is set.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-credentials-get-unix-pid" role="function" condition="since:2.36">
<title>g_credentials_get_unix_pid&#160;()</title>
<indexterm zone="g-credentials-get-unix-pid" role="2.36"><primary sortas="credentials_get_unix_pid">g_credentials_get_unix_pid</primary></indexterm>
<programlisting language="C"><link linkend="pid-t"><returnvalue>pid_t</returnvalue></link>
g_credentials_get_unix_pid (<parameter><link linkend="GCredentials"><type>GCredentials</type></link> *credentials</parameter>,
                            <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Tries to get the UNIX process identifier from <parameter>credentials</parameter>
. This
method is only available on UNIX platforms.</para>
<para>This operation can fail if <link linkend="GCredentials"><type>GCredentials</type></link> is not supported on the
OS or if the native credentials type does not contain information
about the UNIX process ID.</para>
<refsect3 id="g-credentials-get-unix-pid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>credentials</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCredentials"><type>GCredentials</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-credentials-get-unix-pid.returns" role="returns">
<title>Returns</title>
<para> The UNIX process ID, or -1 if <parameter>error</parameter>
is set.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.36">2.36</link></para></refsect2>

</refsect1>
<refsect1 id="GCredentials.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GCredentials-struct" role="struct">
<title>GCredentials</title>
<indexterm zone="GCredentials-struct" role="2.26"><primary sortas="Credentials">GCredentials</primary></indexterm>
<programlisting language="C">typedef struct _GCredentials GCredentials;</programlisting>
<para>The <link linkend="GCredentials"><type>GCredentials</type></link> structure contains only private data and
should only be accessed using the provided API.</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GCredentialsType" role="enum" condition="since:2.26">
<title>enum GCredentialsType</title>
<indexterm zone="GCredentialsType" role="2.26"><primary sortas="CredentialsType">GCredentialsType</primary></indexterm>
<para>Enumeration describing different kinds of native credential types.</para>
<refsect3 id="GCredentialsType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-CREDENTIALS-TYPE-INVALID:CAPS">G_CREDENTIALS_TYPE_INVALID</para></entry>
<entry role="enum_member_description"><para>Indicates an invalid native credential type.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-CREDENTIALS-TYPE-LINUX-UCRED:CAPS">G_CREDENTIALS_TYPE_LINUX_UCRED</para></entry>
<entry role="enum_member_description"><para>The native credentials type is a struct ucred.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-CREDENTIALS-TYPE-FREEBSD-CMSGCRED:CAPS">G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED</para></entry>
<entry role="enum_member_description"><para>The native credentials type is a struct cmsgcred.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-CREDENTIALS-TYPE-OPENBSD-SOCKPEERCRED:CAPS">G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED</para></entry>
<entry role="enum_member_description"><para>The native credentials type is a struct sockpeercred. Added in 2.30.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-CREDENTIALS-TYPE-SOLARIS-UCRED:CAPS">G_CREDENTIALS_TYPE_SOLARIS_UCRED</para></entry>
<entry role="enum_member_description"><para>The native credentials type is a ucred_t. Added in 2.40.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-CREDENTIALS-TYPE-NETBSD-UNPCBID:CAPS">G_CREDENTIALS_TYPE_NETBSD_UNPCBID</para></entry>
<entry role="enum_member_description"><para>The native credentials type is a struct unpcbid.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>

</refsect1>

</refentry>
