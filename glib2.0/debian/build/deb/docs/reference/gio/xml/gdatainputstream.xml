<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GDataInputStream">
<refmeta>
<refentrytitle role="top_of_page" id="GDataInputStream.top_of_page">GDataInputStream</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GDataInputStream</refname>
<refpurpose>Data Input Stream</refpurpose>
</refnamediv>

<refsect1 id="GDataInputStream.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GDataInputStream"><returnvalue>GDataInputStream</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-new">g_data_input_stream_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-set-byte-order">g_data_input_stream_set_byte_order</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDataStreamByteOrder"><returnvalue>GDataStreamByteOrder</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-get-byte-order">g_data_input_stream_get_byte_order</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-set-newline-type">g_data_input_stream_set_newline_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDataStreamNewlineType"><returnvalue>GDataStreamNewlineType</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-get-newline-type">g_data_input_stream_get_newline_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guchar"><returnvalue>guchar</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-byte">g_data_input_stream_read_byte</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-int16">g_data_input_stream_read_int16</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-uint16">g_data_input_stream_read_uint16</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-int32">g_data_input_stream_read_int32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-uint32">g_data_input_stream_read_uint32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-int64">g_data_input_stream_read_int64</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-uint64">g_data_input_stream_read_uint64</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-line">g_data_input_stream_read_line</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-line-utf8">g_data_input_stream_read_line_utf8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-line-async">g_data_input_stream_read_line_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-line-finish">g_data_input_stream_read_line_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-line-finish-utf8">g_data_input_stream_read_line_finish_utf8</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-upto">g_data_input_stream_read_upto</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-upto-async">g_data_input_stream_read_upto_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-upto-finish">g_data_input_stream_read_upto_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-until">g_data_input_stream_read_until</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-until-async">g_data_input_stream_read_until_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-data-input-stream-read-until-finish">g_data_input_stream_read_until_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDataInputStream.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="GDataStreamByteOrder"><type>GDataStreamByteOrder</type></link></entry><entry role="property_name"><link linkend="GDataInputStream--byte-order">byte-order</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="GDataStreamNewlineType"><type>GDataStreamNewlineType</type></link></entry><entry role="property_name"><link linkend="GDataInputStream--newline-type">newline-type</link></entry><entry role="property_flags">Read / Write</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDataInputStream.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GDataInputStream-struct">GDataInputStream</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDataStreamByteOrder">GDataStreamByteOrder</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDataStreamNewlineType">GDataStreamNewlineType</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDataInputStream.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GEnum">GEnum</link>
    <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> GDataStreamByteOrder
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GDataStreamNewlineType
    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GInputStream">GInputStream</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GFilterInputStream">GFilterInputStream</link>
            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GBufferedInputStream">GBufferedInputStream</link>
                <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GDataInputStream
</screen>
</refsect1>
<refsect1 id="GDataInputStream.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GDataInputStream implements
 <link linkend="GSeekable">GSeekable</link>.</para>

</refsect1>

<refsect1 id="GDataInputStream.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GDataInputStream.description" role="desc">
<title role="desc.title">Description</title>
<para>Data input stream implements <link linkend="GInputStream"><type>GInputStream</type></link> and includes functions for 
reading structured data directly from a binary input stream.</para>

</refsect1>
<refsect1 id="GDataInputStream.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-data-input-stream-new" role="function">
<title>g_data_input_stream_new&#160;()</title>
<indexterm zone="g-data-input-stream-new"><primary sortas="data_input_stream_new">g_data_input_stream_new</primary></indexterm>
<programlisting language="C"><link linkend="GDataInputStream"><returnvalue>GDataInputStream</returnvalue></link>&#160;*
g_data_input_stream_new (<parameter><link linkend="GInputStream"><type>GInputStream</type></link> *base_stream</parameter>);</programlisting>
<para>Creates a new data input stream for the <parameter>base_stream</parameter>
.</para>
<refsect3 id="g-data-input-stream-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>base_stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GInputStream"><type>GInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-new.returns" role="returns">
<title>Returns</title>
<para> a new <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-set-byte-order" role="function">
<title>g_data_input_stream_set_byte_order&#160;()</title>
<indexterm zone="g-data-input-stream-set-byte-order"><primary sortas="data_input_stream_set_byte_order">g_data_input_stream_set_byte_order</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_data_input_stream_set_byte_order (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                    <parameter><link linkend="GDataStreamByteOrder"><type>GDataStreamByteOrder</type></link> order</parameter>);</programlisting>
<para>This function sets the byte order for the given <parameter>stream</parameter>
. All subsequent
reads from the <parameter>stream</parameter>
 will be read in the given <parameter>order</parameter>
.</para>
<refsect3 id="g-data-input-stream-set-byte-order.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>order</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDataStreamByteOrder"><type>GDataStreamByteOrder</type></link> to set.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-get-byte-order" role="function">
<title>g_data_input_stream_get_byte_order&#160;()</title>
<indexterm zone="g-data-input-stream-get-byte-order"><primary sortas="data_input_stream_get_byte_order">g_data_input_stream_get_byte_order</primary></indexterm>
<programlisting language="C"><link linkend="GDataStreamByteOrder"><returnvalue>GDataStreamByteOrder</returnvalue></link>
g_data_input_stream_get_byte_order (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>);</programlisting>
<para>Gets the byte order for the data input stream.</para>
<refsect3 id="g-data-input-stream-get-byte-order.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-get-byte-order.returns" role="returns">
<title>Returns</title>
<para> the <parameter>stream</parameter>
's current <link linkend="GDataStreamByteOrder"><type>GDataStreamByteOrder</type></link>. </para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-set-newline-type" role="function">
<title>g_data_input_stream_set_newline_type&#160;()</title>
<indexterm zone="g-data-input-stream-set-newline-type"><primary sortas="data_input_stream_set_newline_type">g_data_input_stream_set_newline_type</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_data_input_stream_set_newline_type (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                      <parameter><link linkend="GDataStreamNewlineType"><type>GDataStreamNewlineType</type></link> type</parameter>);</programlisting>
<para>Sets the newline type for the <parameter>stream</parameter>
.</para>
<para>Note that using G_DATA_STREAM_NEWLINE_TYPE_ANY is slightly unsafe. If a read
chunk ends in "CR" we must read an additional byte to know if this is "CR" or
"CR LF", and this might block if there is no more data available.</para>
<refsect3 id="g-data-input-stream-set-newline-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the type of new line return as <link linkend="GDataStreamNewlineType"><type>GDataStreamNewlineType</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-get-newline-type" role="function">
<title>g_data_input_stream_get_newline_type&#160;()</title>
<indexterm zone="g-data-input-stream-get-newline-type"><primary sortas="data_input_stream_get_newline_type">g_data_input_stream_get_newline_type</primary></indexterm>
<programlisting language="C"><link linkend="GDataStreamNewlineType"><returnvalue>GDataStreamNewlineType</returnvalue></link>
g_data_input_stream_get_newline_type (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>);</programlisting>
<para>Gets the current newline type for the <parameter>stream</parameter>
.</para>
<refsect3 id="g-data-input-stream-get-newline-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-get-newline-type.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GDataStreamNewlineType"><type>GDataStreamNewlineType</type></link> for the given <parameter>stream</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-byte" role="function">
<title>g_data_input_stream_read_byte&#160;()</title>
<indexterm zone="g-data-input-stream-read-byte"><primary sortas="data_input_stream_read_byte">g_data_input_stream_read_byte</primary></indexterm>
<programlisting language="C"><link linkend="guchar"><returnvalue>guchar</returnvalue></link>
g_data_input_stream_read_byte (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                               <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                               <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads an unsigned 8-bit/1-byte value from <parameter>stream</parameter>
.</para>
<refsect3 id="g-data-input-stream-read-byte.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-byte.returns" role="returns">
<title>Returns</title>
<para> an unsigned 8-bit/1-byte value read from the <parameter>stream</parameter>
or <link linkend="0"><literal>0</literal></link>
if an error occurred.</para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-int16" role="function">
<title>g_data_input_stream_read_int16&#160;()</title>
<indexterm zone="g-data-input-stream-read-int16"><primary sortas="data_input_stream_read_int16">g_data_input_stream_read_int16</primary></indexterm>
<programlisting language="C"><link linkend="gint16"><returnvalue>gint16</returnvalue></link>
g_data_input_stream_read_int16 (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads a 16-bit/2-byte value from <parameter>stream</parameter>
.</para>
<para>In order to get the correct byte order for this read operation, 
see <link linkend="g-data-input-stream-get-byte-order"><function>g_data_input_stream_get_byte_order()</function></link> and <link linkend="g-data-input-stream-set-byte-order"><function>g_data_input_stream_set_byte_order()</function></link>.</para>
<refsect3 id="g-data-input-stream-read-int16.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-int16.returns" role="returns">
<title>Returns</title>
<para> a signed 16-bit/2-byte value read from <parameter>stream</parameter>
or <link linkend="0"><literal>0</literal></link> if
an error occurred.</para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-uint16" role="function">
<title>g_data_input_stream_read_uint16&#160;()</title>
<indexterm zone="g-data-input-stream-read-uint16"><primary sortas="data_input_stream_read_uint16">g_data_input_stream_read_uint16</primary></indexterm>
<programlisting language="C"><link linkend="guint16"><returnvalue>guint16</returnvalue></link>
g_data_input_stream_read_uint16 (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                 <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                 <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads an unsigned 16-bit/2-byte value from <parameter>stream</parameter>
.</para>
<para>In order to get the correct byte order for this read operation, 
see <link linkend="g-data-input-stream-get-byte-order"><function>g_data_input_stream_get_byte_order()</function></link> and <link linkend="g-data-input-stream-set-byte-order"><function>g_data_input_stream_set_byte_order()</function></link>.</para>
<refsect3 id="g-data-input-stream-read-uint16.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-uint16.returns" role="returns">
<title>Returns</title>
<para> an unsigned 16-bit/2-byte value read from the <parameter>stream</parameter>
or <link linkend="0"><literal>0</literal></link> if
an error occurred. </para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-int32" role="function">
<title>g_data_input_stream_read_int32&#160;()</title>
<indexterm zone="g-data-input-stream-read-int32"><primary sortas="data_input_stream_read_int32">g_data_input_stream_read_int32</primary></indexterm>
<programlisting language="C"><link linkend="gint32"><returnvalue>gint32</returnvalue></link>
g_data_input_stream_read_int32 (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads a signed 32-bit/4-byte value from <parameter>stream</parameter>
.</para>
<para>In order to get the correct byte order for this read operation, 
see <link linkend="g-data-input-stream-get-byte-order"><function>g_data_input_stream_get_byte_order()</function></link> and <link linkend="g-data-input-stream-set-byte-order"><function>g_data_input_stream_set_byte_order()</function></link>.</para>
<para>If <parameter>cancellable</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be returned.</para>
<refsect3 id="g-data-input-stream-read-int32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-int32.returns" role="returns">
<title>Returns</title>
<para> a signed 32-bit/4-byte value read from the <parameter>stream</parameter>
or <link linkend="0"><literal>0</literal></link> if
an error occurred. </para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-uint32" role="function">
<title>g_data_input_stream_read_uint32&#160;()</title>
<indexterm zone="g-data-input-stream-read-uint32"><primary sortas="data_input_stream_read_uint32">g_data_input_stream_read_uint32</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
g_data_input_stream_read_uint32 (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                 <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                 <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads an unsigned 32-bit/4-byte value from <parameter>stream</parameter>
.</para>
<para>In order to get the correct byte order for this read operation, 
see <link linkend="g-data-input-stream-get-byte-order"><function>g_data_input_stream_get_byte_order()</function></link> and <link linkend="g-data-input-stream-set-byte-order"><function>g_data_input_stream_set_byte_order()</function></link>.</para>
<para>If <parameter>cancellable</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be returned.</para>
<refsect3 id="g-data-input-stream-read-uint32.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-uint32.returns" role="returns">
<title>Returns</title>
<para> an unsigned 32-bit/4-byte value read from the <parameter>stream</parameter>
or <link linkend="0"><literal>0</literal></link> if
an error occurred. </para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-int64" role="function">
<title>g_data_input_stream_read_int64&#160;()</title>
<indexterm zone="g-data-input-stream-read-int64"><primary sortas="data_input_stream_read_int64">g_data_input_stream_read_int64</primary></indexterm>
<programlisting language="C"><link linkend="gint64"><returnvalue>gint64</returnvalue></link>
g_data_input_stream_read_int64 (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads a 64-bit/8-byte value from <parameter>stream</parameter>
.</para>
<para>In order to get the correct byte order for this read operation, 
see <link linkend="g-data-input-stream-get-byte-order"><function>g_data_input_stream_get_byte_order()</function></link> and <link linkend="g-data-input-stream-set-byte-order"><function>g_data_input_stream_set_byte_order()</function></link>.</para>
<para>If <parameter>cancellable</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be returned.</para>
<refsect3 id="g-data-input-stream-read-int64.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-int64.returns" role="returns">
<title>Returns</title>
<para> a signed 64-bit/8-byte value read from <parameter>stream</parameter>
or <link linkend="0"><literal>0</literal></link> if
an error occurred.  </para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-uint64" role="function">
<title>g_data_input_stream_read_uint64&#160;()</title>
<indexterm zone="g-data-input-stream-read-uint64"><primary sortas="data_input_stream_read_uint64">g_data_input_stream_read_uint64</primary></indexterm>
<programlisting language="C"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
g_data_input_stream_read_uint64 (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                 <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                 <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads an unsigned 64-bit/8-byte value from <parameter>stream</parameter>
.</para>
<para>In order to get the correct byte order for this read operation, 
see <link linkend="g-data-input-stream-get-byte-order"><function>g_data_input_stream_get_byte_order()</function></link>.</para>
<para>If <parameter>cancellable</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be returned.</para>
<refsect3 id="g-data-input-stream-read-uint64.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-uint64.returns" role="returns">
<title>Returns</title>
<para> an unsigned 64-bit/8-byte read from <parameter>stream</parameter>
or <link linkend="0"><literal>0</literal></link> if
an error occurred. </para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-line" role="function">
<title>g_data_input_stream_read_line&#160;()</title>
<indexterm zone="g-data-input-stream-read-line"><primary sortas="data_input_stream_read_line">g_data_input_stream_read_line</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_data_input_stream_read_line (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                               <parameter><link linkend="gsize"><type>gsize</type></link> *length</parameter>,
                               <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                               <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads a line from the data input stream.  Note that no encoding
checks or conversion is performed; the input is not guaranteed to
be UTF-8, and may in fact have embedded NUL characters.</para>
<para>If <parameter>cancellable</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be returned.</para>
<refsect3 id="g-data-input-stream-read-line.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> to get the length of the data read in. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-line.returns" role="returns">
<title>Returns</title>
<para>a NUL terminated byte array with the line that was read in
(without the newlines).  Set <parameter>length</parameter>
to a <link linkend="gsize"><type>gsize</type></link> to get the length
of the read line.  On an error, it will return <link linkend="NULL:CAPS"><literal>NULL</literal></link> and <parameter>error</parameter>
will be set. If there's no content to read, it will still return
<link linkend="NULL:CAPS"><literal>NULL</literal></link>, but <parameter>error</parameter>
won't be set. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>transfer full</acronym>][<acronym>array</acronym> zero-terminated=1][<acronym>element-type</acronym> guint8]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-line-utf8" role="function" condition="since:2.30">
<title>g_data_input_stream_read_line_utf8&#160;()</title>
<indexterm zone="g-data-input-stream-read-line-utf8" role="2.30"><primary sortas="data_input_stream_read_line_utf8">g_data_input_stream_read_line_utf8</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_data_input_stream_read_line_utf8 (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                    <parameter><link linkend="gsize"><type>gsize</type></link> *length</parameter>,
                                    <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                    <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads a UTF-8 encoded line from the data input stream.</para>
<para>If <parameter>cancellable</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be returned.</para>
<refsect3 id="g-data-input-stream-read-line-utf8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> to get the length of the data read in. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-line-utf8.returns" role="returns">
<title>Returns</title>
<para>a NUL terminated UTF-8 string
with the line that was read in (without the newlines).  Set
<parameter>length</parameter>
to a <link linkend="gsize"><type>gsize</type></link> to get the length of the read line.  On an
error, it will return <link linkend="NULL:CAPS"><literal>NULL</literal></link> and <parameter>error</parameter>
will be set.  For UTF-8
conversion errors, the set error domain is <link linkend="G-CONVERT-ERROR:CAPS"><literal>G_CONVERT_ERROR</literal></link>.  If
there's no content to read, it will still return <link linkend="NULL:CAPS"><literal>NULL</literal></link>, but <parameter>error</parameter>
won't be set. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.30">2.30</link></para></refsect2>
<refsect2 id="g-data-input-stream-read-line-async" role="function" condition="since:2.20">
<title>g_data_input_stream_read_line_async&#160;()</title>
<indexterm zone="g-data-input-stream-read-line-async" role="2.20"><primary sortas="data_input_stream_read_line_async">g_data_input_stream_read_line_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_data_input_stream_read_line_async (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                     <parameter><link linkend="gint"><type>gint</type></link> io_priority</parameter>,
                                     <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                     <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                     <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>The asynchronous version of <link linkend="g-data-input-stream-read-line"><function>g_data_input_stream_read_line()</function></link>.  It is
an error to have two outstanding calls to this function.</para>
<para>When the operation is finished, <parameter>callback</parameter>
 will be called. You
can then call <link linkend="g-data-input-stream-read-line-finish"><function>g_data_input_stream_read_line_finish()</function></link> to get
the result of the operation.</para>
<refsect3 id="g-data-input-stream-read-line-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>io_priority</para></entry>
<entry role="parameter_description"><para>the <link linkend="io-priority">I/O priority</link> of the request</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>callback to call when the request is satisfied. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="g-data-input-stream-read-line-finish" role="function" condition="since:2.20">
<title>g_data_input_stream_read_line_finish&#160;()</title>
<indexterm zone="g-data-input-stream-read-line-finish" role="2.20"><primary sortas="data_input_stream_read_line_finish">g_data_input_stream_read_line_finish</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_data_input_stream_read_line_finish (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                      <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                      <parameter><link linkend="gsize"><type>gsize</type></link> *length</parameter>,
                                      <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finish an asynchronous call started by
<link linkend="g-data-input-stream-read-line-async"><function>g_data_input_stream_read_line_async()</function></link>.  Note the warning about
string encoding in <link linkend="g-data-input-stream-read-line"><function>g_data_input_stream_read_line()</function></link> applies here as
well.</para>
<refsect3 id="g-data-input-stream-read-line-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>the <link linkend="GAsyncResult"><type>GAsyncResult</type></link> that was provided to the callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> to get the length of the data read in. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-line-finish.returns" role="returns">
<title>Returns</title>
<para>a NUL-terminated byte array with the line that was read in
(without the newlines).  Set <parameter>length</parameter>
to a <link linkend="gsize"><type>gsize</type></link> to get the length
of the read line.  On an error, it will return <link linkend="NULL:CAPS"><literal>NULL</literal></link> and <parameter>error</parameter>
will be set. If there's no content to read, it will still return
<link linkend="NULL:CAPS"><literal>NULL</literal></link>, but <parameter>error</parameter>
won't be set. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>transfer full</acronym>][<acronym>array</acronym> zero-terminated=1][<acronym>element-type</acronym> guint8]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="g-data-input-stream-read-line-finish-utf8" role="function" condition="since:2.30">
<title>g_data_input_stream_read_line_finish_utf8&#160;()</title>
<indexterm zone="g-data-input-stream-read-line-finish-utf8" role="2.30"><primary sortas="data_input_stream_read_line_finish_utf8">g_data_input_stream_read_line_finish_utf8</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_data_input_stream_read_line_finish_utf8
                               (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                <parameter><link linkend="gsize"><type>gsize</type></link> *length</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finish an asynchronous call started by
<link linkend="g-data-input-stream-read-line-async"><function>g_data_input_stream_read_line_async()</function></link>.</para>
<refsect3 id="g-data-input-stream-read-line-finish-utf8.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>the <link linkend="GAsyncResult"><type>GAsyncResult</type></link> that was provided to the callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> to get the length of the data read in. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-line-finish-utf8.returns" role="returns">
<title>Returns</title>
<para>a string with the line that
was read in (without the newlines).  Set <parameter>length</parameter>
to a <link linkend="gsize"><type>gsize</type></link> to
get the length of the read line.  On an error, it will return
<link linkend="NULL:CAPS"><literal>NULL</literal></link> and <parameter>error</parameter>
will be set. For UTF-8 conversion errors, the set
error domain is <link linkend="G-CONVERT-ERROR:CAPS"><literal>G_CONVERT_ERROR</literal></link>.  If there's no content to read,
it will still return <link linkend="NULL:CAPS"><literal>NULL</literal></link>, but <parameter>error</parameter>
won't be set. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.30">2.30</link></para></refsect2>
<refsect2 id="g-data-input-stream-read-upto" role="function" condition="since:2.26">
<title>g_data_input_stream_read_upto&#160;()</title>
<indexterm zone="g-data-input-stream-read-upto" role="2.26"><primary sortas="data_input_stream_read_upto">g_data_input_stream_read_upto</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_data_input_stream_read_upto (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *stop_chars</parameter>,
                               <parameter><link linkend="gssize"><type>gssize</type></link> stop_chars_len</parameter>,
                               <parameter><link linkend="gsize"><type>gsize</type></link> *length</parameter>,
                               <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                               <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Reads a string from the data input stream, up to the first
occurrence of any of the stop characters.</para>
<para>In contrast to <link linkend="g-data-input-stream-read-until"><function>g_data_input_stream_read_until()</function></link>, this function
does not consume the stop character. You have to use
<link linkend="g-data-input-stream-read-byte"><function>g_data_input_stream_read_byte()</function></link> to get it before calling
<link linkend="g-data-input-stream-read-upto"><function>g_data_input_stream_read_upto()</function></link> again.</para>
<para>Note that <parameter>stop_chars</parameter>
 may contain '\0' if <parameter>stop_chars_len</parameter>
 is
specified.</para>
<para>The returned string will always be nul-terminated on success.</para>
<refsect3 id="g-data-input-stream-read-upto.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDataInputStream"><type>GDataInputStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop_chars</para></entry>
<entry role="parameter_description"><para>characters to terminate the read</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop_chars_len</para></entry>
<entry role="parameter_description"><para>length of <parameter>stop_chars</parameter>
. May be -1 if <parameter>stop_chars</parameter>
is
nul-terminated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> to get the length of the data read in. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-upto.returns" role="returns">
<title>Returns</title>
<para>a string with the data that was read
before encountering any of the stop characters. Set <parameter>length</parameter>
to
a <link linkend="gsize"><type>gsize</type></link> to get the length of the string. This function will
return <link linkend="NULL:CAPS"><literal>NULL</literal></link> on an error. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-data-input-stream-read-upto-async" role="function" condition="since:2.26">
<title>g_data_input_stream_read_upto_async&#160;()</title>
<indexterm zone="g-data-input-stream-read-upto-async" role="2.26"><primary sortas="data_input_stream_read_upto_async">g_data_input_stream_read_upto_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_data_input_stream_read_upto_async (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                     <parameter>const <link linkend="gchar"><type>gchar</type></link> *stop_chars</parameter>,
                                     <parameter><link linkend="gssize"><type>gssize</type></link> stop_chars_len</parameter>,
                                     <parameter><link linkend="gint"><type>gint</type></link> io_priority</parameter>,
                                     <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                     <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                     <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>The asynchronous version of <link linkend="g-data-input-stream-read-upto"><function>g_data_input_stream_read_upto()</function></link>.
It is an error to have two outstanding calls to this function.</para>
<para>In contrast to <link linkend="g-data-input-stream-read-until"><function>g_data_input_stream_read_until()</function></link>, this function
does not consume the stop character. You have to use
<link linkend="g-data-input-stream-read-byte"><function>g_data_input_stream_read_byte()</function></link> to get it before calling
<link linkend="g-data-input-stream-read-upto"><function>g_data_input_stream_read_upto()</function></link> again.</para>
<para>Note that <parameter>stop_chars</parameter>
 may contain '\0' if <parameter>stop_chars_len</parameter>
 is
specified.</para>
<para>When the operation is finished, <parameter>callback</parameter>
 will be called. You
can then call <link linkend="g-data-input-stream-read-upto-finish"><function>g_data_input_stream_read_upto_finish()</function></link> to get
the result of the operation.</para>
<refsect3 id="g-data-input-stream-read-upto-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDataInputStream"><type>GDataInputStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop_chars</para></entry>
<entry role="parameter_description"><para>characters to terminate the read</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop_chars_len</para></entry>
<entry role="parameter_description"><para>length of <parameter>stop_chars</parameter>
. May be -1 if <parameter>stop_chars</parameter>
is
nul-terminated</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>io_priority</para></entry>
<entry role="parameter_description"><para>the <link linkend="io-priority">I/O priority</link> of the request</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>callback to call when the request is satisfied. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-data-input-stream-read-upto-finish" role="function" condition="since:2.24">
<title>g_data_input_stream_read_upto_finish&#160;()</title>
<indexterm zone="g-data-input-stream-read-upto-finish" role="2.24"><primary sortas="data_input_stream_read_upto_finish">g_data_input_stream_read_upto_finish</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_data_input_stream_read_upto_finish (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                      <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                      <parameter><link linkend="gsize"><type>gsize</type></link> *length</parameter>,
                                      <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finish an asynchronous call started by
<link linkend="g-data-input-stream-read-upto-async"><function>g_data_input_stream_read_upto_async()</function></link>.</para>
<para>Note that this function does not consume the stop character. You
have to use <link linkend="g-data-input-stream-read-byte"><function>g_data_input_stream_read_byte()</function></link> to get it before calling
<link linkend="g-data-input-stream-read-upto-async"><function>g_data_input_stream_read_upto_async()</function></link> again.</para>
<para>The returned string will always be nul-terminated on success.</para>
<refsect3 id="g-data-input-stream-read-upto-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDataInputStream"><type>GDataInputStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>the <link linkend="GAsyncResult"><type>GAsyncResult</type></link> that was provided to the callback</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> to get the length of the data read in. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-upto-finish.returns" role="returns">
<title>Returns</title>
<para>a string with the data that was read
before encountering any of the stop characters. Set <parameter>length</parameter>
to
a <link linkend="gsize"><type>gsize</type></link> to get the length of the string. This function will
return <link linkend="NULL:CAPS"><literal>NULL</literal></link> on an error. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.24">2.24</link></para></refsect2>
<refsect2 id="g-data-input-stream-read-until" role="function" condition="deprecated">
<title>g_data_input_stream_read_until&#160;()</title>
<indexterm zone="g-data-input-stream-read-until" role="deprecated"><primary sortas="data_input_stream_read_until">g_data_input_stream_read_until</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_data_input_stream_read_until (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *stop_chars</parameter>,
                                <parameter><link linkend="gsize"><type>gsize</type></link> *length</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<warning><para><literal>g_data_input_stream_read_until</literal> has been deprecated since version 2.56 and should not be used in newly-written code.</para> <para>Use <link linkend="g-data-input-stream-read-upto"><function>g_data_input_stream_read_upto()</function></link> instead, which has more
    consistent behaviour regarding the stop character.</para>
</warning>
<para>Reads a string from the data input stream, up to the first
occurrence of any of the stop characters.</para>
<para>Note that, in contrast to <link linkend="g-data-input-stream-read-until-async"><function>g_data_input_stream_read_until_async()</function></link>,
this function consumes the stop character that it finds.</para>
<para>Don't use this function in new code.  Its functionality is
inconsistent with <link linkend="g-data-input-stream-read-until-async"><function>g_data_input_stream_read_until_async()</function></link>.  Both
functions will be marked as deprecated in a future release.  Use
<link linkend="g-data-input-stream-read-upto"><function>g_data_input_stream_read_upto()</function></link> instead, but note that that function
does not consume the stop character.</para>
<refsect3 id="g-data-input-stream-read-until.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop_chars</para></entry>
<entry role="parameter_description"><para>characters to terminate the read.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> to get the length of the data read in. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-until.returns" role="returns">
<title>Returns</title>
<para>a string with the data that was read
before encountering any of the stop characters. Set <parameter>length</parameter>
to
a <link linkend="gsize"><type>gsize</type></link> to get the length of the string. This function will
return <link linkend="NULL:CAPS"><literal>NULL</literal></link> on an error. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="g-data-input-stream-read-until-async" role="function" condition="deprecated|since:2.20">
<title>g_data_input_stream_read_until_async&#160;()</title>
<indexterm zone="g-data-input-stream-read-until-async" role="deprecated"><primary sortas="data_input_stream_read_until_async">g_data_input_stream_read_until_async</primary></indexterm><indexterm zone="g-data-input-stream-read-until-async" role="2.20"><primary sortas="data_input_stream_read_until_async">g_data_input_stream_read_until_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_data_input_stream_read_until_async (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *stop_chars</parameter>,
                                      <parameter><link linkend="gint"><type>gint</type></link> io_priority</parameter>,
                                      <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                      <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                      <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<warning><para><literal>g_data_input_stream_read_until_async</literal> has been deprecated since version 2.56 and should not be used in newly-written code.</para> <para>Use <link linkend="g-data-input-stream-read-upto-async"><function>g_data_input_stream_read_upto_async()</function></link> instead, which
    has more consistent behaviour regarding the stop character.</para>
</warning>
<para>The asynchronous version of <link linkend="g-data-input-stream-read-until"><function>g_data_input_stream_read_until()</function></link>.
It is an error to have two outstanding calls to this function.</para>
<para>Note that, in contrast to <link linkend="g-data-input-stream-read-until"><function>g_data_input_stream_read_until()</function></link>,
this function does not consume the stop character that it finds.  You
must read it for yourself.</para>
<para>When the operation is finished, <parameter>callback</parameter>
 will be called. You
can then call <link linkend="g-data-input-stream-read-until-finish"><function>g_data_input_stream_read_until_finish()</function></link> to get
the result of the operation.</para>
<para>Don't use this function in new code.  Its functionality is
inconsistent with <link linkend="g-data-input-stream-read-until"><function>g_data_input_stream_read_until()</function></link>.  Both functions
will be marked as deprecated in a future release.  Use
<link linkend="g-data-input-stream-read-upto-async"><function>g_data_input_stream_read_upto_async()</function></link> instead.</para>
<refsect3 id="g-data-input-stream-read-until-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>stop_chars</para></entry>
<entry role="parameter_description"><para>characters to terminate the read.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>io_priority</para></entry>
<entry role="parameter_description"><para>the <link linkend="io-priority">I/O priority</link> of the request</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>callback to call when the request is satisfied. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>
<refsect2 id="g-data-input-stream-read-until-finish" role="function" condition="deprecated|since:2.20">
<title>g_data_input_stream_read_until_finish&#160;()</title>
<indexterm zone="g-data-input-stream-read-until-finish" role="deprecated"><primary sortas="data_input_stream_read_until_finish">g_data_input_stream_read_until_finish</primary></indexterm><indexterm zone="g-data-input-stream-read-until-finish" role="2.20"><primary sortas="data_input_stream_read_until_finish">g_data_input_stream_read_until_finish</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_data_input_stream_read_until_finish (<parameter><link linkend="GDataInputStream"><type>GDataInputStream</type></link> *stream</parameter>,
                                       <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                       <parameter><link linkend="gsize"><type>gsize</type></link> *length</parameter>,
                                       <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<warning><para><literal>g_data_input_stream_read_until_finish</literal> has been deprecated since version 2.56 and should not be used in newly-written code.</para> <para>Use <link linkend="g-data-input-stream-read-upto-finish"><function>g_data_input_stream_read_upto_finish()</function></link> instead, which
    has more consistent behaviour regarding the stop character.</para>
</warning>
<para>Finish an asynchronous call started by
<link linkend="g-data-input-stream-read-until-async"><function>g_data_input_stream_read_until_async()</function></link>.</para>
<refsect3 id="g-data-input-stream-read-until-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a given <link linkend="GDataInputStream"><type>GDataInputStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>the <link linkend="GAsyncResult"><type>GAsyncResult</type></link> that was provided to the callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>length</para></entry>
<entry role="parameter_description"><para>a <link linkend="gsize"><type>gsize</type></link> to get the length of the data read in. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para><link linkend="GError"><type>GError</type></link> for error reporting.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-data-input-stream-read-until-finish.returns" role="returns">
<title>Returns</title>
<para>a string with the data that was read
before encountering any of the stop characters. Set <parameter>length</parameter>
to
a <link linkend="gsize"><type>gsize</type></link> to get the length of the string. This function will
return <link linkend="NULL:CAPS"><literal>NULL</literal></link> on an error. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.20">2.20</link></para></refsect2>

</refsect1>
<refsect1 id="GDataInputStream.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GDataInputStream-struct" role="struct">
<title>GDataInputStream</title>
<indexterm zone="GDataInputStream-struct"><primary sortas="DataInputStream">GDataInputStream</primary></indexterm>
<programlisting language="C">typedef struct _GDataInputStream GDataInputStream;</programlisting>
<para>An implementation of <link linkend="GBufferedInputStream"><type>GBufferedInputStream</type></link> that allows for high-level
data manipulation of arbitrary data (including binary operations).</para>
</refsect2>
<refsect2 id="GDataStreamByteOrder" role="enum">
<title>enum GDataStreamByteOrder</title>
<indexterm zone="GDataStreamByteOrder"><primary sortas="DataStreamByteOrder">GDataStreamByteOrder</primary></indexterm>
<para><link linkend="GDataStreamByteOrder"><type>GDataStreamByteOrder</type></link> is used to ensure proper endianness of streaming data sources
across various machine architectures.</para>
<refsect3 id="GDataStreamByteOrder.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DATA-STREAM-BYTE-ORDER-BIG-ENDIAN:CAPS">G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN</para></entry>
<entry role="enum_member_description"><para>Selects Big Endian byte order.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DATA-STREAM-BYTE-ORDER-LITTLE-ENDIAN:CAPS">G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN</para></entry>
<entry role="enum_member_description"><para>Selects Little Endian byte order.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DATA-STREAM-BYTE-ORDER-HOST-ENDIAN:CAPS">G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN</para></entry>
<entry role="enum_member_description"><para>Selects endianness based on host machine's architecture.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="GDataStreamNewlineType" role="enum">
<title>enum GDataStreamNewlineType</title>
<indexterm zone="GDataStreamNewlineType"><primary sortas="DataStreamNewlineType">GDataStreamNewlineType</primary></indexterm>
<para><link linkend="GDataStreamNewlineType"><type>GDataStreamNewlineType</type></link> is used when checking for or setting the line endings for a given file.</para>
<refsect3 id="GDataStreamNewlineType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DATA-STREAM-NEWLINE-TYPE-LF:CAPS">G_DATA_STREAM_NEWLINE_TYPE_LF</para></entry>
<entry role="enum_member_description"><para>Selects "LF" line endings, common on most modern UNIX platforms.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DATA-STREAM-NEWLINE-TYPE-CR:CAPS">G_DATA_STREAM_NEWLINE_TYPE_CR</para></entry>
<entry role="enum_member_description"><para>Selects "CR" line endings.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DATA-STREAM-NEWLINE-TYPE-CR-LF:CAPS">G_DATA_STREAM_NEWLINE_TYPE_CR_LF</para></entry>
<entry role="enum_member_description"><para>Selects "CR, LF" line ending, common on Microsoft Windows.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DATA-STREAM-NEWLINE-TYPE-ANY:CAPS">G_DATA_STREAM_NEWLINE_TYPE_ANY</para></entry>
<entry role="enum_member_description"><para>Automatically try to handle any line ending type.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="GDataInputStream.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GDataInputStream--byte-order" role="property"><title>The <literal>“byte-order”</literal> property</title>
<indexterm zone="GDataInputStream--byte-order"><primary sortas="DataInputStream:byte-order">GDataInputStream:byte-order</primary></indexterm>
<programlisting>  “byte-order”               <link linkend="GDataStreamByteOrder"><type>GDataStreamByteOrder</type></link></programlisting>
<para>The byte order.</para><para>Flags: Read / Write</para>
<para>Default value: G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN</para>
</refsect2>
<refsect2 id="GDataInputStream--newline-type" role="property"><title>The <literal>“newline-type”</literal> property</title>
<indexterm zone="GDataInputStream--newline-type"><primary sortas="DataInputStream:newline-type">GDataInputStream:newline-type</primary></indexterm>
<programlisting>  “newline-type”             <link linkend="GDataStreamNewlineType"><type>GDataStreamNewlineType</type></link></programlisting>
<para>The accepted types of line ending.</para><para>Flags: Read / Write</para>
<para>Default value: G_DATA_STREAM_NEWLINE_TYPE_LF</para>
</refsect2>

</refsect1>
<refsect1 id="GDataInputStream.see-also">
<title>See Also</title>
<para><link linkend="GInputStream"><type>GInputStream</type></link></para>

</refsect1>

</refentry>
