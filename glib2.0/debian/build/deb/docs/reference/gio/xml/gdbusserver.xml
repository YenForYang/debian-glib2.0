<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GDBusServer">
<refmeta>
<refentrytitle role="top_of_page" id="GDBusServer.top_of_page">GDBusServer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GDBusServer</refname>
<refpurpose>Helper for accepting connections</refpurpose>
</refnamediv>

<refsect1 id="GDBusServer.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GDBusServer"><returnvalue>GDBusServer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-server-new-sync">g_dbus_server_new_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-server-start">g_dbus_server_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-server-stop">g_dbus_server_stop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-server-is-active">g_dbus_server_is_active</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-server-get-guid">g_dbus_server_get_guid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusServerFlags"><returnvalue>GDBusServerFlags</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-server-get-flags">g_dbus_server_get_flags</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-server-get-client-address">g_dbus_server_get_client_address</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDBusServer.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="gboolean"><type>gboolean</type></link></entry><entry role="property_name"><link linkend="GDBusServer--active">active</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusServer--address">address</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusServer--authentication-observer">authentication-observer</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusServer--client-address">client-address</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="GDBusServerFlags"><type>GDBusServerFlags</type></link></entry><entry role="property_name"><link linkend="GDBusServer--flags">flags</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusServer--guid">guid</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDBusServer.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signals_return" colwidth="150px"/>
<colspec colname="signals_name" colwidth="300px"/>
<colspec colname="signals_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link></entry><entry role="signal_name"><link linkend="GDBusServer-new-connection">new-connection</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDBusServer.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GDBusServer-struct">GDBusServer</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDBusServerFlags">GDBusServerFlags</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDBusServer.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GFlags">GFlags</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GDBusServerFlags
    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GDBusServer
</screen>
</refsect1>
<refsect1 id="GDBusServer.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GDBusServer implements
 <link linkend="GInitable">GInitable</link>.</para>

</refsect1>

<refsect1 id="GDBusServer.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GDBusServer.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GDBusServer"><type>GDBusServer</type></link> is a helper for listening to and accepting D-Bus
connections. This can be used to create a new D-Bus server, allowing two
peers to use the D-Bus protocol for their own specialized communication.
A server instance provided in this way will not perform message routing or
implement the org.freedesktop.DBus interface.</para>
<para>To just export an object on a well-known name on a message bus, such as the
session or system bus, you should instead use <link linkend="g-bus-own-name"><function>g_bus_own_name()</function></link>.</para>
<para>An example of peer-to-peer communication with G-DBus can be found
in <ulink url="https://git.gnome.org/browse/glib/tree/gio/tests/gdbus-example-peer.c">gdbus-example-peer.c</ulink>.</para>

</refsect1>
<refsect1 id="GDBusServer.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-dbus-server-new-sync" role="function" condition="since:2.26">
<title>g_dbus_server_new_sync&#160;()</title>
<indexterm zone="g-dbus-server-new-sync" role="2.26"><primary sortas="dbus_server_new_sync">g_dbus_server_new_sync</primary></indexterm>
<programlisting language="C"><link linkend="GDBusServer"><returnvalue>GDBusServer</returnvalue></link>&#160;*
g_dbus_server_new_sync (<parameter>const <link linkend="gchar"><type>gchar</type></link> *address</parameter>,
                        <parameter><link linkend="GDBusServerFlags"><type>GDBusServerFlags</type></link> flags</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *guid</parameter>,
                        <parameter><link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> *observer</parameter>,
                        <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                        <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Creates a new D-Bus server that listens on the first address in
<parameter>address</parameter>
 that works.</para>
<para>Once constructed, you can use <link linkend="g-dbus-server-get-client-address"><function>g_dbus_server_get_client_address()</function></link> to
get a D-Bus address string that clients can use to connect.</para>
<para>Connect to the <link linkend="GDBusServer-new-connection"><type>“new-connection”</type></link> signal to handle
incoming connections.</para>
<para>The returned <link linkend="GDBusServer"><type>GDBusServer</type></link> isn't active - you have to start it with
<link linkend="g-dbus-server-start"><function>g_dbus_server_start()</function></link>.</para>
<para><link linkend="GDBusServer"><type>GDBusServer</type></link> is used in this <link linkend="gdbus-peer-to-peer">example</link>.</para>
<para>This is a synchronous failable constructor. See
<link linkend="g-dbus-server-new"><function>g_dbus_server_new()</function></link> for the asynchronous version.</para>
<refsect3 id="g-dbus-server-new-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>address</para></entry>
<entry role="parameter_description"><para>A D-Bus address.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>Flags from the <link linkend="GDBusServerFlags"><type>GDBusServerFlags</type></link> enumeration.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>guid</para></entry>
<entry role="parameter_description"><para>A D-Bus GUID.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>observer</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>A <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for server or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-server-new-sync.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="GDBusServer"><type>GDBusServer</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Free with
<link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-server-start" role="function" condition="since:2.26">
<title>g_dbus_server_start&#160;()</title>
<indexterm zone="g-dbus-server-start" role="2.26"><primary sortas="dbus_server_start">g_dbus_server_start</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_server_start (<parameter><link linkend="GDBusServer"><type>GDBusServer</type></link> *server</parameter>);</programlisting>
<para>Starts <parameter>server</parameter>
.</para>
<refsect3 id="g-dbus-server-start.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>server</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusServer"><type>GDBusServer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-server-stop" role="function" condition="since:2.26">
<title>g_dbus_server_stop&#160;()</title>
<indexterm zone="g-dbus-server-stop" role="2.26"><primary sortas="dbus_server_stop">g_dbus_server_stop</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_server_stop (<parameter><link linkend="GDBusServer"><type>GDBusServer</type></link> *server</parameter>);</programlisting>
<para>Stops <parameter>server</parameter>
.</para>
<refsect3 id="g-dbus-server-stop.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>server</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusServer"><type>GDBusServer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-server-is-active" role="function" condition="since:2.26">
<title>g_dbus_server_is_active&#160;()</title>
<indexterm zone="g-dbus-server-is-active" role="2.26"><primary sortas="dbus_server_is_active">g_dbus_server_is_active</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_server_is_active (<parameter><link linkend="GDBusServer"><type>GDBusServer</type></link> *server</parameter>);</programlisting>
<para>Gets whether <parameter>server</parameter>
 is active.</para>
<refsect3 id="g-dbus-server-is-active.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>server</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusServer"><type>GDBusServer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-server-is-active.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if server is active, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-server-get-guid" role="function" condition="since:2.26">
<title>g_dbus_server_get_guid&#160;()</title>
<indexterm zone="g-dbus-server-get-guid" role="2.26"><primary sortas="dbus_server_get_guid">g_dbus_server_get_guid</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
g_dbus_server_get_guid (<parameter><link linkend="GDBusServer"><type>GDBusServer</type></link> *server</parameter>);</programlisting>
<para>Gets the GUID for <parameter>server</parameter>
.</para>
<refsect3 id="g-dbus-server-get-guid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>server</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusServer"><type>GDBusServer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-server-get-guid.returns" role="returns">
<title>Returns</title>
<para> A D-Bus GUID. Do not free this string, it is owned by <parameter>server</parameter>
.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-server-get-flags" role="function" condition="since:2.26">
<title>g_dbus_server_get_flags&#160;()</title>
<indexterm zone="g-dbus-server-get-flags" role="2.26"><primary sortas="dbus_server_get_flags">g_dbus_server_get_flags</primary></indexterm>
<programlisting language="C"><link linkend="GDBusServerFlags"><returnvalue>GDBusServerFlags</returnvalue></link>
g_dbus_server_get_flags (<parameter><link linkend="GDBusServer"><type>GDBusServer</type></link> *server</parameter>);</programlisting>
<para>Gets the flags for <parameter>server</parameter>
.</para>
<refsect3 id="g-dbus-server-get-flags.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>server</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusServer"><type>GDBusServer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-server-get-flags.returns" role="returns">
<title>Returns</title>
<para> A set of flags from the <link linkend="GDBusServerFlags"><type>GDBusServerFlags</type></link> enumeration.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-server-get-client-address" role="function" condition="since:2.26">
<title>g_dbus_server_get_client_address&#160;()</title>
<indexterm zone="g-dbus-server-get-client-address" role="2.26"><primary sortas="dbus_server_get_client_address">g_dbus_server_get_client_address</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
g_dbus_server_get_client_address (<parameter><link linkend="GDBusServer"><type>GDBusServer</type></link> *server</parameter>);</programlisting>
<para>Gets a
<ulink url="https://dbus.freedesktop.org/doc/dbus-specification.html#addresses">D-Bus address</ulink>
string that can be used by clients to connect to <parameter>server</parameter>
.</para>
<refsect3 id="g-dbus-server-get-client-address.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>server</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusServer"><type>GDBusServer</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-server-get-client-address.returns" role="returns">
<title>Returns</title>
<para> A D-Bus address string. Do not free, the string is owned
by <parameter>server</parameter>
.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>

</refsect1>
<refsect1 id="GDBusServer.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GDBusServer-struct" role="struct">
<title>GDBusServer</title>
<indexterm zone="GDBusServer-struct" role="2.26"><primary sortas="DBusServer">GDBusServer</primary></indexterm>
<programlisting language="C">typedef struct _GDBusServer GDBusServer;</programlisting>
<para>The <link linkend="GDBusServer"><type>GDBusServer</type></link> structure contains only private data and
should only be accessed using the provided API.</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusServerFlags" role="enum" condition="since:2.26">
<title>enum GDBusServerFlags</title>
<indexterm zone="GDBusServerFlags" role="2.26"><primary sortas="DBusServerFlags">GDBusServerFlags</primary></indexterm>
<para>Flags used when creating a <link linkend="GDBusServer"><type>GDBusServer</type></link>.</para>
<refsect3 id="GDBusServerFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SERVER-FLAGS-NONE:CAPS">G_DBUS_SERVER_FLAGS_NONE</para></entry>
<entry role="enum_member_description"><para>No flags set.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SERVER-FLAGS-RUN-IN-THREAD:CAPS">G_DBUS_SERVER_FLAGS_RUN_IN_THREAD</para></entry>
<entry role="enum_member_description"><para>All <link linkend="GDBusServer-new-connection"><type>“new-connection”</type></link>
signals will run in separated dedicated threads (see signal for
details).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SERVER-FLAGS-AUTHENTICATION-ALLOW-ANONYMOUS:CAPS">G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS</para></entry>
<entry role="enum_member_description"><para>Allow the anonymous
authentication method.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>

</refsect1>
<refsect1 id="GDBusServer.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GDBusServer--active" role="property"><title>The <literal>“active”</literal> property</title>
<indexterm zone="GDBusServer--active" role="2.26"><primary sortas="DBusServer:active">GDBusServer:active</primary></indexterm>
<programlisting>  “active”                   <link linkend="gboolean"><type>gboolean</type></link></programlisting>
<para>Whether the server is currently active.</para>
<para>Flags: Read</para>
<para>Default value: FALSE</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusServer--address" role="property"><title>The <literal>“address”</literal> property</title>
<indexterm zone="GDBusServer--address" role="2.26"><primary sortas="DBusServer:address">GDBusServer:address</primary></indexterm>
<programlisting>  “address”                  <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The D-Bus address to listen on.</para>
<para>Flags: Read / Write / Construct Only</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusServer--authentication-observer" role="property"><title>The <literal>“authentication-observer”</literal> property</title>
<indexterm zone="GDBusServer--authentication-observer" role="2.26"><primary sortas="DBusServer:authentication-observer">GDBusServer:authentication-observer</primary></indexterm>
<programlisting>  “authentication-observer”  <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link>&#160;*</programlisting>
<para>A <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> object to assist in the authentication process or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>Flags: Read / Write / Construct Only</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusServer--client-address" role="property"><title>The <literal>“client-address”</literal> property</title>
<indexterm zone="GDBusServer--client-address" role="2.26"><primary sortas="DBusServer:client-address">GDBusServer:client-address</primary></indexterm>
<programlisting>  “client-address”           <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The D-Bus address that clients can use.</para>
<para>Flags: Read</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusServer--flags" role="property"><title>The <literal>“flags”</literal> property</title>
<indexterm zone="GDBusServer--flags" role="2.26"><primary sortas="DBusServer:flags">GDBusServer:flags</primary></indexterm>
<programlisting>  “flags”                    <link linkend="GDBusServerFlags"><type>GDBusServerFlags</type></link></programlisting>
<para>Flags from the <link linkend="GDBusServerFlags"><type>GDBusServerFlags</type></link> enumeration.</para>
<para>Flags: Read / Write / Construct Only</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusServer--guid" role="property"><title>The <literal>“guid”</literal> property</title>
<indexterm zone="GDBusServer--guid" role="2.26"><primary sortas="DBusServer:guid">GDBusServer:guid</primary></indexterm>
<programlisting>  “guid”                     <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The guid of the server.</para>
<para>Flags: Read / Write / Construct Only</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>

</refsect1>
<refsect1 id="GDBusServer.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GDBusServer-new-connection" role="signal"><title>The <literal>“new-connection”</literal> signal</title>
<indexterm zone="GDBusServer-new-connection" role="2.26"><primary sortas="DBusServer::new-connection">GDBusServer::new-connection</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
user_function (<link linkend="GDBusServer"><type>GDBusServer</type></link>     *server,
               <link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection,
               <link linkend="gpointer"><type>gpointer</type></link>         user_data)</programlisting>
<para>Emitted when a new authenticated connection has been made. Use
<link linkend="g-dbus-connection-get-peer-credentials"><function>g_dbus_connection_get_peer_credentials()</function></link> to figure out what
identity (if any), was authenticated.</para>
<para>If you want to accept the connection, take a reference to the
<parameter>connection</parameter>
 object and return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>. When you are done with the
connection call <link linkend="g-dbus-connection-close"><function>g_dbus_connection_close()</function></link> and give up your
reference. Note that the other peer may disconnect at any time -
a typical thing to do when accepting a connection is to listen to
the <link linkend="GDBusConnection-closed"><type>“closed”</type></link> signal.</para>
<para>If <link linkend="GDBusServer--flags"><type>“flags”</type></link> contains <link linkend="G-DBUS-SERVER-FLAGS-RUN-IN-THREAD:CAPS"><literal>G_DBUS_SERVER_FLAGS_RUN_IN_THREAD</literal></link>
then the signal is emitted in a new thread dedicated to the
connection. Otherwise the signal is emitted in the
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread that <parameter>server</parameter>
 was constructed in.</para>
<para>You are guaranteed that signal handlers for this signal runs
before incoming messages on <parameter>connection</parameter>
 are processed. This means
that it's suitable to call <link linkend="g-dbus-connection-register-object"><function>g_dbus_connection_register_object()</function></link> or
similar from the signal handler.</para>
<refsect3 id="GDBusServer-new-connection.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>server</para></entry>
<entry role="parameter_description"><para>The <link linkend="GDBusServer"><type>GDBusServer</type></link> emitting the signal.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link> for the new connection.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GDBusServer-new-connection.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to claim <parameter>connection</parameter>
, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to let other handlers
run.</para>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
</refsect1>

</refentry>
