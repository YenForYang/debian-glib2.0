<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GFileIOStream">
<refmeta>
<refentrytitle role="top_of_page" id="GFileIOStream.top_of_page">GFileIOStream</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GFileIOStream</refname>
<refpurpose>File read and write streaming operations</refpurpose>
</refnamediv>

<refsect1 id="GFileIOStream.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-io-stream-get-etag">g_file_io_stream_get_etag</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-io-stream-query-info">g_file_io_stream_query_info</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-file-io-stream-query-info-async">g_file_io_stream_query_info_async</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-file-io-stream-query-info-finish">g_file_io_stream_query_info_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GFileIOStream.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GFileIOStream-struct">GFileIOStream</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GFileIOStream.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GIOStream">GIOStream</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GFileIOStream
</screen>
</refsect1>
<refsect1 id="GFileIOStream.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GFileIOStream implements
 <link linkend="GSeekable">GSeekable</link>.</para>

</refsect1>

<refsect1 id="GFileIOStream.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GFileIOStream.description" role="desc">
<title role="desc.title">Description</title>
<para>GFileIOStream provides io streams that both read and write to the same
file handle.</para>
<para>GFileIOStream implements <link linkend="GSeekable"><type>GSeekable</type></link>, which allows the io
stream to jump to arbitrary positions in the file and to truncate
the file, provided the filesystem of the file supports these
operations.</para>
<para>To find the position of a file io stream, use
<link linkend="g-seekable-tell"><function>g_seekable_tell()</function></link>.</para>
<para>To find out if a file io stream supports seeking, use <link linkend="g-seekable-can-seek"><function>g_seekable_can_seek()</function></link>.
To position a file io stream, use <link linkend="g-seekable-seek"><function>g_seekable_seek()</function></link>.
To find out if a file io stream supports truncating, use
<link linkend="g-seekable-can-truncate"><function>g_seekable_can_truncate()</function></link>. To truncate a file io
stream, use <link linkend="g-seekable-truncate"><function>g_seekable_truncate()</function></link>.</para>
<para>The default implementation of all the <link linkend="GFileIOStream"><type>GFileIOStream</type></link> operations
and the implementation of <link linkend="GSeekable"><type>GSeekable</type></link> just call into the same operations
on the output stream.</para>

</refsect1>
<refsect1 id="GFileIOStream.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-file-io-stream-get-etag" role="function" condition="since:2.22">
<title>g_file_io_stream_get_etag&#160;()</title>
<indexterm zone="g-file-io-stream-get-etag" role="2.22"><primary sortas="file_io_stream_get_etag">g_file_io_stream_get_etag</primary></indexterm>
<programlisting language="C"><link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
g_file_io_stream_get_etag (<parameter><link linkend="GFileIOStream"><type>GFileIOStream</type></link> *stream</parameter>);</programlisting>
<para>Gets the entity tag for the file when it has been written.
This must be called after the stream has been written
and closed, as the etag can change while writing.</para>
<refsect3 id="g-file-io-stream-get-etag.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileIOStream"><type>GFileIOStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-io-stream-get-etag.returns" role="returns">
<title>Returns</title>
<para> the entity tag for the stream.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="g-file-io-stream-query-info" role="function" condition="since:2.22">
<title>g_file_io_stream_query_info&#160;()</title>
<indexterm zone="g-file-io-stream-query-info" role="2.22"><primary sortas="file_io_stream_query_info">g_file_io_stream_query_info</primary></indexterm>
<programlisting language="C"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
g_file_io_stream_query_info (<parameter><link linkend="GFileIOStream"><type>GFileIOStream</type></link> *stream</parameter>,
                             <parameter>const <link linkend="char"><type>char</type></link> *attributes</parameter>,
                             <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                             <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Queries a file io stream for the given <parameter>attributes</parameter>
.
This function blocks while querying the stream. For the asynchronous
version of this function, see <link linkend="g-file-io-stream-query-info-async"><function>g_file_io_stream_query_info_async()</function></link>.
While the stream is blocked, the stream will set the pending flag
internally, and any other operations on the stream will fail with
<link linkend="G-IO-ERROR-PENDING:CAPS"><literal>G_IO_ERROR_PENDING</literal></link>.</para>
<para>Can fail if the stream was already closed (with <parameter>error</parameter>
 being set to
<link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>), the stream has pending operations (with <parameter>error</parameter>
 being
set to <link linkend="G-IO-ERROR-PENDING:CAPS"><literal>G_IO_ERROR_PENDING</literal></link>), or if querying info is not supported for
the stream's interface (with <parameter>error</parameter>
 being set to <link linkend="G-IO-ERROR-NOT-SUPPORTED:CAPS"><literal>G_IO_ERROR_NOT_SUPPORTED</literal></link>). I
all cases of failure, <link linkend="NULL:CAPS"><literal>NULL</literal></link> will be returned.</para>
<para>If <parameter>cancellable</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link> will be set, and <link linkend="NULL:CAPS"><literal>NULL</literal></link> will
be returned.</para>
<refsect3 id="g-file-io-stream-query-info.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileIOStream"><type>GFileIOStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attributes</para></entry>
<entry role="parameter_description"><para>a file attribute query string.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-io-stream-query-info.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GFileInfo"><type>GFileInfo</type></link> for the <parameter>stream</parameter>
, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="g-file-io-stream-query-info-async" role="function" condition="since:2.22">
<title>g_file_io_stream_query_info_async&#160;()</title>
<indexterm zone="g-file-io-stream-query-info-async" role="2.22"><primary sortas="file_io_stream_query_info_async">g_file_io_stream_query_info_async</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_file_io_stream_query_info_async (<parameter><link linkend="GFileIOStream"><type>GFileIOStream</type></link> *stream</parameter>,
                                   <parameter>const <link linkend="char"><type>char</type></link> *attributes</parameter>,
                                   <parameter><link linkend="int"><type>int</type></link> io_priority</parameter>,
                                   <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                   <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                   <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously queries the <parameter>stream</parameter>
 for a <link linkend="GFileInfo"><type>GFileInfo</type></link>. When completed,
<parameter>callback</parameter>
 will be called with a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> which can be used to
finish the operation with <link linkend="g-file-io-stream-query-info-finish"><function>g_file_io_stream_query_info_finish()</function></link>.</para>
<para>For the synchronous version of this function, see
<link linkend="g-file-io-stream-query-info"><function>g_file_io_stream_query_info()</function></link>.</para>
<refsect3 id="g-file-io-stream-query-info-async.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileIOStream"><type>GFileIOStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>attributes</para></entry>
<entry role="parameter_description"><para>a file attribute query string.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>io_priority</para></entry>
<entry role="parameter_description"><para>the <link linkend="gio-GIOScheduler">I/O priority</link> of the request</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>callback to call when the request is satisfied. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to callback function. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>
<refsect2 id="g-file-io-stream-query-info-finish" role="function" condition="since:2.22">
<title>g_file_io_stream_query_info_finish&#160;()</title>
<indexterm zone="g-file-io-stream-query-info-finish" role="2.22"><primary sortas="file_io_stream_query_info_finish">g_file_io_stream_query_info_finish</primary></indexterm>
<programlisting language="C"><link linkend="GFileInfo"><returnvalue>GFileInfo</returnvalue></link>&#160;*
g_file_io_stream_query_info_finish (<parameter><link linkend="GFileIOStream"><type>GFileIOStream</type></link> *stream</parameter>,
                                    <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *result</parameter>,
                                    <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finalizes the asynchronous query started
by <link linkend="g-file-io-stream-query-info-async"><function>g_file_io_stream_query_info_async()</function></link>.</para>
<refsect3 id="g-file-io-stream-query-info-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GFileIOStream"><type>GFileIOStream</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link>, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-file-io-stream-query-info-finish.returns" role="returns">
<title>Returns</title>
<para>A <link linkend="GFileInfo"><type>GFileInfo</type></link> for the finished query. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.22">2.22</link></para></refsect2>

</refsect1>
<refsect1 id="GFileIOStream.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GFileIOStream-struct" role="struct">
<title>GFileIOStream</title>
<indexterm zone="GFileIOStream-struct"><primary sortas="FileIOStream">GFileIOStream</primary></indexterm>
<programlisting language="C">typedef struct _GFileIOStream GFileIOStream;</programlisting>
<para>A subclass of GIOStream for opened files. This adds
a few file-specific operations and seeking and truncating.</para>
<para><link linkend="GFileIOStream"><type>GFileIOStream</type></link> implements GSeekable.</para>
</refsect2>

</refsect1>
<refsect1 id="GFileIOStream.see-also">
<title>See Also</title>
<para><link linkend="GIOStream"><type>GIOStream</type></link>, <link linkend="GFileInputStream"><type>GFileInputStream</type></link>, <link linkend="GFileOutputStream"><type>GFileOutputStream</type></link>, <link linkend="GSeekable"><type>GSeekable</type></link></para>

</refsect1>

</refentry>
