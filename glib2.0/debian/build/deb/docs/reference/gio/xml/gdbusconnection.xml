<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GDBusConnection">
<refmeta>
<refentrytitle role="top_of_page" id="GDBusConnection.top_of_page">GDBusConnection</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GDBusConnection</refname>
<refpurpose>D-Bus Connections</refpurpose>
</refnamediv>

<refsect1 id="GDBusConnection.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-bus-get">g_bus_get</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-bus-get-finish">g_bus_get_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-bus-get-sync">g_bus_get_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-new">g_dbus_connection_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-new-finish">g_dbus_connection_new_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-new-sync">g_dbus_connection_new_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-new-for-address">g_dbus_connection_new_for_address</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-new-for-address-finish">g_dbus_connection_new_for_address_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-new-for-address-sync">g_dbus_connection_new_for_address_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-start-message-processing">g_dbus_connection_start_message_processing</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-close">g_dbus_connection_close</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-close-finish">g_dbus_connection_close_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-close-sync">g_dbus_connection_close_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-is-closed">g_dbus_connection_is_closed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-flush">g_dbus_connection_flush</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-flush-finish">g_dbus_connection_flush_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-flush-sync">g_dbus_connection_flush_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-get-exit-on-close">g_dbus_connection_get_exit_on_close</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-set-exit-on-close">g_dbus_connection_set_exit_on_close</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GIOStream"><returnvalue>GIOStream</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-get-stream">g_dbus_connection_get_stream</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-get-guid">g_dbus_connection_get_guid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-get-unique-name">g_dbus_connection_get_unique_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusCapabilityFlags"><returnvalue>GDBusCapabilityFlags</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-get-capabilities">g_dbus_connection_get_capabilities</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GCredentials"><returnvalue>GCredentials</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-get-peer-credentials">g_dbus_connection_get_peer_credentials</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-get-last-serial">g_dbus_connection_get_last_serial</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-call">g_dbus_connection_call</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-call-finish">g_dbus_connection_call_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-call-sync">g_dbus_connection_call_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-call-with-unix-fd-list">g_dbus_connection_call_with_unix_fd_list</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-call-with-unix-fd-list-finish">g_dbus_connection_call_with_unix_fd_list_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-call-with-unix-fd-list-sync">g_dbus_connection_call_with_unix_fd_list_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-emit-signal">g_dbus_connection_emit_signal</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GDBusSignalCallback">*GDBusSignalCallback</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-signal-subscribe">g_dbus_connection_signal_subscribe</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-signal-unsubscribe">g_dbus_connection_signal_unsubscribe</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-send-message">g_dbus_connection_send_message</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-send-message-with-reply">g_dbus_connection_send_message_with_reply</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusMessage"><returnvalue>GDBusMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-send-message-with-reply-finish">g_dbus_connection_send_message_with_reply_finish</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusMessage"><returnvalue>GDBusMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-dbus-connection-send-message-with-reply-sync">g_dbus_connection_send_message_with_reply_sync</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusMessage"><returnvalue>GDBusMessage</returnvalue></link>&#160;*
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GDBusMessageFilterFunction">*GDBusMessageFilterFunction</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-add-filter">g_dbus_connection_add_filter</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-remove-filter">g_dbus_connection_remove_filter</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GDBusInterfaceMethodCallFunc">*GDBusInterfaceMethodCallFunc</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GDBusInterfaceGetPropertyFunc">*GDBusInterfaceGetPropertyFunc</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GDBusInterfaceSetPropertyFunc">*GDBusInterfaceSetPropertyFunc</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-register-object">g_dbus_connection_register_object</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-unregister-object">g_dbus_connection_unregister_object</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-register-object-with-closures">g_dbus_connection_register_object_with_closures</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GDBusSubtreeEnumerateFunc">*GDBusSubtreeEnumerateFunc</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GDBusInterfaceInfo"><returnvalue>GDBusInterfaceInfo</returnvalue></link>&#160;**
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GDBusSubtreeIntrospectFunc">*GDBusSubtreeIntrospectFunc</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="GDBusInterfaceVTable"><returnvalue>GDBusInterfaceVTable</returnvalue></link>&#160;*
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="GDBusSubtreeDispatchFunc">*GDBusSubtreeDispatchFunc</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-register-subtree">g_dbus_connection_register_subtree</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-dbus-connection-unregister-subtree">g_dbus_connection_unregister_subtree</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDBusConnection.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusConnection--address">address</link></entry><entry role="property_flags">Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusConnection--authentication-observer">authentication-observer</link></entry><entry role="property_flags">Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="GDBusCapabilityFlags"><type>GDBusCapabilityFlags</type></link></entry><entry role="property_name"><link linkend="GDBusConnection--capabilities">capabilities</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="gboolean"><type>gboolean</type></link></entry><entry role="property_name"><link linkend="GDBusConnection--closed">closed</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="gboolean"><type>gboolean</type></link></entry><entry role="property_name"><link linkend="GDBusConnection--exit-on-close">exit-on-close</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="GDBusConnectionFlags"><type>GDBusConnectionFlags</type></link></entry><entry role="property_name"><link linkend="GDBusConnection--flags">flags</link></entry><entry role="property_flags">Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusConnection--guid">guid</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="GIOStream"><type>GIOStream</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusConnection--stream">stream</link></entry><entry role="property_flags">Read / Write / Construct Only</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="GDBusConnection--unique-name">unique-name</link></entry><entry role="property_flags">Read</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDBusConnection.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signals_return" colwidth="150px"/>
<colspec colname="signals_name" colwidth="300px"/>
<colspec colname="signals_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="GDBusConnection-closed">closed</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDBusConnection.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GBusType">GBusType</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GDBusConnection-struct">GDBusConnection</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDBusConnectionFlags">GDBusConnectionFlags</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDBusCapabilityFlags">GDBusCapabilityFlags</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDBusCallFlags">GDBusCallFlags</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDBusSignalFlags">GDBusSignalFlags</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDBusSendMessageFlags">GDBusSendMessageFlags</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GDBusInterfaceVTable">GDBusInterfaceVTable</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GDBusSubtreeVTable">GDBusSubtreeVTable</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="GDBusSubtreeFlags">GDBusSubtreeFlags</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GDBusConnection.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GEnum">GEnum</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GBusType
    <link linkend="GFlags">GFlags</link>
    <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> GDBusCallFlags
    <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> GDBusCapabilityFlags
    <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> GDBusConnectionFlags
    <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> GDBusSendMessageFlags
    <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> GDBusSignalFlags
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GDBusSubtreeFlags
    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GDBusConnection
</screen>
</refsect1>
<refsect1 id="GDBusConnection.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GDBusConnection implements
 <link linkend="GInitable">GInitable</link> and  <link linkend="GAsyncInitable">GAsyncInitable</link>.</para>

</refsect1>

<refsect1 id="GDBusConnection.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GDBusConnection.description" role="desc">
<title role="desc.title">Description</title>
<para>The <link linkend="GDBusConnection"><type>GDBusConnection</type></link> type is used for D-Bus connections to remote
peers such as a message buses. It is a low-level API that offers a
lot of flexibility. For instance, it lets you establish a connection
over any transport that can by represented as an <link linkend="GIOStream"><type>GIOStream</type></link>.</para>
<para>This class is rarely used directly in D-Bus clients. If you are writing
a D-Bus client, it is often easier to use the <link linkend="g-bus-own-name"><function>g_bus_own_name()</function></link>,
<link linkend="g-bus-watch-name"><function>g_bus_watch_name()</function></link> or <link linkend="g-dbus-proxy-new-for-bus"><function>g_dbus_proxy_new_for_bus()</function></link> APIs.</para>
<para>As an exception to the usual GLib rule that a particular object must not
be used by two threads at the same time, <link linkend="GDBusConnection"><type>GDBusConnection</type></link>'s methods may be
called from any thread. This is so that <link linkend="g-bus-get"><function>g_bus_get()</function></link> and <link linkend="g-bus-get-sync"><function>g_bus_get_sync()</function></link>
can safely return the same <link linkend="GDBusConnection"><type>GDBusConnection</type></link> when called from any thread.</para>
<para>Most of the ways to obtain a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> automatically initialize it
(i.e. connect to D-Bus): for instance, <link linkend="g-dbus-connection-new"><function>g_dbus_connection_new()</function></link> and
<link linkend="g-bus-get"><function>g_bus_get()</function></link>, and the synchronous versions of those methods, give you an
initialized connection. Language bindings for GIO should use
<link linkend="g-initable-new"><function>g_initable_new()</function></link> or <link linkend="g-async-initable-new-async"><function>g_async_initable_new_async()</function></link>, which also initialize the
connection.</para>
<para>If you construct an uninitialized <link linkend="GDBusConnection"><type>GDBusConnection</type></link>, such as via
<link linkend="g-object-new"><function>g_object_new()</function></link>, you must initialize it via <link linkend="g-initable-init"><function>g_initable_init()</function></link> or
<link linkend="g-async-initable-init-async"><function>g_async_initable_init_async()</function></link> before using its methods or properties.
Calling methods or accessing properties on a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> that has not
completed initialization successfully is considered to be invalid, and leads
to undefined behaviour. In particular, if initialization fails with a
<link linkend="GError"><type>GError</type></link>, the only valid thing you can do with that <link linkend="GDBusConnection"><type>GDBusConnection</type></link> is to
free it with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>
<refsect3 id="gdbus-server"><title>An example D-Bus server</title><para>Here is an example for a D-Bus server:
<ulink url="https://git.gnome.org/browse/glib/tree/gio/tests/gdbus-example-server.c">gdbus-example-server.c</ulink></para>
</refsect3>
<refsect3 id="gdbus-subtree-server"><title>An example for exporting a subtree</title><para>Here is an example for exporting a subtree:
<ulink url="https://git.gnome.org/browse/glib/tree/gio/tests/gdbus-example-subtree.c">gdbus-example-subtree.c</ulink></para>
</refsect3>
<refsect3 id="gdbus-unix-fd-client"><title>An example for file descriptor passing</title><para>Here is an example for passing UNIX file descriptors:
<ulink url="https://git.gnome.org/browse/glib/tree/gio/tests/gdbus-example-unix-fd-client.c">gdbus-unix-fd-client.c</ulink></para>
</refsect3>
<refsect3 id="gdbus-export"><title>An example for exporting a GObject</title><para>Here is an example for exporting a <link linkend="GObject"><type>GObject</type></link>:
<ulink url="https://git.gnome.org/browse/glib/tree/gio/tests/gdbus-example-export.c">gdbus-example-export.c</ulink></para>
</refsect3>

</refsect1>
<refsect1 id="GDBusConnection.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-bus-get" role="function" condition="since:2.26">
<title>g_bus_get&#160;()</title>
<indexterm zone="g-bus-get" role="2.26"><primary sortas="bus_get">g_bus_get</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_bus_get (<parameter><link linkend="GBusType"><type>GBusType</type></link> bus_type</parameter>,
           <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
           <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
           <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously connects to the message bus specified by <parameter>bus_type</parameter>
.</para>
<para>When the operation is finished, <parameter>callback</parameter>
 will be invoked. You can
then call <link linkend="g-bus-get-finish"><function>g_bus_get_finish()</function></link> to get the result of the operation.</para>
<para>This is a asynchronous failable function. See <link linkend="g-bus-get-sync"><function>g_bus_get_sync()</function></link> for
the synchronous version.</para>
<refsect3 id="g-bus-get.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bus_type</para></entry>
<entry role="parameter_description"><para>a <link linkend="GBusType"><type>GBusType</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is satisfied</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-bus-get-finish" role="function" condition="since:2.26">
<title>g_bus_get_finish&#160;()</title>
<indexterm zone="g-bus-get-finish" role="2.26"><primary sortas="bus_get_finish">g_bus_get_finish</primary></indexterm>
<programlisting language="C"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
g_bus_get_finish (<parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *res</parameter>,
                  <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an operation started with <link linkend="g-bus-get"><function>g_bus_get()</function></link>.</para>
<para>The returned object is a singleton, that is, shared with other
callers of <link linkend="g-bus-get"><function>g_bus_get()</function></link> and <link linkend="g-bus-get-sync"><function>g_bus_get_sync()</function></link> for <parameter>bus_type</parameter>
. In the
event that you need a private message bus connection, use
<link linkend="g-dbus-address-get-for-bus-sync"><function>g_dbus_address_get_for_bus_sync()</function></link> and
<link linkend="g-dbus-connection-new-for-address"><function>g_dbus_connection_new_for_address()</function></link>.</para>
<para>Note that the returned <link linkend="GDBusConnection"><type>GDBusConnection</type></link> object will (usually) have
the <link linkend="GDBusConnection--exit-on-close"><type>“exit-on-close”</type></link> property set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<refsect3 id="g-bus-get-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>res</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> obtained from the <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> passed
to <link linkend="g-bus-get"><function>g_bus_get()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-bus-get-finish.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set.
Free with <link linkend="g-object-unref"><function>g_object_unref()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-bus-get-sync" role="function" condition="since:2.26">
<title>g_bus_get_sync&#160;()</title>
<indexterm zone="g-bus-get-sync" role="2.26"><primary sortas="bus_get_sync">g_bus_get_sync</primary></indexterm>
<programlisting language="C"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
g_bus_get_sync (<parameter><link linkend="GBusType"><type>GBusType</type></link> bus_type</parameter>,
                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Synchronously connects to the message bus specified by <parameter>bus_type</parameter>
.
Note that the returned object may shared with other callers,
e.g. if two separate parts of a process calls this function with
the same <parameter>bus_type</parameter>
, they will share the same object.</para>
<para>This is a synchronous failable function. See <link linkend="g-bus-get"><function>g_bus_get()</function></link> and
<link linkend="g-bus-get-finish"><function>g_bus_get_finish()</function></link> for the asynchronous version.</para>
<para>The returned object is a singleton, that is, shared with other
callers of <link linkend="g-bus-get"><function>g_bus_get()</function></link> and <link linkend="g-bus-get-sync"><function>g_bus_get_sync()</function></link> for <parameter>bus_type</parameter>
. In the
event that you need a private message bus connection, use
<link linkend="g-dbus-address-get-for-bus-sync"><function>g_dbus_address_get_for_bus_sync()</function></link> and
<link linkend="g-dbus-connection-new-for-address"><function>g_dbus_connection_new_for_address()</function></link>.</para>
<para>Note that the returned <link linkend="GDBusConnection"><type>GDBusConnection</type></link> object will (usually) have
the <link linkend="GDBusConnection--exit-on-close"><type>“exit-on-close”</type></link> property set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<refsect3 id="g-bus-get-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bus_type</para></entry>
<entry role="parameter_description"><para>a <link linkend="GBusType"><type>GBusType</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-bus-get-sync.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set.
Free with <link linkend="g-object-unref"><function>g_object_unref()</function></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-new" role="function" condition="since:2.26">
<title>g_dbus_connection_new&#160;()</title>
<indexterm zone="g-dbus-connection-new" role="2.26"><primary sortas="dbus_connection_new">g_dbus_connection_new</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_new (<parameter><link linkend="GIOStream"><type>GIOStream</type></link> *stream</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *guid</parameter>,
                       <parameter><link linkend="GDBusConnectionFlags"><type>GDBusConnectionFlags</type></link> flags</parameter>,
                       <parameter><link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> *observer</parameter>,
                       <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                       <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                       <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously sets up a D-Bus connection for exchanging D-Bus messages
with the end represented by <parameter>stream</parameter>
.</para>
<para>If <parameter>stream</parameter>
 is a <link linkend="GSocketConnection"><type>GSocketConnection</type></link>, then the corresponding <link linkend="GSocket"><type>GSocket</type></link>
will be put into non-blocking mode.</para>
<para>The D-Bus connection will interact with <parameter>stream</parameter>
 from a worker thread.
As a result, the caller should not interact with <parameter>stream</parameter>
 after this
method has been called, except by calling <link linkend="g-object-unref"><function>g_object_unref()</function></link> on it.</para>
<para>If <parameter>observer</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link> it may be used to control the
authentication process.</para>
<para>When the operation is finished, <parameter>callback</parameter>
 will be invoked. You can
then call <link linkend="g-dbus-connection-new-finish"><function>g_dbus_connection_new_finish()</function></link> to get the result of the
operation.</para>
<para>This is a asynchronous failable constructor. See
<link linkend="g-dbus-connection-new-sync"><function>g_dbus_connection_new_sync()</function></link> for the synchronous
version.</para>
<refsect3 id="g-dbus-connection-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GIOStream"><type>GIOStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>guid</para></entry>
<entry role="parameter_description"><para>the GUID to use if a authenticating as a server or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags describing how to make the connection</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>observer</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is satisfied</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-new-finish" role="function" condition="since:2.26">
<title>g_dbus_connection_new_finish&#160;()</title>
<indexterm zone="g-dbus-connection-new-finish" role="2.26"><primary sortas="dbus_connection_new_finish">g_dbus_connection_new_finish</primary></indexterm>
<programlisting language="C"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
g_dbus_connection_new_finish (<parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *res</parameter>,
                              <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an operation started with <link linkend="g-dbus-connection-new"><function>g_dbus_connection_new()</function></link>.</para>
<refsect3 id="g-dbus-connection-new-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>res</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> obtained from the <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link>
passed to <link linkend="g-dbus-connection-new"><function>g_dbus_connection_new()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-new-finish.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Free
with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-new-sync" role="function" condition="since:2.26">
<title>g_dbus_connection_new_sync&#160;()</title>
<indexterm zone="g-dbus-connection-new-sync" role="2.26"><primary sortas="dbus_connection_new_sync">g_dbus_connection_new_sync</primary></indexterm>
<programlisting language="C"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
g_dbus_connection_new_sync (<parameter><link linkend="GIOStream"><type>GIOStream</type></link> *stream</parameter>,
                            <parameter>const <link linkend="gchar"><type>gchar</type></link> *guid</parameter>,
                            <parameter><link linkend="GDBusConnectionFlags"><type>GDBusConnectionFlags</type></link> flags</parameter>,
                            <parameter><link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> *observer</parameter>,
                            <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                            <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Synchronously sets up a D-Bus connection for exchanging D-Bus messages
with the end represented by <parameter>stream</parameter>
.</para>
<para>If <parameter>stream</parameter>
 is a <link linkend="GSocketConnection"><type>GSocketConnection</type></link>, then the corresponding <link linkend="GSocket"><type>GSocket</type></link>
will be put into non-blocking mode.</para>
<para>The D-Bus connection will interact with <parameter>stream</parameter>
 from a worker thread.
As a result, the caller should not interact with <parameter>stream</parameter>
 after this
method has been called, except by calling <link linkend="g-object-unref"><function>g_object_unref()</function></link> on it.</para>
<para>If <parameter>observer</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link> it may be used to control the
authentication process.</para>
<para>This is a synchronous failable constructor. See
<link linkend="g-dbus-connection-new"><function>g_dbus_connection_new()</function></link> for the asynchronous version.</para>
<refsect3 id="g-dbus-connection-new-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="GIOStream"><type>GIOStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>guid</para></entry>
<entry role="parameter_description"><para>the GUID to use if a authenticating as a server or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags describing how to make the connection</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>observer</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-new-sync.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Free with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-new-for-address" role="function" condition="since:2.26">
<title>g_dbus_connection_new_for_address&#160;()</title>
<indexterm zone="g-dbus-connection-new-for-address" role="2.26"><primary sortas="dbus_connection_new_for_address">g_dbus_connection_new_for_address</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_new_for_address (<parameter>const <link linkend="gchar"><type>gchar</type></link> *address</parameter>,
                                   <parameter><link linkend="GDBusConnectionFlags"><type>GDBusConnectionFlags</type></link> flags</parameter>,
                                   <parameter><link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> *observer</parameter>,
                                   <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                   <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                   <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously connects and sets up a D-Bus client connection for
exchanging D-Bus messages with an endpoint specified by <parameter>address</parameter>

which must be in the
<ulink url="https://dbus.freedesktop.org/doc/dbus-specification.html#addresses">D-Bus address format</ulink>.</para>
<para>This constructor can only be used to initiate client-side
connections - use <link linkend="g-dbus-connection-new"><function>g_dbus_connection_new()</function></link> if you need to act as the
server. In particular, <parameter>flags</parameter>
 cannot contain the
<link linkend="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-SERVER:CAPS"><literal>G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER</literal></link> or
<link linkend="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-ALLOW-ANONYMOUS:CAPS"><literal>G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS</literal></link> flags.</para>
<para>When the operation is finished, <parameter>callback</parameter>
 will be invoked. You can
then call <link linkend="g-dbus-connection-new-finish"><function>g_dbus_connection_new_finish()</function></link> to get the result of the
operation.</para>
<para>If <parameter>observer</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link> it may be used to control the
authentication process.</para>
<para>This is a asynchronous failable constructor. See
<link linkend="g-dbus-connection-new-for-address-sync"><function>g_dbus_connection_new_for_address_sync()</function></link> for the synchronous
version.</para>
<refsect3 id="g-dbus-connection-new-for-address.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>address</para></entry>
<entry role="parameter_description"><para>a D-Bus address</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags describing how to make the connection</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>observer</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is satisfied</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-new-for-address-finish" role="function" condition="since:2.26">
<title>g_dbus_connection_new_for_address_finish&#160;()</title>
<indexterm zone="g-dbus-connection-new-for-address-finish" role="2.26"><primary sortas="dbus_connection_new_for_address_finish">g_dbus_connection_new_for_address_finish</primary></indexterm>
<programlisting language="C"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
g_dbus_connection_new_for_address_finish
                               (<parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *res</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an operation started with <link linkend="g-dbus-connection-new-for-address"><function>g_dbus_connection_new_for_address()</function></link>.</para>
<refsect3 id="g-dbus-connection-new-for-address-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>res</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> obtained from the <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> passed
to <link linkend="g-dbus-connection-new"><function>g_dbus_connection_new()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-new-for-address-finish.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Free with
<link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-new-for-address-sync" role="function" condition="since:2.26">
<title>g_dbus_connection_new_for_address_sync&#160;()</title>
<indexterm zone="g-dbus-connection-new-for-address-sync" role="2.26"><primary sortas="dbus_connection_new_for_address_sync">g_dbus_connection_new_for_address_sync</primary></indexterm>
<programlisting language="C"><link linkend="GDBusConnection"><returnvalue>GDBusConnection</returnvalue></link>&#160;*
g_dbus_connection_new_for_address_sync
                               (<parameter>const <link linkend="gchar"><type>gchar</type></link> *address</parameter>,
                                <parameter><link linkend="GDBusConnectionFlags"><type>GDBusConnectionFlags</type></link> flags</parameter>,
                                <parameter><link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> *observer</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Synchronously connects and sets up a D-Bus client connection for
exchanging D-Bus messages with an endpoint specified by <parameter>address</parameter>

which must be in the
<ulink url="https://dbus.freedesktop.org/doc/dbus-specification.html#addresses">D-Bus address format</ulink>.</para>
<para>This constructor can only be used to initiate client-side
connections - use <link linkend="g-dbus-connection-new-sync"><function>g_dbus_connection_new_sync()</function></link> if you need to act
as the server. In particular, <parameter>flags</parameter>
 cannot contain the
<link linkend="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-SERVER:CAPS"><literal>G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER</literal></link> or
<link linkend="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-ALLOW-ANONYMOUS:CAPS"><literal>G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS</literal></link> flags.</para>
<para>This is a synchronous failable constructor. See
<link linkend="g-dbus-connection-new-for-address"><function>g_dbus_connection_new_for_address()</function></link> for the asynchronous version.</para>
<para>If <parameter>observer</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link> it may be used to control the
authentication process.</para>
<refsect3 id="g-dbus-connection-new-for-address-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>address</para></entry>
<entry role="parameter_description"><para>a D-Bus address</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags describing how to make the connection</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>observer</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-new-for-address-sync.returns" role="returns">
<title>Returns</title>
<para> a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Free with
<link linkend="g-object-unref"><function>g_object_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-start-message-processing" role="function" condition="since:2.26">
<title>g_dbus_connection_start_message_processing&#160;()</title>
<indexterm zone="g-dbus-connection-start-message-processing" role="2.26"><primary sortas="dbus_connection_start_message_processing">g_dbus_connection_start_message_processing</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_start_message_processing
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>If <parameter>connection</parameter>
 was created with
<link linkend="G-DBUS-CONNECTION-FLAGS-DELAY-MESSAGE-PROCESSING:CAPS"><literal>G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING</literal></link>, this method
starts processing messages. Does nothing on if <parameter>connection</parameter>
 wasn't
created with this flag or if the method has already been called.</para>
<refsect3 id="g-dbus-connection-start-message-processing.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-close" role="function" condition="since:2.26">
<title>g_dbus_connection_close&#160;()</title>
<indexterm zone="g-dbus-connection-close" role="2.26"><primary sortas="dbus_connection_close">g_dbus_connection_close</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_close (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                         <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                         <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                         <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Closes <parameter>connection</parameter>
. Note that this never causes the process to
exit (this might only happen if the other end of a shared message
bus connection disconnects, see <link linkend="GDBusConnection--exit-on-close"><type>“exit-on-close”</type></link>).</para>
<para>Once the connection is closed, operations such as sending a message
will return with the error <link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>. Closing a connection
will not automatically flush the connection so queued messages may
be lost. Use <link linkend="g-dbus-connection-flush"><function>g_dbus_connection_flush()</function></link> if you need such guarantees.</para>
<para>If <parameter>connection</parameter>
 is already closed, this method fails with
<link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>.</para>
<para>When <parameter>connection</parameter>
 has been closed, the <link linkend="GDBusConnection-closed"><type>“closed”</type></link>
signal is emitted in the
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread that <parameter>connection</parameter>
 was constructed in.</para>
<para>This is an asynchronous method. When the operation is finished,
<parameter>callback</parameter>
 will be invoked in the 
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread you are calling this method from. You can
then call <link linkend="g-dbus-connection-close-finish"><function>g_dbus_connection_close_finish()</function></link> to get the result of the
operation. See <link linkend="g-dbus-connection-close-sync"><function>g_dbus_connection_close_sync()</function></link> for the synchronous
version.</para>
<refsect3 id="g-dbus-connection-close.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is
satisfied or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if you don't care about the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The data to pass to <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-close-finish" role="function" condition="since:2.26">
<title>g_dbus_connection_close_finish&#160;()</title>
<indexterm zone="g-dbus-connection-close-finish" role="2.26"><primary sortas="dbus_connection_close_finish">g_dbus_connection_close_finish</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_close_finish (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *res</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an operation started with <link linkend="g-dbus-connection-close"><function>g_dbus_connection_close()</function></link>.</para>
<refsect3 id="g-dbus-connection-close-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>res</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> obtained from the <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> passed
to <link linkend="g-dbus-connection-close"><function>g_dbus_connection_close()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-close-finish.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation succeeded, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if <parameter>error</parameter>
is set</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-close-sync" role="function" condition="since:2.26">
<title>g_dbus_connection_close_sync&#160;()</title>
<indexterm zone="g-dbus-connection-close-sync" role="2.26"><primary sortas="dbus_connection_close_sync">g_dbus_connection_close_sync</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_close_sync (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                              <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                              <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Synchronously closes <parameter>connection</parameter>
. The calling thread is blocked
until this is done. See <link linkend="g-dbus-connection-close"><function>g_dbus_connection_close()</function></link> for the
asynchronous version of this method and more details about what it
does.</para>
<refsect3 id="g-dbus-connection-close-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-close-sync.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation succeeded, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if <parameter>error</parameter>
is set</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-is-closed" role="function" condition="since:2.26">
<title>g_dbus_connection_is_closed&#160;()</title>
<indexterm zone="g-dbus-connection-is-closed" role="2.26"><primary sortas="dbus_connection_is_closed">g_dbus_connection_is_closed</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_is_closed (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>Gets whether <parameter>connection</parameter>
 is closed.</para>
<refsect3 id="g-dbus-connection-is-closed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-is-closed.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the connection is closed, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-flush" role="function" condition="since:2.26">
<title>g_dbus_connection_flush&#160;()</title>
<indexterm zone="g-dbus-connection-flush" role="2.26"><primary sortas="dbus_connection_flush">g_dbus_connection_flush</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_flush (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                         <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                         <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                         <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously flushes <parameter>connection</parameter>
, that is, writes all queued
outgoing message to the transport and then flushes the transport
(using <link linkend="g-output-stream-flush-async"><function>g_output_stream_flush_async()</function></link>). This is useful in programs
that wants to emit a D-Bus signal and then exit immediately. Without
flushing the connection, there is no guaranteed that the message has
been sent to the networking buffers in the OS kernel.</para>
<para>This is an asynchronous method. When the operation is finished,
<parameter>callback</parameter>
 will be invoked in the
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread you are calling this method from. You can
then call <link linkend="g-dbus-connection-flush-finish"><function>g_dbus_connection_flush_finish()</function></link> to get the result of the
operation. See <link linkend="g-dbus-connection-flush-sync"><function>g_dbus_connection_flush_sync()</function></link> for the synchronous
version.</para>
<refsect3 id="g-dbus-connection-flush.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the
request is satisfied or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if you don't care about the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The data to pass to <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-flush-finish" role="function" condition="since:2.26">
<title>g_dbus_connection_flush_finish&#160;()</title>
<indexterm zone="g-dbus-connection-flush-finish" role="2.26"><primary sortas="dbus_connection_flush_finish">g_dbus_connection_flush_finish</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_flush_finish (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *res</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an operation started with <link linkend="g-dbus-connection-flush"><function>g_dbus_connection_flush()</function></link>.</para>
<refsect3 id="g-dbus-connection-flush-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>res</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> obtained from the <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> passed
to <link linkend="g-dbus-connection-flush"><function>g_dbus_connection_flush()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-flush-finish.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation succeeded, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if <parameter>error</parameter>
is set</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-flush-sync" role="function" condition="since:2.26">
<title>g_dbus_connection_flush_sync&#160;()</title>
<indexterm zone="g-dbus-connection-flush-sync" role="2.26"><primary sortas="dbus_connection_flush_sync">g_dbus_connection_flush_sync</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_flush_sync (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                              <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                              <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Synchronously flushes <parameter>connection</parameter>
. The calling thread is blocked
until this is done. See <link linkend="g-dbus-connection-flush"><function>g_dbus_connection_flush()</function></link> for the
asynchronous version of this method and more details about what it
does.</para>
<refsect3 id="g-dbus-connection-flush-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-flush-sync.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation succeeded, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if <parameter>error</parameter>
is set</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-get-exit-on-close" role="function" condition="since:2.26">
<title>g_dbus_connection_get_exit_on_close&#160;()</title>
<indexterm zone="g-dbus-connection-get-exit-on-close" role="2.26"><primary sortas="dbus_connection_get_exit_on_close">g_dbus_connection_get_exit_on_close</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_get_exit_on_close (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>Gets whether the process is terminated when <parameter>connection</parameter>
 is
closed by the remote peer. See
<link linkend="GDBusConnection--exit-on-close"><type>“exit-on-close”</type></link> for more details.</para>
<refsect3 id="g-dbus-connection-get-exit-on-close.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-get-exit-on-close.returns" role="returns">
<title>Returns</title>
<para> whether the process is terminated when <parameter>connection</parameter>
is
closed by the remote peer</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-set-exit-on-close" role="function" condition="since:2.26">
<title>g_dbus_connection_set_exit_on_close&#160;()</title>
<indexterm zone="g-dbus-connection-set-exit-on-close" role="2.26"><primary sortas="dbus_connection_set_exit_on_close">g_dbus_connection_set_exit_on_close</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_set_exit_on_close (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                     <parameter><link linkend="gboolean"><type>gboolean</type></link> exit_on_close</parameter>);</programlisting>
<para>Sets whether the process should be terminated when <parameter>connection</parameter>
 is
closed by the remote peer. See <link linkend="GDBusConnection--exit-on-close"><type>“exit-on-close”</type></link> for
more details.</para>
<para>Note that this function should be used with care. Most modern UNIX
desktops tie the notion of a user session the session bus, and expect
all of a users applications to quit when their bus connection goes away.
If you are setting <parameter>exit_on_close</parameter>
 to <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> for the shared session
bus connection, you should make sure that your application exits
when the user session ends.</para>
<refsect3 id="g-dbus-connection-set-exit-on-close.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>exit_on_close</para></entry>
<entry role="parameter_description"><para>whether the process should be terminated
when <parameter>connection</parameter>
is closed by the remote peer</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-get-stream" role="function" condition="since:2.26">
<title>g_dbus_connection_get_stream&#160;()</title>
<indexterm zone="g-dbus-connection-get-stream" role="2.26"><primary sortas="dbus_connection_get_stream">g_dbus_connection_get_stream</primary></indexterm>
<programlisting language="C"><link linkend="GIOStream"><returnvalue>GIOStream</returnvalue></link>&#160;*
g_dbus_connection_get_stream (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>Gets the underlying stream used for IO.</para>
<para>While the <link linkend="GDBusConnection"><type>GDBusConnection</type></link> is active, it will interact with this
stream from a worker thread, so it is not safe to interact with
the stream directly.</para>
<refsect3 id="g-dbus-connection-get-stream.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-get-stream.returns" role="returns">
<title>Returns</title>
<para>the stream used for IO. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-get-guid" role="function" condition="since:2.26">
<title>g_dbus_connection_get_guid&#160;()</title>
<indexterm zone="g-dbus-connection-get-guid" role="2.26"><primary sortas="dbus_connection_get_guid">g_dbus_connection_get_guid</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
g_dbus_connection_get_guid (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>The GUID of the peer performing the role of server when
authenticating. See <link linkend="GDBusConnection--guid"><type>“guid”</type></link> for more details.</para>
<refsect3 id="g-dbus-connection-get-guid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-get-guid.returns" role="returns">
<title>Returns</title>
<para> The GUID. Do not free this string, it is owned by
<parameter>connection</parameter>
.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-get-unique-name" role="function" condition="since:2.26">
<title>g_dbus_connection_get_unique_name&#160;()</title>
<indexterm zone="g-dbus-connection-get-unique-name" role="2.26"><primary sortas="dbus_connection_get_unique_name">g_dbus_connection_get_unique_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
g_dbus_connection_get_unique_name (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>Gets the unique name of <parameter>connection</parameter>
 as assigned by the message
bus. This can also be used to figure out if <parameter>connection</parameter>
 is a
message bus connection.</para>
<refsect3 id="g-dbus-connection-get-unique-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-get-unique-name.returns" role="returns">
<title>Returns</title>
<para> the unique name or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>connection</parameter>
is not a message
bus connection. Do not free this string, it is owned by
<parameter>connection</parameter>
.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-get-capabilities" role="function" condition="since:2.26">
<title>g_dbus_connection_get_capabilities&#160;()</title>
<indexterm zone="g-dbus-connection-get-capabilities" role="2.26"><primary sortas="dbus_connection_get_capabilities">g_dbus_connection_get_capabilities</primary></indexterm>
<programlisting language="C"><link linkend="GDBusCapabilityFlags"><returnvalue>GDBusCapabilityFlags</returnvalue></link>
g_dbus_connection_get_capabilities (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>Gets the capabilities negotiated with the remote peer</para>
<refsect3 id="g-dbus-connection-get-capabilities.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-get-capabilities.returns" role="returns">
<title>Returns</title>
<para> zero or more flags from the <link linkend="GDBusCapabilityFlags"><type>GDBusCapabilityFlags</type></link> enumeration</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-get-peer-credentials" role="function" condition="since:2.26">
<title>g_dbus_connection_get_peer_credentials&#160;()</title>
<indexterm zone="g-dbus-connection-get-peer-credentials" role="2.26"><primary sortas="dbus_connection_get_peer_credentials">g_dbus_connection_get_peer_credentials</primary></indexterm>
<programlisting language="C"><link linkend="GCredentials"><returnvalue>GCredentials</returnvalue></link>&#160;*
g_dbus_connection_get_peer_credentials
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>Gets the credentials of the authenticated peer. This will always
return <link linkend="NULL:CAPS"><literal>NULL</literal></link> unless <parameter>connection</parameter>
 acted as a server
(e.g. <link linkend="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-SERVER:CAPS"><literal>G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER</literal></link> was passed)
when set up and the client passed credentials as part of the
authentication process.</para>
<para>In a message bus setup, the message bus is always the server and
each application is a client. So this method will always return
<link linkend="NULL:CAPS"><literal>NULL</literal></link> for message bus clients.</para>
<refsect3 id="g-dbus-connection-get-peer-credentials.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-get-peer-credentials.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="GCredentials"><type>GCredentials</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not
available. Do not free this object, it is owned by <parameter>connection</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-get-last-serial" role="function" condition="since:2.34">
<title>g_dbus_connection_get_last_serial&#160;()</title>
<indexterm zone="g-dbus-connection-get-last-serial" role="2.34"><primary sortas="dbus_connection_get_last_serial">g_dbus_connection_get_last_serial</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
g_dbus_connection_get_last_serial (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>);</programlisting>
<para>Retrieves the last serial number assigned to a <link linkend="GDBusMessage"><type>GDBusMessage</type></link> on
the current thread. This includes messages sent via both low-level
API such as <link linkend="g-dbus-connection-send-message"><function>g_dbus_connection_send_message()</function></link> as well as
high-level API such as <link linkend="g-dbus-connection-emit-signal"><function>g_dbus_connection_emit_signal()</function></link>,
<link linkend="g-dbus-connection-call"><function>g_dbus_connection_call()</function></link> or <link linkend="g-dbus-proxy-call"><function>g_dbus_proxy_call()</function></link>.</para>
<refsect3 id="g-dbus-connection-get-last-serial.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-get-last-serial.returns" role="returns">
<title>Returns</title>
<para> the last used serial or zero when no message has been sent
within the current thread</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.34">2.34</link></para></refsect2>
<refsect2 id="g-dbus-connection-call" role="function" condition="since:2.26">
<title>g_dbus_connection_call&#160;()</title>
<indexterm zone="g-dbus-connection-call" role="2.26"><primary sortas="dbus_connection_call">g_dbus_connection_call</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_call (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *bus_name</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *method_name</parameter>,
                        <parameter><link linkend="GVariant"><type>GVariant</type></link> *parameters</parameter>,
                        <parameter>const <link linkend="GVariantType"><type>GVariantType</type></link> *reply_type</parameter>,
                        <parameter><link linkend="GDBusCallFlags"><type>GDBusCallFlags</type></link> flags</parameter>,
                        <parameter><link linkend="gint"><type>gint</type></link> timeout_msec</parameter>,
                        <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                        <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                        <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously invokes the <parameter>method_name</parameter>
 method on the
<parameter>interface_name</parameter>
 D-Bus interface on the remote object at
<parameter>object_path</parameter>
 owned by <parameter>bus_name</parameter>
.</para>
<para>If <parameter>connection</parameter>
 is closed then the operation will fail with
<link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>. If <parameter>cancellable</parameter>
 is canceled, the operation will
fail with <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link>. If <parameter>parameters</parameter>
 contains a value
not compatible with the D-Bus protocol, the operation fails with
<link linkend="G-IO-ERROR-INVALID-ARGUMENT:CAPS"><literal>G_IO_ERROR_INVALID_ARGUMENT</literal></link>.</para>
<para>If <parameter>reply_type</parameter>
 is non-<link linkend="NULL:CAPS"><literal>NULL</literal></link> then the reply will be checked for having this type and an
error will be raised if it does not match.  Said another way, if you give a <parameter>reply_type</parameter>

then any non-<link linkend="NULL:CAPS"><literal>NULL</literal></link> return value will be of this type. Unless it’s
<link linkend="G-VARIANT-TYPE-UNIT:CAPS"><literal>G_VARIANT_TYPE_UNIT</literal></link>, the <parameter>reply_type</parameter>
 will be a tuple containing one or more
values.</para>
<para>If the <parameter>parameters</parameter>
 <link linkend="GVariant"><type>GVariant</type></link> is floating, it is consumed. This allows
convenient 'inline' use of <link linkend="g-variant-new"><function>g_variant_new()</function></link>, e.g.:</para>
<informalexample><programlisting role="example"><![CDATA[
 g_dbus_connection_call (connection,
                         "org.freedesktop.StringThings",
                         "/org/freedesktop/StringThings",
                         "org.freedesktop.StringThings",
                         "TwoStrings",
                         g_variant_new ("(ss)",
                                        "Thing One",
                                        "Thing Two"),
                         NULL,
                         G_DBUS_CALL_FLAGS_NONE,
                         -1,
                         NULL,
                         (GAsyncReadyCallback) two_strings_done,
                         NULL);
]]></programlisting></informalexample>
<para></para>
<para>This is an asynchronous method. When the operation is finished,
<parameter>callback</parameter>
 will be invoked in the
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread you are calling this method from. You can then call
<link linkend="g-dbus-connection-call-finish"><function>g_dbus_connection_call_finish()</function></link> to get the result of the operation.
See <link linkend="g-dbus-connection-call-sync"><function>g_dbus_connection_call_sync()</function></link> for the synchronous version of this
function.</para>
<para>If <parameter>callback</parameter>
 is <link linkend="NULL:CAPS"><literal>NULL</literal></link> then the D-Bus method call message will be sent with
the <link linkend="G-DBUS-MESSAGE-FLAGS-NO-REPLY-EXPECTED:CAPS"><literal>G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED</literal></link> flag set.</para>
<refsect3 id="g-dbus-connection-call.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>bus_name</para></entry>
<entry role="parameter_description"><para>a unique or well-known bus name or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if
<parameter>connection</parameter>
is not a message bus connection. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>path of remote object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>D-Bus interface to invoke method on</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>method_name</para></entry>
<entry role="parameter_description"><para>the name of the method to invoke</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameters</para></entry>
<entry role="parameter_description"><para>a <link linkend="GVariant"><type>GVariant</type></link> tuple with parameters for the method
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not passing parameters. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>reply_type</para></entry>
<entry role="parameter_description"><para>the expected type of the reply (which will be a
tuple), or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags from the <link linkend="GDBusCallFlags"><type>GDBusCallFlags</type></link> enumeration</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timeout_msec</para></entry>
<entry role="parameter_description"><para>the timeout in milliseconds, -1 to use the default
timeout or <link linkend="G-MAXINT:CAPS"><literal>G_MAXINT</literal></link> for no timeout</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request
is satisfied or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if you don't care about the result of the
method invocation. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>the data to pass to <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-call-finish" role="function" condition="since:2.26">
<title>g_dbus_connection_call_finish&#160;()</title>
<indexterm zone="g-dbus-connection-call-finish" role="2.26"><primary sortas="dbus_connection_call_finish">g_dbus_connection_call_finish</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
g_dbus_connection_call_finish (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                               <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *res</parameter>,
                               <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an operation started with <link linkend="g-dbus-connection-call"><function>g_dbus_connection_call()</function></link>.</para>
<refsect3 id="g-dbus-connection-call-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>res</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> obtained from the <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> passed to <link linkend="g-dbus-connection-call"><function>g_dbus_connection_call()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-call-finish.returns" role="returns">
<title>Returns</title>
<para> <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Otherwise a <link linkend="GVariant"><type>GVariant</type></link> tuple with
return values. Free with <link linkend="g-variant-unref"><function>g_variant_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-call-sync" role="function" condition="since:2.26">
<title>g_dbus_connection_call_sync&#160;()</title>
<indexterm zone="g-dbus-connection-call-sync" role="2.26"><primary sortas="dbus_connection_call_sync">g_dbus_connection_call_sync</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
g_dbus_connection_call_sync (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *bus_name</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *method_name</parameter>,
                             <parameter><link linkend="GVariant"><type>GVariant</type></link> *parameters</parameter>,
                             <parameter>const <link linkend="GVariantType"><type>GVariantType</type></link> *reply_type</parameter>,
                             <parameter><link linkend="GDBusCallFlags"><type>GDBusCallFlags</type></link> flags</parameter>,
                             <parameter><link linkend="gint"><type>gint</type></link> timeout_msec</parameter>,
                             <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                             <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Synchronously invokes the <parameter>method_name</parameter>
 method on the
<parameter>interface_name</parameter>
 D-Bus interface on the remote object at
<parameter>object_path</parameter>
 owned by <parameter>bus_name</parameter>
.</para>
<para>If <parameter>connection</parameter>
 is closed then the operation will fail with
<link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>. If <parameter>cancellable</parameter>
 is canceled, the
operation will fail with <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link>. If <parameter>parameters</parameter>

contains a value not compatible with the D-Bus protocol, the operation
fails with <link linkend="G-IO-ERROR-INVALID-ARGUMENT:CAPS"><literal>G_IO_ERROR_INVALID_ARGUMENT</literal></link>.</para>
<para>If <parameter>reply_type</parameter>
 is non-<link linkend="NULL:CAPS"><literal>NULL</literal></link> then the reply will be checked for having
this type and an error will be raised if it does not match.  Said
another way, if you give a <parameter>reply_type</parameter>
 then any non-<link linkend="NULL:CAPS"><literal>NULL</literal></link> return
value will be of this type.</para>
<para>If the <parameter>parameters</parameter>
 <link linkend="GVariant"><type>GVariant</type></link> is floating, it is consumed.
This allows convenient 'inline' use of <link linkend="g-variant-new"><function>g_variant_new()</function></link>, e.g.:</para>
<informalexample><programlisting role="example"><![CDATA[
 g_dbus_connection_call_sync (connection,
                              "org.freedesktop.StringThings",
                              "/org/freedesktop/StringThings",
                              "org.freedesktop.StringThings",
                              "TwoStrings",
                              g_variant_new ("(ss)",
                                             "Thing One",
                                             "Thing Two"),
                              NULL,
                              G_DBUS_CALL_FLAGS_NONE,
                              -1,
                              NULL,
                              &error);
]]></programlisting></informalexample>
<para></para>
<para>The calling thread is blocked until a reply is received. See
<link linkend="g-dbus-connection-call"><function>g_dbus_connection_call()</function></link> for the asynchronous version of
this method.</para>
<refsect3 id="g-dbus-connection-call-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>bus_name</para></entry>
<entry role="parameter_description"><para>a unique or well-known bus name or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if
<parameter>connection</parameter>
is not a message bus connection. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>path of remote object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>D-Bus interface to invoke method on</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>method_name</para></entry>
<entry role="parameter_description"><para>the name of the method to invoke</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameters</para></entry>
<entry role="parameter_description"><para>a <link linkend="GVariant"><type>GVariant</type></link> tuple with parameters for the method
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not passing parameters. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>reply_type</para></entry>
<entry role="parameter_description"><para>the expected type of the reply, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags from the <link linkend="GDBusCallFlags"><type>GDBusCallFlags</type></link> enumeration</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timeout_msec</para></entry>
<entry role="parameter_description"><para>the timeout in milliseconds, -1 to use the default
timeout or <link linkend="G-MAXINT:CAPS"><literal>G_MAXINT</literal></link> for no timeout</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-call-sync.returns" role="returns">
<title>Returns</title>
<para> <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Otherwise a <link linkend="GVariant"><type>GVariant</type></link> tuple with
return values. Free with <link linkend="g-variant-unref"><function>g_variant_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-call-with-unix-fd-list" role="function" condition="since:2.30">
<title>g_dbus_connection_call_with_unix_fd_list&#160;()</title>
<indexterm zone="g-dbus-connection-call-with-unix-fd-list" role="2.30"><primary sortas="dbus_connection_call_with_unix_fd_list">g_dbus_connection_call_with_unix_fd_list</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_call_with_unix_fd_list
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *bus_name</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *method_name</parameter>,
                                <parameter><link linkend="GVariant"><type>GVariant</type></link> *parameters</parameter>,
                                <parameter>const <link linkend="GVariantType"><type>GVariantType</type></link> *reply_type</parameter>,
                                <parameter><link linkend="GDBusCallFlags"><type>GDBusCallFlags</type></link> flags</parameter>,
                                <parameter><link linkend="gint"><type>gint</type></link> timeout_msec</parameter>,
                                <parameter><link linkend="GUnixFDList"><type>GUnixFDList</type></link> *fd_list</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Like <link linkend="g-dbus-connection-call"><function>g_dbus_connection_call()</function></link> but also takes a <link linkend="GUnixFDList"><type>GUnixFDList</type></link> object.</para>
<para>This method is only available on UNIX.</para>
<refsect3 id="g-dbus-connection-call-with-unix-fd-list.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>bus_name</para></entry>
<entry role="parameter_description"><para>a unique or well-known bus name or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if
<parameter>connection</parameter>
is not a message bus connection. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>path of remote object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>D-Bus interface to invoke method on</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>method_name</para></entry>
<entry role="parameter_description"><para>the name of the method to invoke</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameters</para></entry>
<entry role="parameter_description"><para>a <link linkend="GVariant"><type>GVariant</type></link> tuple with parameters for the method
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not passing parameters. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>reply_type</para></entry>
<entry role="parameter_description"><para>the expected type of the reply, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags from the <link linkend="GDBusCallFlags"><type>GDBusCallFlags</type></link> enumeration</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timeout_msec</para></entry>
<entry role="parameter_description"><para>the timeout in milliseconds, -1 to use the default
timeout or <link linkend="G-MAXINT:CAPS"><literal>G_MAXINT</literal></link> for no timeout</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fd_list</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixFDList"><type>GUnixFDList</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request is
satisfied or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if you don't * care about the result of the
method invocation. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The data to pass to <parameter>callback</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.30">2.30</link></para></refsect2>
<refsect2 id="g-dbus-connection-call-with-unix-fd-list-finish" role="function" condition="since:2.30">
<title>g_dbus_connection_call_with_unix_fd_list_finish&#160;()</title>
<indexterm zone="g-dbus-connection-call-with-unix-fd-list-finish" role="2.30"><primary sortas="dbus_connection_call_with_unix_fd_list_finish">g_dbus_connection_call_with_unix_fd_list_finish</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
g_dbus_connection_call_with_unix_fd_list_finish
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GUnixFDList"><type>GUnixFDList</type></link> **out_fd_list</parameter>,
                                <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *res</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an operation started with <link linkend="g-dbus-connection-call-with-unix-fd-list"><function>g_dbus_connection_call_with_unix_fd_list()</function></link>.</para>
<refsect3 id="g-dbus-connection-call-with-unix-fd-list-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out_fd_list</para></entry>
<entry role="parameter_description"><para>return location for a <link linkend="GUnixFDList"><type>GUnixFDList</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>res</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> obtained from the <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> passed to
<link linkend="g-dbus-connection-call-with-unix-fd-list"><function>g_dbus_connection_call_with_unix_fd_list()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-call-with-unix-fd-list-finish.returns" role="returns">
<title>Returns</title>
<para> <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Otherwise a <link linkend="GVariant"><type>GVariant</type></link> tuple with
return values. Free with <link linkend="g-variant-unref"><function>g_variant_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.30">2.30</link></para></refsect2>
<refsect2 id="g-dbus-connection-call-with-unix-fd-list-sync" role="function" condition="since:2.30">
<title>g_dbus_connection_call_with_unix_fd_list_sync&#160;()</title>
<indexterm zone="g-dbus-connection-call-with-unix-fd-list-sync" role="2.30"><primary sortas="dbus_connection_call_with_unix_fd_list_sync">g_dbus_connection_call_with_unix_fd_list_sync</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
g_dbus_connection_call_with_unix_fd_list_sync
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *bus_name</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *method_name</parameter>,
                                <parameter><link linkend="GVariant"><type>GVariant</type></link> *parameters</parameter>,
                                <parameter>const <link linkend="GVariantType"><type>GVariantType</type></link> *reply_type</parameter>,
                                <parameter><link linkend="GDBusCallFlags"><type>GDBusCallFlags</type></link> flags</parameter>,
                                <parameter><link linkend="gint"><type>gint</type></link> timeout_msec</parameter>,
                                <parameter><link linkend="GUnixFDList"><type>GUnixFDList</type></link> *fd_list</parameter>,
                                <parameter><link linkend="GUnixFDList"><type>GUnixFDList</type></link> **out_fd_list</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Like <link linkend="g-dbus-connection-call-sync"><function>g_dbus_connection_call_sync()</function></link> but also takes and returns <link linkend="GUnixFDList"><type>GUnixFDList</type></link> objects.</para>
<para>This method is only available on UNIX.</para>
<refsect3 id="g-dbus-connection-call-with-unix-fd-list-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>bus_name</para></entry>
<entry role="parameter_description"><para>a unique or well-known bus name or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
if <parameter>connection</parameter>
is not a message bus connection. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>path of remote object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>D-Bus interface to invoke method on</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>method_name</para></entry>
<entry role="parameter_description"><para>the name of the method to invoke</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameters</para></entry>
<entry role="parameter_description"><para>a <link linkend="GVariant"><type>GVariant</type></link> tuple with parameters for
the method or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not passing parameters. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>reply_type</para></entry>
<entry role="parameter_description"><para>the expected type of the reply, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags from the <link linkend="GDBusCallFlags"><type>GDBusCallFlags</type></link> enumeration</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timeout_msec</para></entry>
<entry role="parameter_description"><para>the timeout in milliseconds, -1 to use the default
timeout or <link linkend="G-MAXINT:CAPS"><literal>G_MAXINT</literal></link> for no timeout</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fd_list</para></entry>
<entry role="parameter_description"><para>a <link linkend="GUnixFDList"><type>GUnixFDList</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>out_fd_list</para></entry>
<entry role="parameter_description"><para>return location for a <link linkend="GUnixFDList"><type>GUnixFDList</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-call-with-unix-fd-list-sync.returns" role="returns">
<title>Returns</title>
<para> <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. Otherwise a <link linkend="GVariant"><type>GVariant</type></link> tuple with
return values. Free with <link linkend="g-variant-unref"><function>g_variant_unref()</function></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.30">2.30</link></para></refsect2>
<refsect2 id="g-dbus-connection-emit-signal" role="function" condition="since:2.26">
<title>g_dbus_connection_emit_signal&#160;()</title>
<indexterm zone="g-dbus-connection-emit-signal" role="2.26"><primary sortas="dbus_connection_emit_signal">g_dbus_connection_emit_signal</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_emit_signal (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *destination_bus_name</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *signal_name</parameter>,
                               <parameter><link linkend="GVariant"><type>GVariant</type></link> *parameters</parameter>,
                               <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Emits a signal.</para>
<para>If the parameters GVariant is floating, it is consumed.</para>
<para>This can only fail if <parameter>parameters</parameter>
 is not compatible with the D-Bus protocol
(<link linkend="G-IO-ERROR-INVALID-ARGUMENT:CAPS"><literal>G_IO_ERROR_INVALID_ARGUMENT</literal></link>), or if <parameter>connection</parameter>
 has been closed
(<link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>).</para>
<refsect3 id="g-dbus-connection-emit-signal.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>destination_bus_name</para></entry>
<entry role="parameter_description"><para>the unique bus name for the destination
for the signal or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to emit to all listeners. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>path of remote object</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>D-Bus interface to emit a signal on</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>signal_name</para></entry>
<entry role="parameter_description"><para>the name of the signal to emit</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameters</para></entry>
<entry role="parameter_description"><para>a <link linkend="GVariant"><type>GVariant</type></link> tuple with parameters for the signal
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if not passing parameters. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-emit-signal.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> unless <parameter>error</parameter>
is set</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusSignalCallback" role="function" condition="since:2.26">
<title>GDBusSignalCallback&#160;()</title>
<indexterm zone="GDBusSignalCallback" role="2.26"><primary sortas="DBusSignalCallback">GDBusSignalCallback</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GDBusSignalCallback<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *sender_name</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                        <parameter>const <link linkend="gchar"><type>gchar</type></link> *signal_name</parameter>,
                        <parameter><link linkend="GVariant"><type>GVariant</type></link> *parameters</parameter>,
                        <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Signature for callback function used in <link linkend="g-dbus-connection-signal-subscribe"><function>g_dbus_connection_signal_subscribe()</function></link>.</para>
<refsect3 id="GDBusSignalCallback.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sender_name</para></entry>
<entry role="parameter_description"><para>The unique bus name of the sender of the signal.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>The object path that the signal was emitted on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>The name of the interface.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>signal_name</para></entry>
<entry role="parameter_description"><para>The name of the signal.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameters</para></entry>
<entry role="parameter_description"><para>A <link linkend="GVariant"><type>GVariant</type></link> tuple with parameters for the signal.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>User data passed when subscribing to the signal.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-signal-subscribe" role="function" condition="since:2.26">
<title>g_dbus_connection_signal_subscribe&#160;()</title>
<indexterm zone="g-dbus-connection-signal-subscribe" role="2.26"><primary sortas="dbus_connection_signal_subscribe">g_dbus_connection_signal_subscribe</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
g_dbus_connection_signal_subscribe (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *sender</parameter>,
                                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *member</parameter>,
                                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *arg0</parameter>,
                                    <parameter><link linkend="GDBusSignalFlags"><type>GDBusSignalFlags</type></link> flags</parameter>,
                                    <parameter><link linkend="GDBusSignalCallback"><type>GDBusSignalCallback</type></link> callback</parameter>,
                                    <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                    <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> user_data_free_func</parameter>);</programlisting>
<para>Subscribes to signals on <parameter>connection</parameter>
 and invokes <parameter>callback</parameter>
 with a whenever
the signal is received. Note that <parameter>callback</parameter>
 will be invoked in the 
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread you are calling this method from.</para>
<para>If <parameter>connection</parameter>
 is not a message bus connection, <parameter>sender</parameter>
 must be
<link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>If <parameter>sender</parameter>
 is a well-known name note that <parameter>callback</parameter>
 is invoked with
the unique name for the owner of <parameter>sender</parameter>
, not the well-known name
as one would expect. This is because the message bus rewrites the
name. As such, to avoid certain race conditions, users should be
tracking the name owner of the well-known name and use that when
processing the received signal.</para>
<para>If one of <link linkend="G-DBUS-SIGNAL-FLAGS-MATCH-ARG0-NAMESPACE:CAPS"><literal>G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE</literal></link> or
<link linkend="G-DBUS-SIGNAL-FLAGS-MATCH-ARG0-PATH:CAPS"><literal>G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH</literal></link> are given, <parameter>arg0</parameter>
 is
interpreted as part of a namespace or path.  The first argument
of a signal is matched against that part as specified by D-Bus.</para>
<para>If <parameter>user_data_free_func</parameter>
 is non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>, it will be called (in the
thread-default main context of the thread you are calling this
method from) at some point after <parameter>user_data</parameter>
 is no longer
needed. (It is not guaranteed to be called synchronously when the
signal is unsubscribed from, and may be called after <parameter>connection</parameter>

has been destroyed.)</para>
<refsect3 id="g-dbus-connection-signal-subscribe.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sender</para></entry>
<entry role="parameter_description"><para>sender name to match on (unique or well-known name)
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to listen from all senders. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>D-Bus interface name to match on or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to
match on all interfaces. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>member</para></entry>
<entry role="parameter_description"><para>D-Bus signal name to match on or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to match on
all signals. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>object path to match on or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to match on
all object paths. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>arg0</para></entry>
<entry role="parameter_description"><para>contents of first string argument to match on or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
to match on all kinds of arguments. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para><link linkend="GDBusSignalFlags"><type>GDBusSignalFlags</type></link> describing how arg0 is used in subscribing to the
signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>callback to invoke when there is a signal matching the requested data</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user data to pass to <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data_free_func</para></entry>
<entry role="parameter_description"><para>function to free <parameter>user_data</parameter>
with when
subscription is removed or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-signal-subscribe.returns" role="returns">
<title>Returns</title>
<para> a subscription identifier that can be used with <link linkend="g-dbus-connection-signal-unsubscribe"><function>g_dbus_connection_signal_unsubscribe()</function></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-signal-unsubscribe" role="function" condition="since:2.26">
<title>g_dbus_connection_signal_unsubscribe&#160;()</title>
<indexterm zone="g-dbus-connection-signal-unsubscribe" role="2.26"><primary sortas="dbus_connection_signal_unsubscribe">g_dbus_connection_signal_unsubscribe</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_signal_unsubscribe (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                      <parameter><link linkend="guint"><type>guint</type></link> subscription_id</parameter>);</programlisting>
<para>Unsubscribes from signals.</para>
<refsect3 id="g-dbus-connection-signal-unsubscribe.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>subscription_id</para></entry>
<entry role="parameter_description"><para>a subscription id obtained from
<link linkend="g-dbus-connection-signal-subscribe"><function>g_dbus_connection_signal_subscribe()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-send-message" role="function" condition="since:2.26">
<title>g_dbus_connection_send_message&#160;()</title>
<indexterm zone="g-dbus-connection-send-message" role="2.26"><primary sortas="dbus_connection_send_message">g_dbus_connection_send_message</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_send_message (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GDBusMessage"><type>GDBusMessage</type></link> *message</parameter>,
                                <parameter><link linkend="GDBusSendMessageFlags"><type>GDBusSendMessageFlags</type></link> flags</parameter>,
                                <parameter>volatile <link linkend="guint32"><type>guint32</type></link> *out_serial</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Asynchronously sends <parameter>message</parameter>
 to the peer represented by <parameter>connection</parameter>
.</para>
<para>Unless <parameter>flags</parameter>
 contain the
<link linkend="G-DBUS-SEND-MESSAGE-FLAGS-PRESERVE-SERIAL:CAPS"><literal>G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL</literal></link> flag, the serial number
will be assigned by <parameter>connection</parameter>
 and set on <parameter>message</parameter>
 via
<link linkend="g-dbus-message-set-serial"><function>g_dbus_message_set_serial()</function></link>. If <parameter>out_serial</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the
serial number used will be written to this location prior to
submitting the message to the underlying transport.</para>
<para>If <parameter>connection</parameter>
 is closed then the operation will fail with
<link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>. If <parameter>message</parameter>
 is not well-formed,
the operation fails with <link linkend="G-IO-ERROR-INVALID-ARGUMENT:CAPS"><literal>G_IO_ERROR_INVALID_ARGUMENT</literal></link>.</para>
<para>See this <link linkend="gdbus-server">server</link> and <link linkend="gdbus-unix-fd-client">client</link>
for an example of how to use this low-level API to send and receive
UNIX file descriptors.</para>
<para>Note that <parameter>message</parameter>
 must be unlocked, unless <parameter>flags</parameter>
 contain the
<link linkend="G-DBUS-SEND-MESSAGE-FLAGS-PRESERVE-SERIAL:CAPS"><literal>G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL</literal></link> flag.</para>
<refsect3 id="g-dbus-connection-send-message.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusMessage"><type>GDBusMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags affecting how the message is sent</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out_serial</para></entry>
<entry role="parameter_description"><para>return location for serial number assigned
to <parameter>message</parameter>
when sending it or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-send-message.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the message was well-formed and queued for
transmission, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if <parameter>error</parameter>
is set</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-send-message-with-reply" role="function" condition="since:2.26">
<title>g_dbus_connection_send_message_with_reply&#160;()</title>
<indexterm zone="g-dbus-connection-send-message-with-reply" role="2.26"><primary sortas="dbus_connection_send_message_with_reply">g_dbus_connection_send_message_with_reply</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_send_message_with_reply
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GDBusMessage"><type>GDBusMessage</type></link> *message</parameter>,
                                <parameter><link linkend="GDBusSendMessageFlags"><type>GDBusSendMessageFlags</type></link> flags</parameter>,
                                <parameter><link linkend="gint"><type>gint</type></link> timeout_msec</parameter>,
                                <parameter>volatile <link linkend="guint32"><type>guint32</type></link> *out_serial</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> callback</parameter>,
                                <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Asynchronously sends <parameter>message</parameter>
 to the peer represented by <parameter>connection</parameter>
.</para>
<para>Unless <parameter>flags</parameter>
 contain the
<link linkend="G-DBUS-SEND-MESSAGE-FLAGS-PRESERVE-SERIAL:CAPS"><literal>G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL</literal></link> flag, the serial number
will be assigned by <parameter>connection</parameter>
 and set on <parameter>message</parameter>
 via
<link linkend="g-dbus-message-set-serial"><function>g_dbus_message_set_serial()</function></link>. If <parameter>out_serial</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the
serial number used will be written to this location prior to
submitting the message to the underlying transport.</para>
<para>If <parameter>connection</parameter>
 is closed then the operation will fail with
<link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>. If <parameter>cancellable</parameter>
 is canceled, the operation will
fail with <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link>. If <parameter>message</parameter>
 is not well-formed,
the operation fails with <link linkend="G-IO-ERROR-INVALID-ARGUMENT:CAPS"><literal>G_IO_ERROR_INVALID_ARGUMENT</literal></link>.</para>
<para>This is an asynchronous method. When the operation is finished, <parameter>callback</parameter>

will be invoked in the 
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread you are calling this method from. You can then call
<link linkend="g-dbus-connection-send-message-with-reply-finish"><function>g_dbus_connection_send_message_with_reply_finish()</function></link> to get the result of the operation.
See <link linkend="g-dbus-connection-send-message-with-reply-sync"><function>g_dbus_connection_send_message_with_reply_sync()</function></link> for the synchronous version.</para>
<para>Note that <parameter>message</parameter>
 must be unlocked, unless <parameter>flags</parameter>
 contain the
<link linkend="G-DBUS-SEND-MESSAGE-FLAGS-PRESERVE-SERIAL:CAPS"><literal>G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL</literal></link> flag.</para>
<para>See this <link linkend="gdbus-server">server</link> and <link linkend="gdbus-unix-fd-client">client</link>
for an example of how to use this low-level API to send and receive
UNIX file descriptors.</para>
<refsect3 id="g-dbus-connection-send-message-with-reply.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusMessage"><type>GDBusMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags affecting how the message is sent</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timeout_msec</para></entry>
<entry role="parameter_description"><para>the timeout in milliseconds, -1 to use the default
timeout or <link linkend="G-MAXINT:CAPS"><literal>G_MAXINT</literal></link> for no timeout</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out_serial</para></entry>
<entry role="parameter_description"><para>return location for serial number assigned
to <parameter>message</parameter>
when sending it or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>callback</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> to call when the request
is satisfied or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if you don't care about the result. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The data to pass to <parameter>callback</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-send-message-with-reply-finish" role="function" condition="since:2.26">
<title>g_dbus_connection_send_message_with_reply_finish&#160;()</title>
<indexterm zone="g-dbus-connection-send-message-with-reply-finish" role="2.26"><primary sortas="dbus_connection_send_message_with_reply_finish">g_dbus_connection_send_message_with_reply_finish</primary></indexterm>
<programlisting language="C"><link linkend="GDBusMessage"><returnvalue>GDBusMessage</returnvalue></link>&#160;*
g_dbus_connection_send_message_with_reply_finish
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *res</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Finishes an operation started with <link linkend="g-dbus-connection-send-message-with-reply"><function>g_dbus_connection_send_message_with_reply()</function></link>.</para>
<para>Note that <parameter>error</parameter>
 is only set if a local in-process error
occurred. That is to say that the returned <link linkend="GDBusMessage"><type>GDBusMessage</type></link> object may
be of type <link linkend="G-DBUS-MESSAGE-TYPE-ERROR:CAPS"><literal>G_DBUS_MESSAGE_TYPE_ERROR</literal></link>. Use
<link linkend="g-dbus-message-to-gerror"><function>g_dbus_message_to_gerror()</function></link> to transcode this to a <link linkend="GError"><type>GError</type></link>.</para>
<para>See this <link linkend="gdbus-server">server</link> and <link linkend="gdbus-unix-fd-client">client</link>
for an example of how to use this low-level API to send and receive
UNIX file descriptors.</para>
<refsect3 id="g-dbus-connection-send-message-with-reply-finish.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>res</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link> obtained from the <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> passed to
<link linkend="g-dbus-connection-send-message-with-reply"><function>g_dbus_connection_send_message_with_reply()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>teturn location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-send-message-with-reply-finish.returns" role="returns">
<title>Returns</title>
<para>a locked <link linkend="GDBusMessage"><type>GDBusMessage</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-send-message-with-reply-sync" role="function" condition="since:2.26">
<title>g_dbus_connection_send_message_with_reply_sync&#160;()</title>
<indexterm zone="g-dbus-connection-send-message-with-reply-sync" role="2.26"><primary sortas="dbus_connection_send_message_with_reply_sync">g_dbus_connection_send_message_with_reply_sync</primary></indexterm>
<programlisting language="C"><link linkend="GDBusMessage"><returnvalue>GDBusMessage</returnvalue></link>&#160;*
g_dbus_connection_send_message_with_reply_sync
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter><link linkend="GDBusMessage"><type>GDBusMessage</type></link> *message</parameter>,
                                <parameter><link linkend="GDBusSendMessageFlags"><type>GDBusSendMessageFlags</type></link> flags</parameter>,
                                <parameter><link linkend="gint"><type>gint</type></link> timeout_msec</parameter>,
                                <parameter>volatile <link linkend="guint32"><type>guint32</type></link> *out_serial</parameter>,
                                <parameter><link linkend="GCancellable"><type>GCancellable</type></link> *cancellable</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Synchronously sends <parameter>message</parameter>
 to the peer represented by <parameter>connection</parameter>

and blocks the calling thread until a reply is received or the
timeout is reached. See <link linkend="g-dbus-connection-send-message-with-reply"><function>g_dbus_connection_send_message_with_reply()</function></link>
for the asynchronous version of this method.</para>
<para>Unless <parameter>flags</parameter>
 contain the
<link linkend="G-DBUS-SEND-MESSAGE-FLAGS-PRESERVE-SERIAL:CAPS"><literal>G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL</literal></link> flag, the serial number
will be assigned by <parameter>connection</parameter>
 and set on <parameter>message</parameter>
 via
<link linkend="g-dbus-message-set-serial"><function>g_dbus_message_set_serial()</function></link>. If <parameter>out_serial</parameter>
 is not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, then the
serial number used will be written to this location prior to
submitting the message to the underlying transport.</para>
<para>If <parameter>connection</parameter>
 is closed then the operation will fail with
<link linkend="G-IO-ERROR-CLOSED:CAPS"><literal>G_IO_ERROR_CLOSED</literal></link>. If <parameter>cancellable</parameter>
 is canceled, the operation will
fail with <link linkend="G-IO-ERROR-CANCELLED:CAPS"><literal>G_IO_ERROR_CANCELLED</literal></link>. If <parameter>message</parameter>
 is not well-formed,
the operation fails with <link linkend="G-IO-ERROR-INVALID-ARGUMENT:CAPS"><literal>G_IO_ERROR_INVALID_ARGUMENT</literal></link>.</para>
<para>Note that <parameter>error</parameter>
 is only set if a local in-process error
occurred. That is to say that the returned <link linkend="GDBusMessage"><type>GDBusMessage</type></link> object may
be of type <link linkend="G-DBUS-MESSAGE-TYPE-ERROR:CAPS"><literal>G_DBUS_MESSAGE_TYPE_ERROR</literal></link>. Use
<link linkend="g-dbus-message-to-gerror"><function>g_dbus_message_to_gerror()</function></link> to transcode this to a <link linkend="GError"><type>GError</type></link>.</para>
<para>See this <link linkend="gdbus-server">server</link> and <link linkend="gdbus-unix-fd-client">client</link>
for an example of how to use this low-level API to send and receive
UNIX file descriptors.</para>
<para>Note that <parameter>message</parameter>
 must be unlocked, unless <parameter>flags</parameter>
 contain the
<link linkend="G-DBUS-SEND-MESSAGE-FLAGS-PRESERVE-SERIAL:CAPS"><literal>G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL</literal></link> flag.</para>
<refsect3 id="g-dbus-connection-send-message-with-reply-sync.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusMessage"><type>GDBusMessage</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags affecting how the message is sent.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timeout_msec</para></entry>
<entry role="parameter_description"><para>the timeout in milliseconds, -1 to use the default
timeout or <link linkend="G-MAXINT:CAPS"><literal>G_MAXINT</literal></link> for no timeout</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out_serial</para></entry>
<entry role="parameter_description"><para>return location for serial number
assigned to <parameter>message</parameter>
when sending it or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>cancellable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GCancellable"><type>GCancellable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-send-message-with-reply-sync.returns" role="returns">
<title>Returns</title>
<para>a locked <link linkend="GDBusMessage"><type>GDBusMessage</type></link> that is the reply
to <parameter>message</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>error</parameter>
is set. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusMessageFilterFunction" role="function" condition="since:2.26">
<title>GDBusMessageFilterFunction&#160;()</title>
<indexterm zone="GDBusMessageFilterFunction" role="2.26"><primary sortas="DBusMessageFilterFunction">GDBusMessageFilterFunction</primary></indexterm>
<programlisting language="C"><link linkend="GDBusMessage"><returnvalue>GDBusMessage</returnvalue></link>&#160;*
<phrase role="c_punctuation">(</phrase>*GDBusMessageFilterFunction<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                               <parameter><link linkend="GDBusMessage"><type>GDBusMessage</type></link> *message</parameter>,
                               <parameter><link linkend="gboolean"><type>gboolean</type></link> incoming</parameter>,
                               <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>Signature for function used in <link linkend="g-dbus-connection-add-filter"><function>g_dbus_connection_add_filter()</function></link>.</para>
<para>A filter function is passed a <link linkend="GDBusMessage"><type>GDBusMessage</type></link> and expected to return
a <link linkend="GDBusMessage"><type>GDBusMessage</type></link> too. Passive filter functions that don't modify the
message can simply return the <parameter>message</parameter>
 object:</para>
<informalexample><programlisting role="example"><![CDATA[
static GDBusMessage *
passive_filter (GDBusConnection *connection
                GDBusMessage    *message,
                gboolean         incoming,
                gpointer         user_data)
{
  // inspect @message
  return message;
}
]]></programlisting></informalexample>
<para>
Filter functions that wants to drop a message can simply return <link linkend="NULL:CAPS"><literal>NULL</literal></link>:</para>
<informalexample><programlisting role="example"><![CDATA[
static GDBusMessage *
drop_filter (GDBusConnection *connection
             GDBusMessage    *message,
             gboolean         incoming,
             gpointer         user_data)
{
  if (should_drop_message)
    {
      g_object_unref (message);
      message = NULL;
    }
  return message;
}
]]></programlisting></informalexample>
<para>
Finally, a filter function may modify a message by copying it:</para>
<informalexample><programlisting role="example"><![CDATA[
static GDBusMessage *
modifying_filter (GDBusConnection *connection
                  GDBusMessage    *message,
                  gboolean         incoming,
                  gpointer         user_data)
{
  GDBusMessage *copy;
  GError *error;

  error = NULL;
  copy = g_dbus_message_copy (message, &error);
  // handle @error being set
  g_object_unref (message);

  // modify @copy

  return copy;
}
]]></programlisting></informalexample>
<para>
If the returned <link linkend="GDBusMessage"><type>GDBusMessage</type></link> is different from <parameter>message</parameter>
 and cannot
be sent on <parameter>connection</parameter>
 (it could use features, such as file
descriptors, not compatible with <parameter>connection</parameter>
), then a warning is
logged to standard error. Applications can
check this ahead of time using <link linkend="g-dbus-message-to-blob"><function>g_dbus_message_to_blob()</function></link> passing a
<link linkend="GDBusCapabilityFlags"><type>GDBusCapabilityFlags</type></link> value obtained from <parameter>connection</parameter>
.</para>
<refsect3 id="GDBusMessageFilterFunction.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>A locked <link linkend="GDBusMessage"><type>GDBusMessage</type></link> that the filter function takes ownership of. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>incoming</para></entry>
<entry role="parameter_description"><para><link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if it is a message received from the other peer, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if it is
a message to be sent to the other peer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>User data passed when adding the filter.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GDBusMessageFilterFunction.returns" role="returns">
<title>Returns</title>
<para>A <link linkend="GDBusMessage"><type>GDBusMessage</type></link> that will be freed with
<link linkend="g-object-unref"><function>g_object_unref()</function></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to drop the message. Passive filter
functions can simply return the passed <parameter>message</parameter>
object. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>][<acronym>nullable</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-add-filter" role="function" condition="since:2.26">
<title>g_dbus_connection_add_filter&#160;()</title>
<indexterm zone="g-dbus-connection-add-filter" role="2.26"><primary sortas="dbus_connection_add_filter">g_dbus_connection_add_filter</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
g_dbus_connection_add_filter (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                              <parameter><link linkend="GDBusMessageFilterFunction"><type>GDBusMessageFilterFunction</type></link> filter_function</parameter>,
                              <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                              <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> user_data_free_func</parameter>);</programlisting>
<para>Adds a message filter. Filters are handlers that are run on all
incoming and outgoing messages, prior to standard dispatch. Filters
are run in the order that they were added.  The same handler can be
added as a filter more than once, in which case it will be run more
than once.  Filters added during a filter callback won't be run on
the message being processed. Filter functions are allowed to modify
and even drop messages.</para>
<para>Note that filters are run in a dedicated message handling thread so
they can't block and, generally, can't do anything but signal a
worker thread. Also note that filters are rarely needed - use API
such as <link linkend="g-dbus-connection-send-message-with-reply"><function>g_dbus_connection_send_message_with_reply()</function></link>,
<link linkend="g-dbus-connection-signal-subscribe"><function>g_dbus_connection_signal_subscribe()</function></link> or <link linkend="g-dbus-connection-call"><function>g_dbus_connection_call()</function></link> instead.</para>
<para>If a filter consumes an incoming message the message is not
dispatched anywhere else - not even the standard dispatch machinery
(that API such as <link linkend="g-dbus-connection-signal-subscribe"><function>g_dbus_connection_signal_subscribe()</function></link> and
<link linkend="g-dbus-connection-send-message-with-reply"><function>g_dbus_connection_send_message_with_reply()</function></link> relies on) will see the
message. Similarly, if a filter consumes an outgoing message, the
message will not be sent to the other peer.</para>
<para>If <parameter>user_data_free_func</parameter>
 is non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>, it will be called (in the
thread-default main context of the thread you are calling this
method from) at some point after <parameter>user_data</parameter>
 is no longer
needed. (It is not guaranteed to be called synchronously when the
filter is removed, and may be called after <parameter>connection</parameter>
 has been
destroyed.)</para>
<refsect3 id="g-dbus-connection-add-filter.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filter_function</para></entry>
<entry role="parameter_description"><para>a filter function</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>user data to pass to <parameter>filter_function</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data_free_func</para></entry>
<entry role="parameter_description"><para>function to free <parameter>user_data</parameter>
with when filter
is removed or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-add-filter.returns" role="returns">
<title>Returns</title>
<para> a filter identifier that can be used with
<link linkend="g-dbus-connection-remove-filter"><function>g_dbus_connection_remove_filter()</function></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-remove-filter" role="function" condition="since:2.26">
<title>g_dbus_connection_remove_filter&#160;()</title>
<indexterm zone="g-dbus-connection-remove-filter" role="2.26"><primary sortas="dbus_connection_remove_filter">g_dbus_connection_remove_filter</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_dbus_connection_remove_filter (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                 <parameter><link linkend="guint"><type>guint</type></link> filter_id</parameter>);</programlisting>
<para>Removes a filter.</para>
<para>Note that since filters run in a different thread, there is a race
condition where it is possible that the filter will be running even
after calling <link linkend="g-dbus-connection-remove-filter"><function>g_dbus_connection_remove_filter()</function></link>, so you cannot just
free data that the filter might be using. Instead, you should pass
a <link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> to <link linkend="g-dbus-connection-add-filter"><function>g_dbus_connection_add_filter()</function></link>, which will be
called when it is guaranteed that the data is no longer needed.</para>
<refsect3 id="g-dbus-connection-remove-filter.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filter_id</para></entry>
<entry role="parameter_description"><para>an identifier obtained from <link linkend="g-dbus-connection-add-filter"><function>g_dbus_connection_add_filter()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusInterfaceMethodCallFunc" role="function" condition="since:2.26">
<title>GDBusInterfaceMethodCallFunc&#160;()</title>
<indexterm zone="GDBusInterfaceMethodCallFunc" role="2.26"><primary sortas="DBusInterfaceMethodCallFunc">GDBusInterfaceMethodCallFunc</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GDBusInterfaceMethodCallFunc<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *sender</parameter>,
                                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *method_name</parameter>,
                                 <parameter><link linkend="GVariant"><type>GVariant</type></link> *parameters</parameter>,
                                 <parameter><link linkend="GDBusMethodInvocation"><type>GDBusMethodInvocation</type></link> *invocation</parameter>,
                                 <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>The type of the <parameter>method_call</parameter>
 function in <link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link>.</para>
<refsect3 id="GDBusInterfaceMethodCallFunc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sender</para></entry>
<entry role="parameter_description"><para>The unique bus name of the remote caller.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>The object path that the method was invoked on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>The D-Bus interface name the method was invoked on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>method_name</para></entry>
<entry role="parameter_description"><para>The name of the method that was invoked.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameters</para></entry>
<entry role="parameter_description"><para>A <link linkend="GVariant"><type>GVariant</type></link> tuple with parameters.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>invocation</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusMethodInvocation"><type>GDBusMethodInvocation</type></link> object that must be used to return a value or error. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The <parameter>user_data</parameter>
<link linkend="gpointer"><type>gpointer</type></link> passed to <link linkend="g-dbus-connection-register-object"><function>g_dbus_connection_register_object()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusInterfaceGetPropertyFunc" role="function" condition="since:2.26">
<title>GDBusInterfaceGetPropertyFunc&#160;()</title>
<indexterm zone="GDBusInterfaceGetPropertyFunc" role="2.26"><primary sortas="DBusInterfaceGetPropertyFunc">GDBusInterfaceGetPropertyFunc</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
<phrase role="c_punctuation">(</phrase>*GDBusInterfaceGetPropertyFunc<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *sender</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *property_name</parameter>,
                                  <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>,
                                  <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>The type of the <parameter>get_property</parameter>
 function in <link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link>.</para>
<refsect3 id="GDBusInterfaceGetPropertyFunc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sender</para></entry>
<entry role="parameter_description"><para>The unique bus name of the remote caller.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>The object path that the method was invoked on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>The D-Bus interface name for the property.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>property_name</para></entry>
<entry role="parameter_description"><para>The name of the property to get the value of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The <parameter>user_data</parameter>
<link linkend="gpointer"><type>gpointer</type></link> passed to <link linkend="g-dbus-connection-register-object"><function>g_dbus_connection_register_object()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GDBusInterfaceGetPropertyFunc.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="GVariant"><type>GVariant</type></link> with the value for <parameter>property_name</parameter>
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if
<parameter>error</parameter>
is set. If the returned <link linkend="GVariant"><type>GVariant</type></link> is floating, it is
consumed - otherwise its reference count is decreased by one.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusInterfaceSetPropertyFunc" role="function" condition="since:2.26">
<title>GDBusInterfaceSetPropertyFunc&#160;()</title>
<indexterm zone="GDBusInterfaceSetPropertyFunc" role="2.26"><primary sortas="DBusInterfaceSetPropertyFunc">GDBusInterfaceSetPropertyFunc</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*GDBusInterfaceSetPropertyFunc<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *sender</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *property_name</parameter>,
                                  <parameter><link linkend="GVariant"><type>GVariant</type></link> *value</parameter>,
                                  <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>,
                                  <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>The type of the <parameter>set_property</parameter>
 function in <link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link>.</para>
<refsect3 id="GDBusInterfaceSetPropertyFunc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sender</para></entry>
<entry role="parameter_description"><para>The unique bus name of the remote caller.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>The object path that the method was invoked on.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>The D-Bus interface name for the property.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>property_name</para></entry>
<entry role="parameter_description"><para>The name of the property to get the value of.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>The value to set the property to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The <parameter>user_data</parameter>
<link linkend="gpointer"><type>gpointer</type></link> passed to <link linkend="g-dbus-connection-register-object"><function>g_dbus_connection_register_object()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GDBusInterfaceSetPropertyFunc.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the property was set to <parameter>value</parameter>
, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if <parameter>error</parameter>
is set.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-register-object" role="function" condition="since:2.26">
<title>g_dbus_connection_register_object&#160;()</title>
<indexterm zone="g-dbus-connection-register-object" role="2.26"><primary sortas="dbus_connection_register_object">g_dbus_connection_register_object</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
g_dbus_connection_register_object (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                   <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                   <parameter><link linkend="GDBusInterfaceInfo"><type>GDBusInterfaceInfo</type></link> *interface_info</parameter>,
                                   <parameter>const <link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link> *vtable</parameter>,
                                   <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                   <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> user_data_free_func</parameter>,
                                   <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Registers callbacks for exported objects at <parameter>object_path</parameter>
 with the
D-Bus interface that is described in <parameter>interface_info</parameter>
.</para>
<para>Calls to functions in <parameter>vtable</parameter>
 (and <parameter>user_data_free_func</parameter>
) will happen
in the 
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread you are calling this method from.</para>
<para>Note that all <link linkend="GVariant"><type>GVariant</type></link> values passed to functions in <parameter>vtable</parameter>
 will match
the signature given in <parameter>interface_info</parameter>
 - if a remote caller passes
incorrect values, the <literal>org.freedesktop.DBus.Error.InvalidArgs</literal>
is returned to the remote caller.</para>
<para>Additionally, if the remote caller attempts to invoke methods or
access properties not mentioned in <parameter>interface_info</parameter>
 the
<literal>org.freedesktop.DBus.Error.UnknownMethod</literal> resp.
<literal>org.freedesktop.DBus.Error.InvalidArgs</literal> errors
are returned to the caller.</para>
<para>It is considered a programming error if the
<link linkend="GDBusInterfaceGetPropertyFunc"><type>GDBusInterfaceGetPropertyFunc</type></link> function in <parameter>vtable</parameter>
 returns a
<link linkend="GVariant"><type>GVariant</type></link> of incorrect type.</para>
<para>If an existing callback is already registered at <parameter>object_path</parameter>
 and
<parameter>interface_name</parameter>
, then <parameter>error</parameter>
 is set to <link linkend="G-IO-ERROR-EXISTS:CAPS"><type>G_IO_ERROR_EXISTS</type></link>.</para>
<para>GDBus automatically implements the standard D-Bus interfaces
org.freedesktop.DBus.Properties, org.freedesktop.DBus.Introspectable
and org.freedesktop.Peer, so you don't have to implement those for the
objects you export. You can implement org.freedesktop.DBus.Properties
yourself, e.g. to handle getting and setting of properties asynchronously.</para>
<para>Note that the reference count on <parameter>interface_info</parameter>
 will be
incremented by 1 (unless allocated statically, e.g. if the
reference count is -1, see <link linkend="g-dbus-interface-info-ref"><function>g_dbus_interface_info_ref()</function></link>) for as long
as the object is exported. Also note that <parameter>vtable</parameter>
 will be copied.</para>
<para>See this <link linkend="gdbus-server">server</link> for an example of how to use this method.</para>
<refsect3 id="g-dbus-connection-register-object.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>the object path to register at</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_info</para></entry>
<entry role="parameter_description"><para>introspection data for the interface</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>vtable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link> to call into or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>data to pass to functions in <parameter>vtable</parameter>
. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data_free_func</para></entry>
<entry role="parameter_description"><para>function to call when the object path is unregistered</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-register-object.returns" role="returns">
<title>Returns</title>
<para> 0 if <parameter>error</parameter>
is set, otherwise a registration id (never 0)
that can be used with <link linkend="g-dbus-connection-unregister-object"><function>g_dbus_connection_unregister_object()</function></link></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-unregister-object" role="function" condition="since:2.26">
<title>g_dbus_connection_unregister_object&#160;()</title>
<indexterm zone="g-dbus-connection-unregister-object" role="2.26"><primary sortas="dbus_connection_unregister_object">g_dbus_connection_unregister_object</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_unregister_object (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                     <parameter><link linkend="guint"><type>guint</type></link> registration_id</parameter>);</programlisting>
<para>Unregisters an object.</para>
<refsect3 id="g-dbus-connection-unregister-object.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>registration_id</para></entry>
<entry role="parameter_description"><para>a registration id obtained from
<link linkend="g-dbus-connection-register-object"><function>g_dbus_connection_register_object()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-unregister-object.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the object was unregistered, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-register-object-with-closures" role="function" condition="since:2.46">
<title>g_dbus_connection_register_object_with_closures&#160;()</title>
<indexterm zone="g-dbus-connection-register-object-with-closures" role="2.46"><primary sortas="dbus_connection_register_object_with_closures">g_dbus_connection_register_object_with_closures</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
g_dbus_connection_register_object_with_closures
                               (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                <parameter><link linkend="GDBusInterfaceInfo"><type>GDBusInterfaceInfo</type></link> *interface_info</parameter>,
                                <parameter><link linkend="GClosure"><type>GClosure</type></link> *method_call_closure</parameter>,
                                <parameter><link linkend="GClosure"><type>GClosure</type></link> *get_property_closure</parameter>,
                                <parameter><link linkend="GClosure"><type>GClosure</type></link> *set_property_closure</parameter>,
                                <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Version of <link linkend="g-dbus-connection-register-object"><function>g_dbus_connection_register_object()</function></link> using closures instead of a
<link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link> for easier binding in other languages.</para>

<para><emphasis role="annotation">[<acronym>rename-to</acronym> g_dbus_connection_register_object]</emphasis></para><refsect3 id="g-dbus-connection-register-object-with-closures.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>The object path to register at.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_info</para></entry>
<entry role="parameter_description"><para>Introspection data for the interface.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>method_call_closure</para></entry>
<entry role="parameter_description"><para><link linkend="GClosure"><type>GClosure</type></link> for handling incoming method calls. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>get_property_closure</para></entry>
<entry role="parameter_description"><para><link linkend="GClosure"><type>GClosure</type></link> for getting a property. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>set_property_closure</para></entry>
<entry role="parameter_description"><para><link linkend="GClosure"><type>GClosure</type></link> for setting a property. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>Return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-register-object-with-closures.returns" role="returns">
<title>Returns</title>
<para> 0 if <parameter>error</parameter>
is set, otherwise a registration id (never 0)
that can be used with <link linkend="g-dbus-connection-unregister-object"><function>g_dbus_connection_unregister_object()</function></link> .</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.46">2.46</link></para></refsect2>
<refsect2 id="GDBusSubtreeEnumerateFunc" role="function" condition="since:2.26">
<title>GDBusSubtreeEnumerateFunc&#160;()</title>
<indexterm zone="GDBusSubtreeEnumerateFunc" role="2.26"><primary sortas="DBusSubtreeEnumerateFunc">GDBusSubtreeEnumerateFunc</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
<phrase role="c_punctuation">(</phrase>*GDBusSubtreeEnumerateFunc<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *sender</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                              <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>The type of the <parameter>enumerate</parameter>
 function in <link linkend="GDBusSubtreeVTable"><type>GDBusSubtreeVTable</type></link>.</para>
<para>This function is called when generating introspection data and also
when preparing to dispatch incoming messages in the event that the
<link linkend="G-DBUS-SUBTREE-FLAGS-DISPATCH-TO-UNENUMERATED-NODES:CAPS"><literal>G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES</literal></link> flag is not
specified (ie: to verify that the object path is valid).</para>
<para>Hierarchies are not supported; the items that you return should not
contain the '/' character.</para>
<para>The return value will be freed with <link linkend="g-strfreev"><function>g_strfreev()</function></link>.</para>
<refsect3 id="GDBusSubtreeEnumerateFunc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sender</para></entry>
<entry role="parameter_description"><para>The unique bus name of the remote caller.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>The object path that was registered with <link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The <parameter>user_data</parameter>
<link linkend="gpointer"><type>gpointer</type></link> passed to <link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GDBusSubtreeEnumerateFunc.returns" role="returns">
<title>Returns</title>
<para> A newly allocated array of strings for node names that are children of <parameter>object_path</parameter>
.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusSubtreeIntrospectFunc" role="function" condition="since:2.26">
<title>GDBusSubtreeIntrospectFunc&#160;()</title>
<indexterm zone="GDBusSubtreeIntrospectFunc" role="2.26"><primary sortas="DBusSubtreeIntrospectFunc">GDBusSubtreeIntrospectFunc</primary></indexterm>
<programlisting language="C"><link linkend="GDBusInterfaceInfo"><returnvalue>GDBusInterfaceInfo</returnvalue></link>&#160;**
<phrase role="c_punctuation">(</phrase>*GDBusSubtreeIntrospectFunc<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *sender</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                               <parameter>const <link linkend="gchar"><type>gchar</type></link> *node</parameter>,
                               <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>The type of the <parameter>introspect</parameter>
 function in <link linkend="GDBusSubtreeVTable"><type>GDBusSubtreeVTable</type></link>.</para>
<para>Subtrees are flat.  <parameter>node</parameter>
, if non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>, is always exactly one
segment of the object path (ie: it never contains a slash).</para>
<para>This function should return <link linkend="NULL:CAPS"><literal>NULL</literal></link> to indicate that there is no object
at this node.</para>
<para>If this function returns non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>, the return value is expected to
be a <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated array of pointers to <link linkend="GDBusInterfaceInfo"><type>GDBusInterfaceInfo</type></link>
structures describing the interfaces implemented by <parameter>node</parameter>
.  This
array will have <link linkend="g-dbus-interface-info-unref"><function>g_dbus_interface_info_unref()</function></link> called on each item
before being freed with <link linkend="g-free"><function>g_free()</function></link>.</para>
<para>The difference between returning <link linkend="NULL:CAPS"><literal>NULL</literal></link> and an array containing zero
items is that the standard DBus interfaces will returned to the
remote introspector in the empty array case, but not in the <link linkend="NULL:CAPS"><literal>NULL</literal></link>
case.</para>
<refsect3 id="GDBusSubtreeIntrospectFunc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sender</para></entry>
<entry role="parameter_description"><para>The unique bus name of the remote caller.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>The object path that was registered with <link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>A node that is a child of <parameter>object_path</parameter>
(relative to <parameter>object_path</parameter>
) or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the root of the subtree.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The <parameter>user_data</parameter>
<link linkend="gpointer"><type>gpointer</type></link> passed to <link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GDBusSubtreeIntrospectFunc.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated array of pointers to <link linkend="GDBusInterfaceInfo"><type>GDBusInterfaceInfo</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusSubtreeDispatchFunc" role="function" condition="since:2.26">
<title>GDBusSubtreeDispatchFunc&#160;()</title>
<indexterm zone="GDBusSubtreeDispatchFunc" role="2.26"><primary sortas="DBusSubtreeDispatchFunc">GDBusSubtreeDispatchFunc</primary></indexterm>
<programlisting language="C">const <link linkend="GDBusInterfaceVTable"><returnvalue>GDBusInterfaceVTable</returnvalue></link>&#160;*
<phrase role="c_punctuation">(</phrase>*GDBusSubtreeDispatchFunc<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *sender</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *interface_name</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *node</parameter>,
                             <parameter><link linkend="gpointer"><type>gpointer</type></link> *out_user_data</parameter>,
                             <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>);</programlisting>
<para>The type of the <parameter>dispatch</parameter>
 function in <link linkend="GDBusSubtreeVTable"><type>GDBusSubtreeVTable</type></link>.</para>
<para>Subtrees are flat.  <parameter>node</parameter>
, if non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>, is always exactly one
segment of the object path (ie: it never contains a slash).</para>
<refsect3 id="GDBusSubtreeDispatchFunc.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>A <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sender</para></entry>
<entry role="parameter_description"><para>The unique bus name of the remote caller.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>The object path that was registered with <link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface_name</para></entry>
<entry role="parameter_description"><para>The D-Bus interface name that the method call or property access is for.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>A node that is a child of <parameter>object_path</parameter>
(relative to <parameter>object_path</parameter>
) or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for the root of the subtree.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out_user_data</para></entry>
<entry role="parameter_description"><para>Return location for user data to pass to functions in the returned <link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link> (never <link linkend="NULL:CAPS"><literal>NULL</literal></link>). </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>not optional</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>The <parameter>user_data</parameter>
<link linkend="gpointer"><type>gpointer</type></link> passed to <link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="GDBusSubtreeDispatchFunc.returns" role="returns">
<title>Returns</title>
<para> A <link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link> or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if you don't want to handle the methods.</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-register-subtree" role="function" condition="since:2.26">
<title>g_dbus_connection_register_subtree&#160;()</title>
<indexterm zone="g-dbus-connection-register-subtree" role="2.26"><primary sortas="dbus_connection_register_subtree">g_dbus_connection_register_subtree</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
g_dbus_connection_register_subtree (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *object_path</parameter>,
                                    <parameter>const <link linkend="GDBusSubtreeVTable"><type>GDBusSubtreeVTable</type></link> *vtable</parameter>,
                                    <parameter><link linkend="GDBusSubtreeFlags"><type>GDBusSubtreeFlags</type></link> flags</parameter>,
                                    <parameter><link linkend="gpointer"><type>gpointer</type></link> user_data</parameter>,
                                    <parameter><link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> user_data_free_func</parameter>,
                                    <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Registers a whole subtree of dynamic objects.</para>
<para>The <parameter>enumerate</parameter>
 and <parameter>introspection</parameter>
 functions in <parameter>vtable</parameter>
 are used to
convey, to remote callers, what nodes exist in the subtree rooted
by <parameter>object_path</parameter>
.</para>
<para>When handling remote calls into any node in the subtree, first the
<parameter>enumerate</parameter>
 function is used to check if the node exists. If the node exists
or the <link linkend="G-DBUS-SUBTREE-FLAGS-DISPATCH-TO-UNENUMERATED-NODES:CAPS"><type>G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES</type></link> flag is set
the <parameter>introspection</parameter>
 function is used to check if the node supports the
requested method. If so, the <parameter>dispatch</parameter>
 function is used to determine
where to dispatch the call. The collected <link linkend="GDBusInterfaceVTable"><type>GDBusInterfaceVTable</type></link> and
<link linkend="gpointer"><type>gpointer</type></link> will be used to call into the interface vtable for processing
the request.</para>
<para>All calls into user-provided code will be invoked in the
<link linkend="g-main-context-push-thread-default">thread-default main context</link>
of the thread you are calling this method from.</para>
<para>If an existing subtree is already registered at <parameter>object_path</parameter>
 or
then <parameter>error</parameter>
 is set to <link linkend="G-IO-ERROR-EXISTS:CAPS"><type>G_IO_ERROR_EXISTS</type></link>.</para>
<para>Note that it is valid to register regular objects (using
<link linkend="g-dbus-connection-register-object"><function>g_dbus_connection_register_object()</function></link>) in a subtree registered with
<link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link> - if so, the subtree handler
is tried as the last resort. One way to think about a subtree
handler is to consider it a fallback handler for object paths not
registered via <link linkend="g-dbus-connection-register-object"><function>g_dbus_connection_register_object()</function></link> or other bindings.</para>
<para>Note that <parameter>vtable</parameter>
 will be copied so you cannot change it after
registration.</para>
<para>See this <link linkend="gdbus-subtree-server">server</link> for an example of how to use
this method.</para>
<refsect3 id="g-dbus-connection-register-subtree.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object_path</para></entry>
<entry role="parameter_description"><para>the object path to register the subtree at</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>vtable</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusSubtreeVTable"><type>GDBusSubtreeVTable</type></link> to enumerate, introspect and
dispatch nodes in the subtree</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flags</para></entry>
<entry role="parameter_description"><para>flags used to fine tune the behavior of the subtree</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data</para></entry>
<entry role="parameter_description"><para>data to pass to functions in <parameter>vtable</parameter>
</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_data_free_func</para></entry>
<entry role="parameter_description"><para>function to call when the subtree is unregistered</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>return location for error or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-register-subtree.returns" role="returns">
<title>Returns</title>
<para> 0 if <parameter>error</parameter>
is set, otherwise a subtree registration id (never 0)
that can be used with <link linkend="g-dbus-connection-unregister-subtree"><function>g_dbus_connection_unregister_subtree()</function></link> .</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="g-dbus-connection-unregister-subtree" role="function" condition="since:2.26">
<title>g_dbus_connection_unregister_subtree&#160;()</title>
<indexterm zone="g-dbus-connection-unregister-subtree" role="2.26"><primary sortas="dbus_connection_unregister_subtree">g_dbus_connection_unregister_subtree</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_dbus_connection_unregister_subtree (<parameter><link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection</parameter>,
                                      <parameter><link linkend="guint"><type>guint</type></link> registration_id</parameter>);</programlisting>
<para>Unregisters a subtree.</para>
<refsect3 id="g-dbus-connection-unregister-subtree.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>a <link linkend="GDBusConnection"><type>GDBusConnection</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>registration_id</para></entry>
<entry role="parameter_description"><para>a subtree registration id obtained from
<link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-dbus-connection-unregister-subtree.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the subtree was unregistered, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>

</refsect1>
<refsect1 id="GDBusConnection.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GBusType" role="enum" condition="since:2.26">
<title>enum GBusType</title>
<indexterm zone="GBusType" role="2.26"><primary sortas="BusType">GBusType</primary></indexterm>
<para>An enumeration for well-known message buses.</para>
<refsect3 id="GBusType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-BUS-TYPE-STARTER:CAPS">G_BUS_TYPE_STARTER</para></entry>
<entry role="enum_member_description"><para>An alias for the message bus that activated the process, if any.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-BUS-TYPE-NONE:CAPS">G_BUS_TYPE_NONE</para></entry>
<entry role="enum_member_description"><para>Not a message bus.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-BUS-TYPE-SYSTEM:CAPS">G_BUS_TYPE_SYSTEM</para></entry>
<entry role="enum_member_description"><para>The system-wide message bus.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-BUS-TYPE-SESSION:CAPS">G_BUS_TYPE_SESSION</para></entry>
<entry role="enum_member_description"><para>The login session message bus.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection-struct" role="struct">
<title>GDBusConnection</title>
<indexterm zone="GDBusConnection-struct" role="2.26"><primary sortas="DBusConnection">GDBusConnection</primary></indexterm>
<programlisting language="C">typedef struct _GDBusConnection GDBusConnection;</programlisting>
<para>The <link linkend="GDBusConnection"><type>GDBusConnection</type></link> structure contains only private data and
should only be accessed using the provided API.</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnectionFlags" role="enum" condition="since:2.26">
<title>enum GDBusConnectionFlags</title>
<indexterm zone="GDBusConnectionFlags" role="2.26"><primary sortas="DBusConnectionFlags">GDBusConnectionFlags</primary></indexterm>
<para>Flags used when creating a new <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para>
<refsect3 id="GDBusConnectionFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CONNECTION-FLAGS-NONE:CAPS">G_DBUS_CONNECTION_FLAGS_NONE</para></entry>
<entry role="enum_member_description"><para>No flags set.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-CLIENT:CAPS">G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT</para></entry>
<entry role="enum_member_description"><para>Perform authentication against server.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-SERVER:CAPS">G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER</para></entry>
<entry role="enum_member_description"><para>Perform authentication against client.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-ALLOW-ANONYMOUS:CAPS">G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS</para></entry>
<entry role="enum_member_description"><para>When
authenticating as a server, allow the anonymous authentication
method.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CONNECTION-FLAGS-MESSAGE-BUS-CONNECTION:CAPS">G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION</para></entry>
<entry role="enum_member_description"><para>Pass this flag if connecting to a peer that is a
message bus. This means that the <link linkend="Hello"><function>Hello()</function></link> method will be invoked as part of the connection setup.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CONNECTION-FLAGS-DELAY-MESSAGE-PROCESSING:CAPS">G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING</para></entry>
<entry role="enum_member_description"><para>If set, processing of D-Bus messages is
delayed until <link linkend="g-dbus-connection-start-message-processing"><function>g_dbus_connection_start_message_processing()</function></link> is called.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusCapabilityFlags" role="enum" condition="since:2.26">
<title>enum GDBusCapabilityFlags</title>
<indexterm zone="GDBusCapabilityFlags" role="2.26"><primary sortas="DBusCapabilityFlags">GDBusCapabilityFlags</primary></indexterm>
<para>Capabilities negotiated with the remote peer.</para>
<refsect3 id="GDBusCapabilityFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CAPABILITY-FLAGS-NONE:CAPS">G_DBUS_CAPABILITY_FLAGS_NONE</para></entry>
<entry role="enum_member_description"><para>No flags set.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CAPABILITY-FLAGS-UNIX-FD-PASSING:CAPS">G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING</para></entry>
<entry role="enum_member_description"><para>The connection
supports exchanging UNIX file descriptors with the remote peer.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusCallFlags" role="enum" condition="since:2.26">
<title>enum GDBusCallFlags</title>
<indexterm zone="GDBusCallFlags" role="2.26"><primary sortas="DBusCallFlags">GDBusCallFlags</primary></indexterm>
<para>Flags used in <link linkend="g-dbus-connection-call"><function>g_dbus_connection_call()</function></link> and similar APIs.</para>
<refsect3 id="GDBusCallFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CALL-FLAGS-NONE:CAPS">G_DBUS_CALL_FLAGS_NONE</para></entry>
<entry role="enum_member_description"><para>No flags set.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CALL-FLAGS-NO-AUTO-START:CAPS">G_DBUS_CALL_FLAGS_NO_AUTO_START</para></entry>
<entry role="enum_member_description"><para>The bus must not launch
an owner for the destination name in response to this method
invocation.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-CALL-FLAGS-ALLOW-INTERACTIVE-AUTHORIZATION:CAPS">G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION</para></entry>
<entry role="enum_member_description"><para>the caller is prepared to
wait for interactive authorization. Since 2.46.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusSignalFlags" role="enum" condition="since:2.26">
<title>enum GDBusSignalFlags</title>
<indexterm zone="GDBusSignalFlags" role="2.26"><primary sortas="DBusSignalFlags">GDBusSignalFlags</primary></indexterm>
<para>Flags used when subscribing to signals via <link linkend="g-dbus-connection-signal-subscribe"><function>g_dbus_connection_signal_subscribe()</function></link>.</para>
<refsect3 id="GDBusSignalFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SIGNAL-FLAGS-NONE:CAPS">G_DBUS_SIGNAL_FLAGS_NONE</para></entry>
<entry role="enum_member_description"><para>No flags set.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SIGNAL-FLAGS-NO-MATCH-RULE:CAPS">G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE</para></entry>
<entry role="enum_member_description"><para>Don't actually send the AddMatch
D-Bus call for this signal subscription.  This gives you more control
over which match rules you add (but you must add them manually).</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SIGNAL-FLAGS-MATCH-ARG0-NAMESPACE:CAPS">G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE</para></entry>
<entry role="enum_member_description"><para>Match first arguments that
contain a bus or interface name with the given namespace.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SIGNAL-FLAGS-MATCH-ARG0-PATH:CAPS">G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH</para></entry>
<entry role="enum_member_description"><para>Match first arguments that
contain an object path that is either equivalent to the given path,
or one of the paths is a subpath of the other.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusSendMessageFlags" role="enum" condition="since:2.26">
<title>enum GDBusSendMessageFlags</title>
<indexterm zone="GDBusSendMessageFlags" role="2.26"><primary sortas="DBusSendMessageFlags">GDBusSendMessageFlags</primary></indexterm>
<para>Flags used when sending <link linkend="GDBusMessages"><type>GDBusMessages</type></link> on a <link linkend="GDBusConnection"><type>GDBusConnection</type></link>.</para>
<refsect3 id="GDBusSendMessageFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SEND-MESSAGE-FLAGS-NONE:CAPS">G_DBUS_SEND_MESSAGE_FLAGS_NONE</para></entry>
<entry role="enum_member_description"><para>No flags set.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SEND-MESSAGE-FLAGS-PRESERVE-SERIAL:CAPS">G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL</para></entry>
<entry role="enum_member_description"><para>Do not automatically
assign a serial number from the <link linkend="GDBusConnection"><type>GDBusConnection</type></link> object when
sending a message.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusInterfaceVTable" role="struct" condition="since:2.26">
<title>GDBusInterfaceVTable</title>
<indexterm zone="GDBusInterfaceVTable" role="2.26"><primary sortas="DBusInterfaceVTable">GDBusInterfaceVTable</primary></indexterm>
<programlisting language="C">typedef struct {
  GDBusInterfaceMethodCallFunc  method_call;
  GDBusInterfaceGetPropertyFunc get_property;
  GDBusInterfaceSetPropertyFunc set_property;
} GDBusInterfaceVTable;
</programlisting>
<para>Virtual table for handling properties and method calls for a D-Bus
interface.</para>
<para>Since 2.38, if you want to handle getting/setting D-Bus properties
asynchronously, give <link linkend="NULL:CAPS"><literal>NULL</literal></link> as your <link linkend="get-property"><function>get_property()</function></link> or <link linkend="set-property"><function>set_property()</function></link>
function. The D-Bus call will be directed to your <parameter>method_call</parameter>
 function,
with the provided <parameter>interface_name</parameter>
 set to "org.freedesktop.DBus.Properties".</para>
<para>Ownership of the <link linkend="GDBusMethodInvocation"><type>GDBusMethodInvocation</type></link> object passed to the
<link linkend="method-call"><function>method_call()</function></link> function is transferred to your handler; you must
call one of the methods of <link linkend="GDBusMethodInvocation"><type>GDBusMethodInvocation</type></link> to return a reply
(possibly empty), or an error. These functions also take ownership
of the passed-in invocation object, so unless the invocation
object has otherwise been referenced, it will be then be freed.
Calling one of these functions may be done within your
<link linkend="method-call"><function>method_call()</function></link> implementation but it also can be done at a later
point to handle the method asynchronously.</para>
<para>The usual checks on the validity of the calls is performed. For
<literal>Get</literal> calls, an error is automatically returned if the property does
not exist or the permissions do not allow access. The same checks are
performed for <literal>Set</literal> calls, and the provided value is also checked for
being the correct type.</para>
<para>For both <literal>Get</literal> and <literal>Set</literal> calls, the <link linkend="GDBusMethodInvocation"><type>GDBusMethodInvocation</type></link>
passed to the <parameter>method_call</parameter>
 handler can be queried with
<link linkend="g-dbus-method-invocation-get-property-info"><function>g_dbus_method_invocation_get_property_info()</function></link> to get a pointer
to the <link linkend="GDBusPropertyInfo"><type>GDBusPropertyInfo</type></link> of the property.</para>
<para>If you have readable properties specified in your interface info,
you must ensure that you either provide a non-<link linkend="NULL:CAPS"><literal>NULL</literal></link> <parameter><link linkend="get-property"><function>get_property()</function></link></parameter>

function or provide implementations of both the <literal>Get</literal> and <literal>GetAll</literal>
methods on org.freedesktop.DBus.Properties interface in your <parameter>method_call</parameter>

function. Note that the required return type of the <literal>Get</literal> call is
<literal>(v)</literal>, not the type of the property. <literal>GetAll</literal> expects a return value
of type <literal>a{sv}</literal>.</para>
<para>If you have writable properties specified in your interface info,
you must ensure that you either provide a non-<link linkend="NULL:CAPS"><literal>NULL</literal></link> <parameter><link linkend="set-property"><function>set_property()</function></link></parameter>

function or provide an implementation of the <literal>Set</literal> call. If implementing
the call, you must return the value of type <link linkend="G-VARIANT-TYPE-UNIT:CAPS"><literal>G_VARIANT_TYPE_UNIT</literal></link>.</para>
<refsect3 id="GDBusInterfaceVTable.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="GDBusInterfaceMethodCallFunc"><type>GDBusInterfaceMethodCallFunc</type></link>&#160;<structfield id="GDBusInterfaceVTable.method-call">method_call</structfield>;</para></entry>
<entry role="struct_member_description"><para>Function for handling incoming method calls.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GDBusInterfaceGetPropertyFunc"><type>GDBusInterfaceGetPropertyFunc</type></link>&#160;<structfield id="GDBusInterfaceVTable.get-property">get_property</structfield>;</para></entry>
<entry role="struct_member_description"><para>Function for getting a property.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GDBusInterfaceSetPropertyFunc"><type>GDBusInterfaceSetPropertyFunc</type></link>&#160;<structfield id="GDBusInterfaceVTable.set-property">set_property</structfield>;</para></entry>
<entry role="struct_member_description"><para>Function for setting a property.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusSubtreeVTable" role="struct" condition="since:2.26">
<title>GDBusSubtreeVTable</title>
<indexterm zone="GDBusSubtreeVTable" role="2.26"><primary sortas="DBusSubtreeVTable">GDBusSubtreeVTable</primary></indexterm>
<programlisting language="C">typedef struct {
  GDBusSubtreeEnumerateFunc  enumerate;
  GDBusSubtreeIntrospectFunc introspect;
  GDBusSubtreeDispatchFunc   dispatch;
} GDBusSubtreeVTable;
</programlisting>
<para>Virtual table for handling subtrees registered with <link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link>.</para>
<refsect3 id="GDBusSubtreeVTable.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><link linkend="GDBusSubtreeEnumerateFunc"><type>GDBusSubtreeEnumerateFunc</type></link>&#160;<structfield id="GDBusSubtreeVTable.enumerate">enumerate</structfield>;</para></entry>
<entry role="struct_member_description"><para>Function for enumerating child nodes.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GDBusSubtreeIntrospectFunc"><type>GDBusSubtreeIntrospectFunc</type></link>&#160;<structfield id="GDBusSubtreeVTable.introspect">introspect</structfield>;</para></entry>
<entry role="struct_member_description"><para>Function for introspecting a child node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><link linkend="GDBusSubtreeDispatchFunc"><type>GDBusSubtreeDispatchFunc</type></link>&#160;<structfield id="GDBusSubtreeVTable.dispatch">dispatch</structfield>;</para></entry>
<entry role="struct_member_description"><para>Function for dispatching a remote call on a child node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusSubtreeFlags" role="enum" condition="since:2.26">
<title>enum GDBusSubtreeFlags</title>
<indexterm zone="GDBusSubtreeFlags" role="2.26"><primary sortas="DBusSubtreeFlags">GDBusSubtreeFlags</primary></indexterm>
<para>Flags passed to <link linkend="g-dbus-connection-register-subtree"><function>g_dbus_connection_register_subtree()</function></link>.</para>
<refsect3 id="GDBusSubtreeFlags.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SUBTREE-FLAGS-NONE:CAPS">G_DBUS_SUBTREE_FLAGS_NONE</para></entry>
<entry role="enum_member_description"><para>No flags set.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="G-DBUS-SUBTREE-FLAGS-DISPATCH-TO-UNENUMERATED-NODES:CAPS">G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES</para></entry>
<entry role="enum_member_description"><para>Method calls to objects not in the enumerated range
                                                      will still be dispatched. This is useful if you want
                                                      to dynamically spawn objects in the subtree.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>

</refsect1>
<refsect1 id="GDBusConnection.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GDBusConnection--address" role="property"><title>The <literal>“address”</literal> property</title>
<indexterm zone="GDBusConnection--address" role="2.26"><primary sortas="DBusConnection:address">GDBusConnection:address</primary></indexterm>
<programlisting>  “address”                  <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>A D-Bus address specifying potential endpoints that can be used
when establishing the connection.</para>
<para>Flags: Write / Construct Only</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection--authentication-observer" role="property"><title>The <literal>“authentication-observer”</literal> property</title>
<indexterm zone="GDBusConnection--authentication-observer" role="2.26"><primary sortas="DBusConnection:authentication-observer">GDBusConnection:authentication-observer</primary></indexterm>
<programlisting>  “authentication-observer”  <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link>&#160;*</programlisting>
<para>A <link linkend="GDBusAuthObserver"><type>GDBusAuthObserver</type></link> object to assist in the authentication process or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>Flags: Write / Construct Only</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection--capabilities" role="property"><title>The <literal>“capabilities”</literal> property</title>
<indexterm zone="GDBusConnection--capabilities" role="2.26"><primary sortas="DBusConnection:capabilities">GDBusConnection:capabilities</primary></indexterm>
<programlisting>  “capabilities”             <link linkend="GDBusCapabilityFlags"><type>GDBusCapabilityFlags</type></link></programlisting>
<para>Flags from the <link linkend="GDBusCapabilityFlags"><type>GDBusCapabilityFlags</type></link> enumeration
representing connection features negotiated with the other peer.</para>
<para>Flags: Read</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection--closed" role="property"><title>The <literal>“closed”</literal> property</title>
<indexterm zone="GDBusConnection--closed" role="2.26"><primary sortas="DBusConnection:closed">GDBusConnection:closed</primary></indexterm>
<programlisting>  “closed”                   <link linkend="gboolean"><type>gboolean</type></link></programlisting>
<para>A boolean specifying whether the connection has been closed.</para>
<para>Flags: Read</para>
<para>Default value: FALSE</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection--exit-on-close" role="property"><title>The <literal>“exit-on-close”</literal> property</title>
<indexterm zone="GDBusConnection--exit-on-close" role="2.26"><primary sortas="DBusConnection:exit-on-close">GDBusConnection:exit-on-close</primary></indexterm>
<programlisting>  “exit-on-close”            <link linkend="gboolean"><type>gboolean</type></link></programlisting>
<para>A boolean specifying whether the process will be terminated (by
calling <literal>raise(SIGTERM)</literal>) if the connection is closed by the
remote peer.</para>
<para>Note that <link linkend="GDBusConnection"><type>GDBusConnection</type></link> objects returned by <link linkend="g-bus-get-finish"><function>g_bus_get_finish()</function></link>
and <link linkend="g-bus-get-sync"><function>g_bus_get_sync()</function></link> will (usually) have this property set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<para>Flags: Read / Write</para>
<para>Default value: FALSE</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection--flags" role="property"><title>The <literal>“flags”</literal> property</title>
<indexterm zone="GDBusConnection--flags" role="2.26"><primary sortas="DBusConnection:flags">GDBusConnection:flags</primary></indexterm>
<programlisting>  “flags”                    <link linkend="GDBusConnectionFlags"><type>GDBusConnectionFlags</type></link></programlisting>
<para>Flags from the <link linkend="GDBusConnectionFlags"><type>GDBusConnectionFlags</type></link> enumeration.</para>
<para>Flags: Write / Construct Only</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection--guid" role="property"><title>The <literal>“guid”</literal> property</title>
<indexterm zone="GDBusConnection--guid" role="2.26"><primary sortas="DBusConnection:guid">GDBusConnection:guid</primary></indexterm>
<programlisting>  “guid”                     <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The GUID of the peer performing the role of server when
authenticating.</para>
<para>If you are constructing a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> and pass
<link linkend="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-SERVER:CAPS"><literal>G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER</literal></link> in the
<link linkend="GDBusConnection--flags"><type>“flags”</type></link> property then you MUST also set this
property to a valid guid.</para>
<para>If you are constructing a <link linkend="GDBusConnection"><type>GDBusConnection</type></link> and pass
<link linkend="G-DBUS-CONNECTION-FLAGS-AUTHENTICATION-CLIENT:CAPS"><literal>G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT</literal></link> in the
<link linkend="GDBusConnection--flags"><type>“flags”</type></link> property you will be able to read the GUID
of the other peer here after the connection has been successfully
initialized.</para>
<para>Flags: Read / Write / Construct Only</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection--stream" role="property"><title>The <literal>“stream”</literal> property</title>
<indexterm zone="GDBusConnection--stream" role="2.26"><primary sortas="DBusConnection:stream">GDBusConnection:stream</primary></indexterm>
<programlisting>  “stream”                   <link linkend="GIOStream"><type>GIOStream</type></link>&#160;*</programlisting>
<para>The underlying <link linkend="GIOStream"><type>GIOStream</type></link> used for I/O.</para>
<para>If this is passed on construction and is a <link linkend="GSocketConnection"><type>GSocketConnection</type></link>,
then the corresponding <link linkend="GSocket"><type>GSocket</type></link> will be put into non-blocking mode.</para>
<para>While the <link linkend="GDBusConnection"><type>GDBusConnection</type></link> is active, it will interact with this
stream from a worker thread, so it is not safe to interact with
the stream directly.</para>
<para>Flags: Read / Write / Construct Only</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
<refsect2 id="GDBusConnection--unique-name" role="property"><title>The <literal>“unique-name”</literal> property</title>
<indexterm zone="GDBusConnection--unique-name" role="2.26"><primary sortas="DBusConnection:unique-name">GDBusConnection:unique-name</primary></indexterm>
<programlisting>  “unique-name”              <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The unique name as assigned by the message bus or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
connection is not open or not a message bus connection.</para>
<para>Flags: Read</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>

</refsect1>
<refsect1 id="GDBusConnection.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GDBusConnection-closed" role="signal"><title>The <literal>“closed”</literal> signal</title>
<indexterm zone="GDBusConnection-closed" role="2.26"><primary sortas="DBusConnection::closed">GDBusConnection::closed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="GDBusConnection"><type>GDBusConnection</type></link> *connection,
               <link linkend="gboolean"><type>gboolean</type></link>         remote_peer_vanished,
               <link linkend="GError"><type>GError</type></link>          *error,
               <link linkend="gpointer"><type>gpointer</type></link>         user_data)</programlisting>
<para>Emitted when the connection is closed.</para>
<para>The cause of this event can be</para>
<itemizedlist>
<listitem>
<para>If <link linkend="g-dbus-connection-close"><function>g_dbus_connection_close()</function></link> is called. In this case
<parameter>remote_peer_vanished</parameter>
 is set to <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> and <parameter>error</parameter>
 is <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
</listitem>
<listitem>
<para>If the remote peer closes the connection. In this case
<parameter>remote_peer_vanished</parameter>
 is set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> and <parameter>error</parameter>
 is set.</para>
</listitem>
<listitem>
<para>If the remote peer sends invalid or malformed data. In this
case <parameter>remote_peer_vanished</parameter>
 is set to <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> and <parameter>error</parameter>
 is set.</para>
</listitem>
</itemizedlist>
<para>Upon receiving this signal, you should give up your reference to
<parameter>connection</parameter>
. You are guaranteed that this signal is emitted only
once.</para>
<refsect3 id="GDBusConnection-closed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>the <link linkend="GDBusConnection"><type>GDBusConnection</type></link> emitting the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>remote_peer_vanished</para></entry>
<entry role="parameter_description"><para><link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>connection</parameter>
is closed because the
remote peer closed its end of the connection</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a <link linkend="GError"><type>GError</type></link> with more details about the event or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
<para role="since">Since: <link linkend="api-index-2.26">2.26</link></para></refsect2>
</refsect1>

</refentry>
