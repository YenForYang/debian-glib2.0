<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC '-//OASIS//DTD DocBook XML V4.5//EN'
                      'http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd' [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GAction">
<refmeta>
<refentrytitle role="top_of_page" id="GAction.top_of_page">GAction</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>GAction</refname>
<refpurpose>An action interface</refpurpose>
</refnamediv>

<refsect1 id="GAction.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-action-name-is-valid">g_action_name_is_valid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-action-get-name">g_action_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="GVariantType"><returnvalue>GVariantType</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-action-get-parameter-type">g_action_get_parameter_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="GVariantType"><returnvalue>GVariantType</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-action-get-state-type">g_action_get_state_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-action-get-state-hint">g_action_get_state_hint</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-action-get-enabled">g_action_get_enabled</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-action-get-state">g_action_get_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-action-change-state">g_action_change_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-action-activate">g_action_activate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="g-action-parse-detailed-name">g_action_parse_detailed_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="g-action-print-detailed-name">g_action_print_detailed_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GAction.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="gboolean"><type>gboolean</type></link></entry><entry role="property_name"><link linkend="GAction--enabled">enabled</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="GAction--name">name</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="GVariantType"><type>GVariantType</type></link>&#160;*</entry><entry role="property_name"><link linkend="GAction--parameter-type">parameter-type</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="GVariant"><type>GVariant</type></link>&#160;*</entry><entry role="property_name"><link linkend="GAction--state">state</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="GVariantType"><type>GVariantType</type></link>&#160;*</entry><entry role="property_name"><link linkend="GAction--state-type">state-type</link></entry><entry role="property_flags">Read</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GAction.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="GAction-struct">GAction</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="GActionInterface">GActionInterface</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="GAction.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GInterface">GInterface</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> GAction
</screen>
</refsect1>
<refsect1 id="GAction.prerequisites" role="prerequisites">
<title role="prerequisites.title">Prerequisites</title>
<para>
GAction requires
 <link linkend="GObject">GObject</link>.</para>

</refsect1>
<refsect1 id="GAction.implementations" role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
GAction is implemented by
 <link linkend="GPropertyAction">GPropertyAction</link> and  <link linkend="GSimpleAction">GSimpleAction</link>.</para>

</refsect1>

<refsect1 id="GAction.includes"><title>Includes</title><synopsis>#include &lt;gio/gio.h&gt;
</synopsis></refsect1>

<refsect1 id="GAction.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="GAction"><type>GAction</type></link> represents a single named action.</para>
<para>The main interface to an action is that it can be activated with
<link linkend="g-action-activate"><function>g_action_activate()</function></link>.  This results in the 'activate' signal being
emitted.  An activation has a <link linkend="GVariant"><type>GVariant</type></link> parameter (which may be
<link linkend="NULL:CAPS"><literal>NULL</literal></link>).  The correct type for the parameter is determined by a static
parameter type (which is given at construction time).</para>
<para>An action may optionally have a state, in which case the state may be
set with <link linkend="g-action-change-state"><function>g_action_change_state()</function></link>.  This call takes a <link linkend="GVariant"><type>GVariant</type></link>.  The
correct type for the state is determined by a static state type
(which is given at construction time).</para>
<para>The state may have a hint associated with it, specifying its valid
range.</para>
<para><link linkend="GAction"><type>GAction</type></link> is merely the interface to the concept of an action, as
described above.  Various implementations of actions exist, including
<link linkend="GSimpleAction"><type>GSimpleAction</type></link>.</para>
<para>In all cases, the implementing class is responsible for storing the
name of the action, the parameter type, the enabled state, the
optional state type and the state and emitting the appropriate
signals when these change.  The implementor is responsible for filtering
calls to <link linkend="g-action-activate"><function>g_action_activate()</function></link> and <link linkend="g-action-change-state"><function>g_action_change_state()</function></link> for type
safety and for the state being enabled.</para>
<para>Probably the only useful thing to do with a <link linkend="GAction"><type>GAction</type></link> is to put it
inside of a <link linkend="GSimpleActionGroup"><type>GSimpleActionGroup</type></link>.</para>

</refsect1>
<refsect1 id="GAction.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="g-action-name-is-valid" role="function" condition="since:2.38">
<title>g_action_name_is_valid&#160;()</title>
<indexterm zone="g-action-name-is-valid" role="2.38"><primary sortas="action_name_is_valid">g_action_name_is_valid</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_action_name_is_valid (<parameter>const <link linkend="gchar"><type>gchar</type></link> *action_name</parameter>);</programlisting>
<para>Checks if <parameter>action_name</parameter>
 is valid.</para>
<para><parameter>action_name</parameter>
 is valid if it consists only of alphanumeric characters,
plus '-' and '.'.  The empty string is not a valid action name.</para>
<para>It is an error to call this function with a non-utf8 <parameter>action_name</parameter>
.
<parameter>action_name</parameter>
 must not be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="g-action-name-is-valid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action_name</para></entry>
<entry role="parameter_description"><para>an potential action name</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-name-is-valid.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>action_name</parameter>
is valid</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.38">2.38</link></para></refsect2>
<refsect2 id="g-action-get-name" role="function" condition="since:2.28">
<title>g_action_get_name&#160;()</title>
<indexterm zone="g-action-get-name" role="2.28"><primary sortas="action_get_name">g_action_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
g_action_get_name (<parameter><link linkend="GAction"><type>GAction</type></link> *action</parameter>);</programlisting>
<para>Queries the name of <parameter>action</parameter>
.</para>
<refsect3 id="g-action-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAction"><type>GAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-get-name.returns" role="returns">
<title>Returns</title>
<para> the name of the action</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-action-get-parameter-type" role="function" condition="since:2.28">
<title>g_action_get_parameter_type&#160;()</title>
<indexterm zone="g-action-get-parameter-type" role="2.28"><primary sortas="action_get_parameter_type">g_action_get_parameter_type</primary></indexterm>
<programlisting language="C">const <link linkend="GVariantType"><returnvalue>GVariantType</returnvalue></link>&#160;*
g_action_get_parameter_type (<parameter><link linkend="GAction"><type>GAction</type></link> *action</parameter>);</programlisting>
<para>Queries the type of the parameter that must be given when activating
<parameter>action</parameter>
.</para>
<para>When activating the action using <link linkend="g-action-activate"><function>g_action_activate()</function></link>, the <link linkend="GVariant"><type>GVariant</type></link>
given to that function must be of the type returned by this function.</para>
<para>In the case that this function returns <link linkend="NULL:CAPS"><literal>NULL</literal></link>, you must not give any
<link linkend="GVariant"><type>GVariant</type></link>, but <link linkend="NULL:CAPS"><literal>NULL</literal></link> instead.</para>
<refsect3 id="g-action-get-parameter-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAction"><type>GAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-get-parameter-type.returns" role="returns">
<title>Returns</title>
<para>the parameter type. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-action-get-state-type" role="function" condition="since:2.28">
<title>g_action_get_state_type&#160;()</title>
<indexterm zone="g-action-get-state-type" role="2.28"><primary sortas="action_get_state_type">g_action_get_state_type</primary></indexterm>
<programlisting language="C">const <link linkend="GVariantType"><returnvalue>GVariantType</returnvalue></link>&#160;*
g_action_get_state_type (<parameter><link linkend="GAction"><type>GAction</type></link> *action</parameter>);</programlisting>
<para>Queries the type of the state of <parameter>action</parameter>
.</para>
<para>If the action is stateful (e.g. created with
<link linkend="g-simple-action-new-stateful"><function>g_simple_action_new_stateful()</function></link>) then this function returns the
<link linkend="GVariantType"><type>GVariantType</type></link> of the state.  This is the type of the initial value
given as the state. All calls to <link linkend="g-action-change-state"><function>g_action_change_state()</function></link> must give a
<link linkend="GVariant"><type>GVariant</type></link> of this type and <link linkend="g-action-get-state"><function>g_action_get_state()</function></link> will return a
<link linkend="GVariant"><type>GVariant</type></link> of the same type.</para>
<para>If the action is not stateful (e.g. created with <link linkend="g-simple-action-new"><function>g_simple_action_new()</function></link>)
then this function will return <link linkend="NULL:CAPS"><literal>NULL</literal></link>. In that case, <link linkend="g-action-get-state"><function>g_action_get_state()</function></link>
will return <link linkend="NULL:CAPS"><literal>NULL</literal></link> and you must not call <link linkend="g-action-change-state"><function>g_action_change_state()</function></link>.</para>
<refsect3 id="g-action-get-state-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAction"><type>GAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-get-state-type.returns" role="returns">
<title>Returns</title>
<para>the state type, if the action is stateful. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-action-get-state-hint" role="function" condition="since:2.28">
<title>g_action_get_state_hint&#160;()</title>
<indexterm zone="g-action-get-state-hint" role="2.28"><primary sortas="action_get_state_hint">g_action_get_state_hint</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
g_action_get_state_hint (<parameter><link linkend="GAction"><type>GAction</type></link> *action</parameter>);</programlisting>
<para>Requests a hint about the valid range of values for the state of
<parameter>action</parameter>
.</para>
<para>If <link linkend="NULL:CAPS"><literal>NULL</literal></link> is returned it either means that the action is not stateful
or that there is no hint about the valid range of values for the
state of the action.</para>
<para>If a <link linkend="GVariant"><type>GVariant</type></link> array is returned then each item in the array is a
possible value for the state.  If a <link linkend="GVariant"><type>GVariant</type></link> pair (ie: two-tuple) is
returned then the tuple specifies the inclusive lower and upper bound
of valid values for the state.</para>
<para>In any case, the information is merely a hint.  It may be possible to
have a state value outside of the hinted range and setting a value
within the range may fail.</para>
<para>The return value (if non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>) should be freed with
<link linkend="g-variant-unref"><function>g_variant_unref()</function></link> when it is no longer required.</para>
<refsect3 id="g-action-get-state-hint.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAction"><type>GAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-get-state-hint.returns" role="returns">
<title>Returns</title>
<para>the state range hint. </para>
<para><emphasis role="annotation">[<acronym>nullable</acronym>][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-action-get-enabled" role="function" condition="since:2.28">
<title>g_action_get_enabled&#160;()</title>
<indexterm zone="g-action-get-enabled" role="2.28"><primary sortas="action_get_enabled">g_action_get_enabled</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_action_get_enabled (<parameter><link linkend="GAction"><type>GAction</type></link> *action</parameter>);</programlisting>
<para>Checks if <parameter>action</parameter>
 is currently enabled.</para>
<para>An action must be enabled in order to be activated or in order to
have its state changed from outside callers.</para>
<refsect3 id="g-action-get-enabled.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAction"><type>GAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-get-enabled.returns" role="returns">
<title>Returns</title>
<para> whether the action is enabled</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-action-get-state" role="function" condition="since:2.28">
<title>g_action_get_state&#160;()</title>
<indexterm zone="g-action-get-state" role="2.28"><primary sortas="action_get_state">g_action_get_state</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
g_action_get_state (<parameter><link linkend="GAction"><type>GAction</type></link> *action</parameter>);</programlisting>
<para>Queries the current state of <parameter>action</parameter>
.</para>
<para>If the action is not stateful then <link linkend="NULL:CAPS"><literal>NULL</literal></link> will be returned.  If the
action is stateful then the type of the return value is the type
given by <link linkend="g-action-get-state-type"><function>g_action_get_state_type()</function></link>.</para>
<para>The return value (if non-<link linkend="NULL:CAPS"><literal>NULL</literal></link>) should be freed with
<link linkend="g-variant-unref"><function>g_variant_unref()</function></link> when it is no longer required.</para>
<refsect3 id="g-action-get-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAction"><type>GAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-get-state.returns" role="returns">
<title>Returns</title>
<para>the current state of the action. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-action-change-state" role="function" condition="since:2.30">
<title>g_action_change_state&#160;()</title>
<indexterm zone="g-action-change-state" role="2.30"><primary sortas="action_change_state">g_action_change_state</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_action_change_state (<parameter><link linkend="GAction"><type>GAction</type></link> *action</parameter>,
                       <parameter><link linkend="GVariant"><type>GVariant</type></link> *value</parameter>);</programlisting>
<para>Request for the state of <parameter>action</parameter>
 to be changed to <parameter>value</parameter>
.</para>
<para>The action must be stateful and <parameter>value</parameter>
 must be of the correct type.
See <link linkend="g-action-get-state-type"><function>g_action_get_state_type()</function></link>.</para>
<para>This call merely requests a change.  The action may refuse to change
its state or may change its state to something other than <parameter>value</parameter>
.
See <link linkend="g-action-get-state-hint"><function>g_action_get_state_hint()</function></link>.</para>
<para>If the <parameter>value</parameter>
 GVariant is floating, it is consumed.</para>
<refsect3 id="g-action-change-state.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAction"><type>GAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>the new state</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.30">2.30</link></para></refsect2>
<refsect2 id="g-action-activate" role="function" condition="since:2.28">
<title>g_action_activate&#160;()</title>
<indexterm zone="g-action-activate" role="2.28"><primary sortas="action_activate">g_action_activate</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
g_action_activate (<parameter><link linkend="GAction"><type>GAction</type></link> *action</parameter>,
                   <parameter><link linkend="GVariant"><type>GVariant</type></link> *parameter</parameter>);</programlisting>
<para>Activates the action.</para>
<para><parameter>parameter</parameter>
 must be the correct type of parameter for the action (ie:
the parameter type given at construction time).  If the parameter
type was <link linkend="NULL:CAPS"><literal>NULL</literal></link> then <parameter>parameter</parameter>
 must also be <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<para>If the <parameter>parameter</parameter>
 GVariant is floating, it is consumed.</para>
<refsect3 id="g-action-activate.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>a <link linkend="GAction"><type>GAction</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>parameter</para></entry>
<entry role="parameter_description"><para>the parameter to the activation. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="g-action-parse-detailed-name" role="function" condition="since:2.38">
<title>g_action_parse_detailed_name&#160;()</title>
<indexterm zone="g-action-parse-detailed-name" role="2.38"><primary sortas="action_parse_detailed_name">g_action_parse_detailed_name</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
g_action_parse_detailed_name (<parameter>const <link linkend="gchar"><type>gchar</type></link> *detailed_name</parameter>,
                              <parameter><link linkend="gchar"><type>gchar</type></link> **action_name</parameter>,
                              <parameter><link linkend="GVariant"><type>GVariant</type></link> **target_value</parameter>,
                              <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Parses a detailed action name into its separate name and target
components.</para>
<para>Detailed action names can have three formats.</para>
<para>The first format is used to represent an action name with no target
value and consists of just an action name containing no whitespace
nor the characters ':', '(' or ')'.  For example: "app.action".</para>
<para>The second format is used to represent an action with a target value
that is a non-empty string consisting only of alphanumerics, plus '-'
and '.'.  In that case, the action name and target value are
separated by a double colon ("::").  For example:
"app.action::target".</para>
<para>The third format is used to represent an action with any type of
target value, including strings.  The target value follows the action
name, surrounded in parens.  For example: "app.action(42)".  The
target value is parsed using <link linkend="g-variant-parse"><function>g_variant_parse()</function></link>.  If a tuple-typed
value is desired, it must be specified in the same way, resulting in
two sets of parens, for example: "app.action((1,2,3))".  A string
target can be specified this way as well: "app.action('target')".
For strings, this third format must be used if * target value is
empty or contains characters other than alphanumerics, '-' and '.'.</para>
<refsect3 id="g-action-parse-detailed-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>detailed_name</para></entry>
<entry role="parameter_description"><para>a detailed action name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>action_name</para></entry>
<entry role="parameter_description"><para>the action name. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>target_value</para></entry>
<entry role="parameter_description"><para>the target value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> for no target. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>error</para></entry>
<entry role="parameter_description"><para>a pointer to a <link linkend="NULL:CAPS"><literal>NULL</literal></link> <link linkend="GError"><type>GError</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-parse-detailed-name.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if successful, else <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> with <parameter>error</parameter>
set</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.38">2.38</link></para></refsect2>
<refsect2 id="g-action-print-detailed-name" role="function" condition="since:2.38">
<title>g_action_print_detailed_name&#160;()</title>
<indexterm zone="g-action-print-detailed-name" role="2.38"><primary sortas="action_print_detailed_name">g_action_print_detailed_name</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
g_action_print_detailed_name (<parameter>const <link linkend="gchar"><type>gchar</type></link> *action_name</parameter>,
                              <parameter><link linkend="GVariant"><type>GVariant</type></link> *target_value</parameter>);</programlisting>
<para>Formats a detailed action name from <parameter>action_name</parameter>
 and <parameter>target_value</parameter>
.</para>
<para>It is an error to call this function with an invalid action name.</para>
<para>This function is the opposite of <link linkend="g-action-parse-detailed-name"><function>g_action_parse_detailed_name()</function></link>.
It will produce a string that can be parsed back to the <parameter>action_name</parameter>

and <parameter>target_value</parameter>
 by that function.</para>
<para>See that function for the types of strings that will be printed by
this function.</para>
<refsect3 id="g-action-print-detailed-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action_name</para></entry>
<entry role="parameter_description"><para>a valid action name</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>target_value</para></entry>
<entry role="parameter_description"><para>a <link linkend="GVariant"><type>GVariant</type></link> target value, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>nullable</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="g-action-print-detailed-name.returns" role="returns">
<title>Returns</title>
<para> a detailed format string</para>
</refsect3><para role="since">Since: <link linkend="api-index-2.38">2.38</link></para></refsect2>

</refsect1>
<refsect1 id="GAction.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="GAction-struct" role="struct">
<title>GAction</title>
<indexterm zone="GAction-struct"><primary sortas="Action">GAction</primary></indexterm>
<programlisting language="C">typedef struct _GAction GAction;</programlisting>
<para><link linkend="GAction"><type>GAction</type></link> is an opaque data structure and can only be accessed
using the following functions.</para>
</refsect2>
<refsect2 id="GActionInterface" role="struct" condition="since:2.28">
<title>struct GActionInterface</title>
<indexterm zone="GActionInterface" role="2.28"><primary sortas="ActionInterface">GActionInterface</primary></indexterm>
<programlisting language="C">struct GActionInterface {
  GTypeInterface g_iface;

  /* virtual functions */
  const gchar *        (* get_name)             (GAction  *action);
  const GVariantType * (* get_parameter_type)   (GAction  *action);
  const GVariantType * (* get_state_type)       (GAction  *action);
  GVariant *           (* get_state_hint)       (GAction  *action);

  gboolean             (* get_enabled)          (GAction  *action);
  GVariant *           (* get_state)            (GAction  *action);

  void                 (* change_state)         (GAction  *action,
                                                 GVariant *value);
  void                 (* activate)             (GAction  *action,
                                                 GVariant *parameter);
};
</programlisting>
<para>The virtual function table for <link linkend="GAction"><type>GAction</type></link>.</para>
<refsect3 id="GActionInterface.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row role="member"><entry role="struct_member_name"><para><structfield id="GActionInterface.get-name">get_name</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>the virtual function pointer for <link linkend="g-action-get-name"><function>g_action_get_name()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GActionInterface.get-parameter-type">get_parameter_type</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>the virtual function pointer for <link linkend="g-action-get-parameter-type"><function>g_action_get_parameter_type()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GActionInterface.get-state-type">get_state_type</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>the virtual function pointer for <link linkend="g-action-get-state-type"><function>g_action_get_state_type()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GActionInterface.get-state-hint">get_state_hint</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>the virtual function pointer for <link linkend="g-action-get-state-hint"><function>g_action_get_state_hint()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GActionInterface.get-enabled">get_enabled</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>the virtual function pointer for <link linkend="g-action-get-enabled"><function>g_action_get_enabled()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GActionInterface.get-state">get_state</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>the virtual function pointer for <link linkend="g-action-get-state"><function>g_action_get_state()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GActionInterface.change-state">change_state</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>the virtual function pointer for <link linkend="g-action-change-state"><function>g_action_change_state()</function></link></para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row role="member"><entry role="struct_member_name"><para><structfield id="GActionInterface.activate">activate</structfield>&#160;()</para></entry>
<entry role="struct_member_description"><para>the virtual function pointer for <link linkend="g-action-activate"><function>g_action_activate()</function></link>.  Note that <link linkend="GAction"><type>GAction</type></link> does not have an
'activate' signal but that implementations of it may have one.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>

</refsect1>
<refsect1 id="GAction.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="GAction--enabled" role="property"><title>The <literal>“enabled”</literal> property</title>
<indexterm zone="GAction--enabled" role="2.28"><primary sortas="Action:enabled">GAction:enabled</primary></indexterm>
<programlisting>  “enabled”                  <link linkend="gboolean"><type>gboolean</type></link></programlisting>
<para>If <parameter>action</parameter>
 is currently enabled.</para>
<para>If the action is disabled then calls to <link linkend="g-action-activate"><function>g_action_activate()</function></link> and
<link linkend="g-action-change-state"><function>g_action_change_state()</function></link> have no effect.</para>
<para>Flags: Read</para>
<para>Default value: TRUE</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GAction--name" role="property"><title>The <literal>“name”</literal> property</title>
<indexterm zone="GAction--name" role="2.28"><primary sortas="Action:name">GAction:name</primary></indexterm>
<programlisting>  “name”                     <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>The name of the action.  This is mostly meaningful for identifying
the action once it has been added to a <link linkend="GActionGroup"><type>GActionGroup</type></link>. It is immutable.</para>
<para>Flags: Read</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GAction--parameter-type" role="property"><title>The <literal>“parameter-type”</literal> property</title>
<indexterm zone="GAction--parameter-type" role="2.28"><primary sortas="Action:parameter-type">GAction:parameter-type</primary></indexterm>
<programlisting>  “parameter-type”           <link linkend="GVariantType"><type>GVariantType</type></link>&#160;*</programlisting>
<para>The type of the parameter that must be given when activating the
action. This is immutable, and may be <link linkend="NULL:CAPS"><literal>NULL</literal></link> if no parameter is needed when
activating the action.</para>
<para>Flags: Read</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GAction--state" role="property"><title>The <literal>“state”</literal> property</title>
<indexterm zone="GAction--state" role="2.28"><primary sortas="Action:state">GAction:state</primary></indexterm>
<programlisting>  “state”                    <link linkend="GVariant"><type>GVariant</type></link>&#160;*</programlisting>
<para>The state of the action, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the action is stateless.</para>
<para>Flags: Read</para>
<para>Allowed values: GVariant&lt;*&gt;</para>
<para>Default value: NULL</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>
<refsect2 id="GAction--state-type" role="property"><title>The <literal>“state-type”</literal> property</title>
<indexterm zone="GAction--state-type" role="2.28"><primary sortas="Action:state-type">GAction:state-type</primary></indexterm>
<programlisting>  “state-type”               <link linkend="GVariantType"><type>GVariantType</type></link>&#160;*</programlisting>
<para>The <link linkend="GVariantType"><type>GVariantType</type></link> of the state that the action has, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if the
action is stateless. This is immutable.</para>
<para>Flags: Read</para>
<para role="since">Since: <link linkend="api-index-2.28">2.28</link></para></refsect2>

</refsect1>

</refentry>
