<SIGNAL>
<NAME>GActionGroup::action-added</NAME>
<RETURNS>void</RETURNS>
<FLAGS>ld</FLAGS>
GActionGroup *gactiongroup
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GActionGroup::action-enabled-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>ld</FLAGS>
GActionGroup *gactiongroup
gchar *arg1
gboolean  arg2
</SIGNAL>

<SIGNAL>
<NAME>GActionGroup::action-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>ld</FLAGS>
GActionGroup *gactiongroup
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GActionGroup::action-state-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>ld</FLAGS>
GActionGroup *gactiongroup
gchar *arg1
GVariant *arg2
</SIGNAL>

<SIGNAL>
<NAME>GAppInfoMonitor::changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>f</FLAGS>
GAppInfoMonitor *gappinfomonitor
</SIGNAL>

<SIGNAL>
<NAME>GAppLaunchContext::launch-failed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GAppLaunchContext *gapplaunchcontext
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GAppLaunchContext::launched</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GAppLaunchContext *gapplaunchcontext
GAppInfo *arg1
GVariant *arg2
</SIGNAL>

<SIGNAL>
<NAME>GApplication::activate</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GApplication *gapplication
</SIGNAL>

<SIGNAL>
<NAME>GApplication::command-line</NAME>
<RETURNS>gint</RETURNS>
<FLAGS>l</FLAGS>
GApplication *gapplication
GApplicationCommandLine *arg1
</SIGNAL>

<SIGNAL>
<NAME>GApplication::handle-local-options</NAME>
<RETURNS>gint</RETURNS>
<FLAGS>l</FLAGS>
GApplication *gapplication
GVariantDict *arg1
</SIGNAL>

<SIGNAL>
<NAME>GApplication::open</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GApplication *gapplication
gpointer  arg1
gint  arg2
gchar *arg3
</SIGNAL>

<SIGNAL>
<NAME>GApplication::shutdown</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GApplication *gapplication
</SIGNAL>

<SIGNAL>
<NAME>GApplication::startup</NAME>
<RETURNS>void</RETURNS>
<FLAGS>f</FLAGS>
GApplication *gapplication
</SIGNAL>

<SIGNAL>
<NAME>GCancellable::cancelled</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GCancellable *gcancellable
</SIGNAL>

<SIGNAL>
<NAME>GDBusAuthObserver::allow-mechanism</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GDBusAuthObserver *gdbusauthobserver
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GDBusAuthObserver::authorize-authenticated-peer</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GDBusAuthObserver *gdbusauthobserver
GIOStream *arg1
GCredentials *arg2
</SIGNAL>

<SIGNAL>
<NAME>GDBusConnection::closed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusConnection *gdbusconnection
gboolean  arg1
GError *arg2
</SIGNAL>

<SIGNAL>
<NAME>GDBusInterfaceSkeleton::g-authorize-method</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GDBusInterfaceSkeleton *gdbusinterfaceskeleton
GDBusMethodInvocation *arg1
</SIGNAL>

<SIGNAL>
<NAME>GDBusObject::interface-added</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusObject *gdbusobject
GDBusInterface *arg1
</SIGNAL>

<SIGNAL>
<NAME>GDBusObject::interface-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusObject *gdbusobject
GDBusInterface *arg1
</SIGNAL>

<SIGNAL>
<NAME>GDBusObjectManagerClient::interface-proxy-properties-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusObjectManagerClient *gdbusobjectmanagerclient
GDBusObjectProxy *arg1
GDBusProxy *arg2
GVariant *arg3
GStrv  arg4
</SIGNAL>

<SIGNAL>
<NAME>GDBusObjectManagerClient::interface-proxy-signal</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusObjectManagerClient *gdbusobjectmanagerclient
GDBusObjectProxy *arg1
GDBusProxy *arg2
gchar *arg3
gchar *arg4
GVariant *arg5
</SIGNAL>

<SIGNAL>
<NAME>GDBusObjectManager::interface-added</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusObjectManager *gdbusobjectmanager
GDBusObject *arg1
GDBusInterface *arg2
</SIGNAL>

<SIGNAL>
<NAME>GDBusObjectManager::interface-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusObjectManager *gdbusobjectmanager
GDBusObject *arg1
GDBusInterface *arg2
</SIGNAL>

<SIGNAL>
<NAME>GDBusObjectManager::object-added</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusObjectManager *gdbusobjectmanager
GDBusObject *arg1
</SIGNAL>

<SIGNAL>
<NAME>GDBusObjectManager::object-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusObjectManager *gdbusobjectmanager
GDBusObject *arg1
</SIGNAL>

<SIGNAL>
<NAME>GDBusObjectSkeleton::authorize-method</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GDBusObjectSkeleton *gdbusobjectskeleton
GDBusInterfaceSkeleton *arg1
GDBusMethodInvocation *arg2
</SIGNAL>

<SIGNAL>
<NAME>GDBusProxy::g-properties-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusProxy *gdbusproxy
GVariant *arg1
GStrv  arg2
</SIGNAL>

<SIGNAL>
<NAME>GDBusProxy::g-signal</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDBusProxy *gdbusproxy
gchar *arg1
gchar *arg2
GVariant *arg3
</SIGNAL>

<SIGNAL>
<NAME>GDBusServer::new-connection</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GDBusServer *gdbusserver
GDBusConnection *arg1
</SIGNAL>

<SIGNAL>
<NAME>GDrive::changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDrive *gdrive
</SIGNAL>

<SIGNAL>
<NAME>GDrive::disconnected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDrive *gdrive
</SIGNAL>

<SIGNAL>
<NAME>GDrive::eject-button</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDrive *gdrive
</SIGNAL>

<SIGNAL>
<NAME>GDrive::stop-button</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GDrive *gdrive
</SIGNAL>

<SIGNAL>
<NAME>GDtlsConnection::accept-certificate</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GDtlsConnection *gdtlsconnection
GTlsCertificate *arg1
GTlsCertificateFlags  arg2
</SIGNAL>

<SIGNAL>
<NAME>GFileMonitor::changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GFileMonitor *gfilemonitor
GFile *arg1
GFile *arg2
GFileMonitorEvent  arg3
</SIGNAL>

<SIGNAL>
<NAME>GFilenameCompleter::got-completion-data</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GFilenameCompleter *gfilenamecompleter
</SIGNAL>

<SIGNAL>
<NAME>GListModel::items-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GListModel *glistmodel
guint  arg1
guint  arg2
guint  arg3
</SIGNAL>

<SIGNAL>
<NAME>GMenuModel::items-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMenuModel *gmenumodel
gint  arg1
gint  arg2
gint  arg3
</SIGNAL>

<SIGNAL>
<NAME>GMount::changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMount *gmount
</SIGNAL>

<SIGNAL>
<NAME>GMount::pre-unmount</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMount *gmount
</SIGNAL>

<SIGNAL>
<NAME>GMount::unmounted</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMount *gmount
</SIGNAL>

<SIGNAL>
<NAME>GMountOperation::aborted</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMountOperation *gmountoperation
</SIGNAL>

<SIGNAL>
<NAME>GMountOperation::ask-password</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMountOperation *gmountoperation
gchar *arg1
gchar *arg2
gchar *arg3
GAskPasswordFlags  arg4
</SIGNAL>

<SIGNAL>
<NAME>GMountOperation::ask-question</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMountOperation *gmountoperation
gchar *arg1
GStrv  arg2
</SIGNAL>

<SIGNAL>
<NAME>GMountOperation::reply</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMountOperation *gmountoperation
GMountOperationResult  arg1
</SIGNAL>

<SIGNAL>
<NAME>GMountOperation::show-processes</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMountOperation *gmountoperation
gchar *arg1
GArray *arg2
GStrv  arg3
</SIGNAL>

<SIGNAL>
<NAME>GMountOperation::show-unmount-progress</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GMountOperation *gmountoperation
gchar *arg1
gint64  arg2
gint64  arg3
</SIGNAL>

<SIGNAL>
<NAME>GNetworkMonitor::network-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GNetworkMonitor *gnetworkmonitor
gboolean  arg1
</SIGNAL>

<SIGNAL>
<NAME>GResolver::reload</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GResolver *gresolver
</SIGNAL>

<SIGNAL>
<NAME>GSettings::change-event</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GSettings *gsettings
gpointer  arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GSettings::changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>ld</FLAGS>
GSettings *gsettings
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GSettings::writable-change-event</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GSettings *gsettings
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GSettings::writable-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>ld</FLAGS>
GSettings *gsettings
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GSimpleAction::activate</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GSimpleAction *gsimpleaction
GVariant *arg1
</SIGNAL>

<SIGNAL>
<NAME>GSimpleAction::change-state</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GSimpleAction *gsimpleaction
GVariant *arg1
</SIGNAL>

<SIGNAL>
<NAME>GSocketClient::event</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GSocketClient *gsocketclient
GSocketClientEvent  arg1
GSocketConnectable *arg2
GIOStream *arg3
</SIGNAL>

<SIGNAL>
<NAME>GSocketListener::event</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GSocketListener *gsocketlistener
GSocketListenerEvent  arg1
GSocket *arg2
</SIGNAL>

<SIGNAL>
<NAME>GSocketService::incoming</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GSocketService *gsocketservice
GSocketConnection *arg1
GObject *arg2
</SIGNAL>

<SIGNAL>
<NAME>GThreadedSocketService::run</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GThreadedSocketService *gthreadedsocketservice
GSocketConnection *arg1
GObject *arg2
</SIGNAL>

<SIGNAL>
<NAME>GTlsConnection::accept-certificate</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GTlsConnection *gtlsconnection
GTlsCertificate *arg1
GTlsCertificateFlags  arg2
</SIGNAL>

<SIGNAL>
<NAME>GUnixMountMonitor::mountpoints-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GUnixMountMonitor *gunixmountmonitor
</SIGNAL>

<SIGNAL>
<NAME>GUnixMountMonitor::mounts-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GUnixMountMonitor *gunixmountmonitor
</SIGNAL>

<SIGNAL>
<NAME>GVolume::changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolume *gvolume
</SIGNAL>

<SIGNAL>
<NAME>GVolume::removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolume *gvolume
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::drive-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GDrive *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::drive-connected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GDrive *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::drive-disconnected</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GDrive *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::drive-eject-button</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GDrive *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::drive-stop-button</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GDrive *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::mount-added</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GMount *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::mount-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GMount *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::mount-pre-unmount</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GMount *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::mount-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GMount *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::volume-added</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GVolume *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::volume-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GVolume *arg1
</SIGNAL>

<SIGNAL>
<NAME>GVolumeMonitor::volume-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GVolumeMonitor *gvolumemonitor
GVolume *arg1
</SIGNAL>

